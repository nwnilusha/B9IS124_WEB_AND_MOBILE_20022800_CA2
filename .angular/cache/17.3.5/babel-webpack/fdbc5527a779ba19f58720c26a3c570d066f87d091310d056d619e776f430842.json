{"ast":null,"code":"import { PreloadAllModules, RouterModule } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: '',\n  redirectTo: 'loader',\n  pathMatch: 'full'\n}, {\n  path: 'loader',\n  loadChildren: () => import('./pages/loader/loader.module').then(m => m.LoaderPageModule)\n}, {\n  path: 'login',\n  loadChildren: () => import('./pages/login/login.module').then(m => m.LoginPageModule)\n}, {\n  path: 'register',\n  loadChildren: () => import('./pages/register/register.module').then(m => m.RegisterPageModule)\n}, {\n  path: 'home',\n  loadChildren: () => import('./pages/home/home.module').then(m => m.HomePageModule)\n}, {\n  path: 'weather',\n  loadChildren: () => import('./pages/weather/weather.module').then(m => m.WeatherPageModule)\n}, {\n  path: 'locations',\n  loadChildren: () => import('./pages/locations/locations.module').then(m => m.LocationsPageModule)\n}, {\n  path: 'details',\n  loadChildren: () => import('./details/details.module').then(m => m.DetailsPageModule)\n}, {\n  path: 'reset-password',\n  loadChildren: () => import('./pages/reset-password/reset-password.module').then(m => m.ResetPasswordPageModule)\n}, {\n  path: 'maps',\n  loadChildren: () => import('./pages/maps/maps.module').then(m => m.MapsPageModule)\n}, {\n  path: 'camera',\n  loadChildren: () => import('./pages/camera/camera.module').then(m => m.CameraPageModule)\n}, {\n  path: 'resetpassword',\n  loadChildren: () => import('./pages/resetpassword/resetpassword.module').then(m => m.ResetpasswordPageModule)\n}];\nexport let AppRoutingModule = /*#__PURE__*/(() => {\n  class AppRoutingModule {\n    static #_ = this.ɵfac = function AppRoutingModule_Factory(t) {\n      return new (t || AppRoutingModule)();\n    };\n    static #_2 = this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: AppRoutingModule\n    });\n    static #_3 = this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      imports: [RouterModule.forRoot(routes, {\n        preloadingStrategy: PreloadAllModules\n      }), RouterModule]\n    });\n  }\n  return AppRoutingModule;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}