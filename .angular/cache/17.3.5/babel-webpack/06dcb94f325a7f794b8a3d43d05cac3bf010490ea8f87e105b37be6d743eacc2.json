{"ast":null,"code":"import _asyncToGenerator from \"/Users/nilushawimalasena/Documents/DBS_MSc/Semestor 01/Web and Mobile/CA2/B9IS124_WEB_AND_MOBILE_20022800_CA2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*!\n Stencil Mock Doc v4.17.1 | MIT Licensed | https://stenciljs.com\n */\n\n// src/runtime/runtime-constants.ts\nvar CONTENT_REF_ID = \"r\";\nvar ORG_LOCATION_ID = \"o\";\nvar SLOT_NODE_ID = \"s\";\nvar TEXT_NODE_ID = \"t\";\nvar XLINK_NS = \"http://www.w3.org/1999/xlink\";\n\n// src/mock-doc/attribute.ts\nvar attrHandler = {\n  get(obj, prop) {\n    if (prop in obj) {\n      return obj[prop];\n    }\n    if (typeof prop !== \"symbol\" && !isNaN(prop)) {\n      return obj.__items[prop];\n    }\n    return void 0;\n  }\n};\nvar createAttributeProxy = caseInsensitive => new Proxy(new MockAttributeMap(caseInsensitive), attrHandler);\nvar MockAttributeMap = class {\n  constructor(caseInsensitive = false) {\n    this.caseInsensitive = caseInsensitive;\n    this.__items = [];\n  }\n  get length() {\n    return this.__items.length;\n  }\n  item(index) {\n    return this.__items[index] || null;\n  }\n  setNamedItem(attr) {\n    attr.namespaceURI = null;\n    this.setNamedItemNS(attr);\n  }\n  setNamedItemNS(attr) {\n    if (attr != null && attr.value != null) {\n      attr.value = String(attr.value);\n    }\n    const existingAttr = this.__items.find(a => a.name === attr.name && a.namespaceURI === attr.namespaceURI);\n    if (existingAttr != null) {\n      existingAttr.value = attr.value;\n    } else {\n      this.__items.push(attr);\n    }\n  }\n  getNamedItem(attrName) {\n    if (this.caseInsensitive) {\n      attrName = attrName.toLowerCase();\n    }\n    return this.getNamedItemNS(null, attrName);\n  }\n  getNamedItemNS(namespaceURI, attrName) {\n    namespaceURI = getNamespaceURI(namespaceURI);\n    return this.__items.find(attr => attr.name === attrName && getNamespaceURI(attr.namespaceURI) === namespaceURI) || null;\n  }\n  removeNamedItem(attr) {\n    this.removeNamedItemNS(attr);\n  }\n  removeNamedItemNS(attr) {\n    for (let i = 0, ii = this.__items.length; i < ii; i++) {\n      if (this.__items[i].name === attr.name && this.__items[i].namespaceURI === attr.namespaceURI) {\n        this.__items.splice(i, 1);\n        break;\n      }\n    }\n  }\n  [Symbol.iterator]() {\n    let i = 0;\n    return {\n      next: () => ({\n        done: i === this.length,\n        value: this.item(i++)\n      })\n    };\n  }\n  get [Symbol.toStringTag]() {\n    return \"MockAttributeMap\";\n  }\n};\nfunction getNamespaceURI(namespaceURI) {\n  return namespaceURI === XLINK_NS ? null : namespaceURI;\n}\nfunction cloneAttributes(srcAttrs, sortByName = false) {\n  const dstAttrs = new MockAttributeMap(srcAttrs.caseInsensitive);\n  if (srcAttrs != null) {\n    const attrLen = srcAttrs.length;\n    if (sortByName && attrLen > 1) {\n      const sortedAttrs = [];\n      for (let i = 0; i < attrLen; i++) {\n        const srcAttr = srcAttrs.item(i);\n        const dstAttr = new MockAttr(srcAttr.name, srcAttr.value, srcAttr.namespaceURI);\n        sortedAttrs.push(dstAttr);\n      }\n      sortedAttrs.sort(sortAttributes).forEach(attr => {\n        dstAttrs.setNamedItemNS(attr);\n      });\n    } else {\n      for (let i = 0; i < attrLen; i++) {\n        const srcAttr = srcAttrs.item(i);\n        const dstAttr = new MockAttr(srcAttr.name, srcAttr.value, srcAttr.namespaceURI);\n        dstAttrs.setNamedItemNS(dstAttr);\n      }\n    }\n  }\n  return dstAttrs;\n}\nfunction sortAttributes(a, b) {\n  if (a.name < b.name) return -1;\n  if (a.name > b.name) return 1;\n  return 0;\n}\nvar MockAttr = class {\n  constructor(attrName, attrValue, namespaceURI = null) {\n    this._name = attrName;\n    this._value = String(attrValue);\n    this._namespaceURI = namespaceURI;\n  }\n  get name() {\n    return this._name;\n  }\n  set name(value) {\n    this._name = value;\n  }\n  get value() {\n    return this._value;\n  }\n  set value(value) {\n    this._value = String(value);\n  }\n  get nodeName() {\n    return this._name;\n  }\n  set nodeName(value) {\n    this._name = value;\n  }\n  get nodeValue() {\n    return this._value;\n  }\n  set nodeValue(value) {\n    this._value = String(value);\n  }\n  get namespaceURI() {\n    return this._namespaceURI;\n  }\n  set namespaceURI(namespaceURI) {\n    this._namespaceURI = namespaceURI;\n  }\n};\n\n// src/mock-doc/constants.ts\nvar NODE_TYPES = /* @__PURE__ */(NODE_TYPES2 => {\n  NODE_TYPES2[NODE_TYPES2[\"ELEMENT_NODE\"] = 1] = \"ELEMENT_NODE\";\n  NODE_TYPES2[NODE_TYPES2[\"ATTRIBUTE_NODE\"] = 2] = \"ATTRIBUTE_NODE\";\n  NODE_TYPES2[NODE_TYPES2[\"TEXT_NODE\"] = 3] = \"TEXT_NODE\";\n  NODE_TYPES2[NODE_TYPES2[\"CDATA_SECTION_NODE\"] = 4] = \"CDATA_SECTION_NODE\";\n  NODE_TYPES2[NODE_TYPES2[\"ENTITY_REFERENCE_NODE\"] = 5] = \"ENTITY_REFERENCE_NODE\";\n  NODE_TYPES2[NODE_TYPES2[\"ENTITY_NODE\"] = 6] = \"ENTITY_NODE\";\n  NODE_TYPES2[NODE_TYPES2[\"PROCESSING_INSTRUCTION_NODE\"] = 7] = \"PROCESSING_INSTRUCTION_NODE\";\n  NODE_TYPES2[NODE_TYPES2[\"COMMENT_NODE\"] = 8] = \"COMMENT_NODE\";\n  NODE_TYPES2[NODE_TYPES2[\"DOCUMENT_NODE\"] = 9] = \"DOCUMENT_NODE\";\n  NODE_TYPES2[NODE_TYPES2[\"DOCUMENT_TYPE_NODE\"] = 10] = \"DOCUMENT_TYPE_NODE\";\n  NODE_TYPES2[NODE_TYPES2[\"DOCUMENT_FRAGMENT_NODE\"] = 11] = \"DOCUMENT_FRAGMENT_NODE\";\n  NODE_TYPES2[NODE_TYPES2[\"NOTATION_NODE\"] = 12] = \"NOTATION_NODE\";\n  return NODE_TYPES2;\n})(NODE_TYPES || {});\n\n// src/mock-doc/class-list.ts\nvar MockClassList = class {\n  constructor(elm) {\n    this.elm = elm;\n  }\n  add(...classNames) {\n    const clsNames = getItems(this.elm);\n    let updated = false;\n    classNames.forEach(className => {\n      className = String(className);\n      validateClass(className);\n      if (clsNames.includes(className) === false) {\n        clsNames.push(className);\n        updated = true;\n      }\n    });\n    if (updated) {\n      this.elm.setAttributeNS(null, \"class\", clsNames.join(\" \"));\n    }\n  }\n  remove(...classNames) {\n    const clsNames = getItems(this.elm);\n    let updated = false;\n    classNames.forEach(className => {\n      className = String(className);\n      validateClass(className);\n      const index = clsNames.indexOf(className);\n      if (index > -1) {\n        clsNames.splice(index, 1);\n        updated = true;\n      }\n    });\n    if (updated) {\n      this.elm.setAttributeNS(null, \"class\", clsNames.filter(c => c.length > 0).join(\" \"));\n    }\n  }\n  contains(className) {\n    className = String(className);\n    return getItems(this.elm).includes(className);\n  }\n  toggle(className) {\n    className = String(className);\n    if (this.contains(className) === true) {\n      this.remove(className);\n    } else {\n      this.add(className);\n    }\n  }\n  get length() {\n    return getItems(this.elm).length;\n  }\n  item(index) {\n    return getItems(this.elm)[index];\n  }\n  toString() {\n    return getItems(this.elm).join(\" \");\n  }\n};\nfunction validateClass(className) {\n  if (className === \"\") {\n    throw new Error(\"The token provided must not be empty.\");\n  }\n  if (/\\s/.test(className)) {\n    throw new Error(`The token provided ('${className}') contains HTML space characters, which are not valid in tokens.`);\n  }\n}\nfunction getItems(elm) {\n  const className = elm.getAttribute(\"class\");\n  if (typeof className === \"string\" && className.length > 0) {\n    return className.trim().split(\" \").filter(c => c.length > 0);\n  }\n  return [];\n}\n\n// src/mock-doc/css-style-declaration.ts\nvar MockCSSStyleDeclaration = class {\n  constructor() {\n    this._styles = /* @__PURE__ */new Map();\n  }\n  setProperty(prop, value) {\n    prop = jsCaseToCssCase(prop);\n    if (value == null || value === \"\") {\n      this._styles.delete(prop);\n    } else {\n      this._styles.set(prop, String(value));\n    }\n  }\n  getPropertyValue(prop) {\n    prop = jsCaseToCssCase(prop);\n    return String(this._styles.get(prop) || \"\");\n  }\n  removeProperty(prop) {\n    prop = jsCaseToCssCase(prop);\n    this._styles.delete(prop);\n  }\n  get length() {\n    return this._styles.size;\n  }\n  get cssText() {\n    const cssText = [];\n    this._styles.forEach((value, prop) => {\n      cssText.push(`${prop}: ${value};`);\n    });\n    return cssText.join(\" \").trim();\n  }\n  set cssText(cssText) {\n    if (cssText == null || cssText === \"\") {\n      this._styles.clear();\n      return;\n    }\n    cssText.split(\";\").forEach(rule => {\n      rule = rule.trim();\n      if (rule.length > 0) {\n        const splt = rule.split(\":\");\n        if (splt.length > 1) {\n          const prop = splt[0].trim();\n          const value = splt.slice(1).join(\":\").trim();\n          if (prop !== \"\" && value !== \"\") {\n            this._styles.set(jsCaseToCssCase(prop), value);\n          }\n        }\n      }\n    });\n  }\n};\nfunction createCSSStyleDeclaration() {\n  return new Proxy(new MockCSSStyleDeclaration(), cssProxyHandler);\n}\nvar cssProxyHandler = {\n  get(cssStyle, prop) {\n    if (prop in cssStyle) {\n      return cssStyle[prop];\n    }\n    prop = cssCaseToJsCase(prop);\n    return cssStyle.getPropertyValue(prop);\n  },\n  set(cssStyle, prop, value) {\n    if (prop in cssStyle) {\n      cssStyle[prop] = value;\n    } else {\n      cssStyle.setProperty(prop, value);\n    }\n    return true;\n  }\n};\nfunction cssCaseToJsCase(str) {\n  if (str.length > 1 && str.includes(\"-\") === true) {\n    str = str.toLowerCase().split(\"-\").map(segment => segment.charAt(0).toUpperCase() + segment.slice(1)).join(\"\");\n    str = str.slice(0, 1).toLowerCase() + str.slice(1);\n  }\n  return str;\n}\nfunction jsCaseToCssCase(str) {\n  if (str.length > 1 && str.includes(\"-\") === false && /[A-Z]/.test(str) === true) {\n    str = str.replace(/([A-Z])/g, g => \" \" + g[0]).trim().replace(/ /g, \"-\").toLowerCase();\n  }\n  return str;\n}\n\n// src/mock-doc/custom-element-registry.ts\nvar MockCustomElementRegistry = class {\n  constructor(win) {\n    this.win = win;\n  }\n  define(tagName, cstr, options) {\n    if (tagName.toLowerCase() !== tagName) {\n      throw new Error(`Failed to execute 'define' on 'CustomElementRegistry': \"${tagName}\" is not a valid custom element name`);\n    }\n    if (this.__registry == null) {\n      this.__registry = /* @__PURE__ */new Map();\n    }\n    this.__registry.set(tagName, {\n      cstr,\n      options\n    });\n    if (this.__whenDefined != null) {\n      const whenDefinedResolveFns = this.__whenDefined.get(tagName);\n      if (whenDefinedResolveFns != null) {\n        whenDefinedResolveFns.forEach(whenDefinedResolveFn => {\n          whenDefinedResolveFn();\n        });\n        whenDefinedResolveFns.length = 0;\n        this.__whenDefined.delete(tagName);\n      }\n    }\n    const doc = this.win.document;\n    if (doc != null) {\n      const hosts = doc.querySelectorAll(tagName);\n      hosts.forEach(host => {\n        if (upgradedElements.has(host) === false) {\n          tempDisableCallbacks.add(doc);\n          const upgradedCmp = createCustomElement(this, doc, tagName);\n          for (let i = 0; i < host.childNodes.length; i++) {\n            const childNode = host.childNodes[i];\n            childNode.remove();\n            upgradedCmp.appendChild(childNode);\n          }\n          tempDisableCallbacks.delete(doc);\n          if (proxyElements.has(host)) {\n            proxyElements.set(host, upgradedCmp);\n          }\n        }\n        fireConnectedCallback(host);\n      });\n    }\n  }\n  get(tagName) {\n    if (this.__registry != null) {\n      const def = this.__registry.get(tagName.toLowerCase());\n      if (def != null) {\n        return def.cstr;\n      }\n    }\n    return void 0;\n  }\n  getName(cstr) {\n    for (const [tagName, def] of this.__registry.entries()) {\n      if (def.cstr === cstr) {\n        return tagName;\n      }\n    }\n    return void 0;\n  }\n  upgrade(_rootNode) {}\n  clear() {\n    if (this.__registry != null) {\n      this.__registry.clear();\n    }\n    if (this.__whenDefined != null) {\n      this.__whenDefined.clear();\n    }\n  }\n  whenDefined(tagName) {\n    tagName = tagName.toLowerCase();\n    if (this.__registry != null && this.__registry.has(tagName) === true) {\n      return Promise.resolve(this.__registry.get(tagName).cstr);\n    }\n    return new Promise(resolve => {\n      if (this.__whenDefined == null) {\n        this.__whenDefined = /* @__PURE__ */new Map();\n      }\n      let whenDefinedResolveFns = this.__whenDefined.get(tagName);\n      if (whenDefinedResolveFns == null) {\n        whenDefinedResolveFns = [];\n        this.__whenDefined.set(tagName, whenDefinedResolveFns);\n      }\n      whenDefinedResolveFns.push(resolve);\n    });\n  }\n};\nfunction createCustomElement(customElements, ownerDocument, tagName) {\n  const Cstr = customElements.get(tagName);\n  if (Cstr != null) {\n    const cmp = new Cstr(ownerDocument);\n    cmp.nodeName = tagName.toUpperCase();\n    upgradedElements.add(cmp);\n    return cmp;\n  }\n  const host = new Proxy({}, {\n    get(obj, prop) {\n      const elm2 = proxyElements.get(host);\n      if (elm2 != null) {\n        return elm2[prop];\n      }\n      return obj[prop];\n    },\n    set(obj, prop, val) {\n      const elm2 = proxyElements.get(host);\n      if (elm2 != null) {\n        elm2[prop] = val;\n      } else {\n        obj[prop] = val;\n      }\n      return true;\n    },\n    has(obj, prop) {\n      const elm2 = proxyElements.get(host);\n      if (prop in elm2) {\n        return true;\n      }\n      if (prop in obj) {\n        return true;\n      }\n      return false;\n    }\n  });\n  const elm = new MockHTMLElement(ownerDocument, tagName);\n  proxyElements.set(host, elm);\n  return host;\n}\nvar proxyElements = /* @__PURE__ */new WeakMap();\nvar upgradedElements = /* @__PURE__ */new WeakSet();\nfunction connectNode(ownerDocument, node) {\n  node.ownerDocument = ownerDocument;\n  if (node.nodeType === 1 /* ELEMENT_NODE */) {\n    if (ownerDocument != null && node.nodeName.includes(\"-\")) {\n      const win = ownerDocument.defaultView;\n      if (win != null && typeof node.connectedCallback === \"function\" && node.isConnected) {\n        fireConnectedCallback(node);\n      }\n      const shadowRoot = node.shadowRoot;\n      if (shadowRoot != null) {\n        shadowRoot.childNodes.forEach(childNode => {\n          connectNode(ownerDocument, childNode);\n        });\n      }\n    }\n    node.childNodes.forEach(childNode => {\n      connectNode(ownerDocument, childNode);\n    });\n  } else {\n    node.childNodes.forEach(childNode => {\n      childNode.ownerDocument = ownerDocument;\n    });\n  }\n}\nfunction fireConnectedCallback(node) {\n  if (typeof node.connectedCallback === \"function\") {\n    if (tempDisableCallbacks.has(node.ownerDocument) === false) {\n      try {\n        node.connectedCallback();\n      } catch (e2) {\n        console.error(e2);\n      }\n    }\n  }\n}\nfunction disconnectNode(node) {\n  if (node.nodeType === 1 /* ELEMENT_NODE */) {\n    if (node.nodeName.includes(\"-\") === true && typeof node.disconnectedCallback === \"function\") {\n      if (tempDisableCallbacks.has(node.ownerDocument) === false) {\n        try {\n          node.disconnectedCallback();\n        } catch (e2) {\n          console.error(e2);\n        }\n      }\n    }\n    node.childNodes.forEach(disconnectNode);\n  }\n}\nfunction attributeChanged(node, attrName, oldValue, newValue) {\n  attrName = attrName.toLowerCase();\n  const observedAttributes = node.constructor.observedAttributes;\n  if (Array.isArray(observedAttributes) === true && observedAttributes.some(obs => obs.toLowerCase() === attrName) === true) {\n    try {\n      node.attributeChangedCallback(attrName, oldValue, newValue);\n    } catch (e2) {\n      console.error(e2);\n    }\n  }\n}\nfunction checkAttributeChanged(node) {\n  return node.nodeName.includes(\"-\") === true && typeof node.attributeChangedCallback === \"function\";\n}\nvar tempDisableCallbacks = /* @__PURE__ */new Set();\n\n// src/mock-doc/dataset.ts\nfunction dataset(elm) {\n  const ds = {};\n  const attributes = elm.attributes;\n  const attrLen = attributes.length;\n  for (let i = 0; i < attrLen; i++) {\n    const attr = attributes.item(i);\n    const nodeName = attr.nodeName;\n    if (nodeName.startsWith(\"data-\")) {\n      ds[dashToPascalCase(nodeName)] = attr.nodeValue;\n    }\n  }\n  return new Proxy(ds, {\n    get(_obj, camelCaseProp) {\n      return ds[camelCaseProp];\n    },\n    set(_obj, camelCaseProp, value) {\n      const dataAttr = toDataAttribute(camelCaseProp);\n      elm.setAttribute(dataAttr, value);\n      return true;\n    }\n  });\n}\nfunction toDataAttribute(str) {\n  return \"data-\" + String(str).replace(/([A-Z0-9])/g, g => \" \" + g[0]).trim().replace(/ /g, \"-\").toLowerCase();\n}\nfunction dashToPascalCase(str) {\n  str = String(str).slice(5);\n  return str.split(\"-\").map((segment, index) => {\n    if (index === 0) {\n      return segment.charAt(0).toLowerCase() + segment.slice(1);\n    }\n    return segment.charAt(0).toUpperCase() + segment.slice(1);\n  }).join(\"\");\n}\n\n// src/mock-doc/event.ts\nvar MockEvent = class {\n  constructor(type, eventInitDict) {\n    this.bubbles = false;\n    this.cancelBubble = false;\n    this.cancelable = false;\n    this.composed = false;\n    this.currentTarget = null;\n    this.defaultPrevented = false;\n    this.srcElement = null;\n    this.target = null;\n    if (typeof type !== \"string\") {\n      throw new Error(`Event type required`);\n    }\n    this.type = type;\n    this.timeStamp = Date.now();\n    if (eventInitDict != null) {\n      Object.assign(this, eventInitDict);\n    }\n  }\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n  stopPropagation() {\n    this.cancelBubble = true;\n  }\n  stopImmediatePropagation() {\n    this.cancelBubble = true;\n  }\n  /**\n   * @ref https://developer.mozilla.org/en-US/docs/Web/API/Event/composedPath\n   * @returns a composed path of the event\n   */\n  composedPath() {\n    const composedPath = [];\n    let currentElement = this.target;\n    while (currentElement) {\n      composedPath.push(currentElement);\n      if (!currentElement.parentElement && currentElement.nodeName === \"#document\" /* DOCUMENT_NODE */) {\n        composedPath.push(currentElement.defaultView);\n        break;\n      }\n      if (currentElement.parentElement == null && currentElement.tagName === \"HTML\") {\n        currentElement = currentElement.ownerDocument;\n      } else {\n        currentElement = currentElement.parentElement;\n      }\n    }\n    return composedPath;\n  }\n};\nvar MockCustomEvent = class extends MockEvent {\n  constructor(type, customEventInitDic) {\n    super(type);\n    this.detail = null;\n    if (customEventInitDic != null) {\n      Object.assign(this, customEventInitDic);\n    }\n  }\n};\nvar MockKeyboardEvent = class extends MockEvent {\n  constructor(type, keyboardEventInitDic) {\n    super(type);\n    this.code = \"\";\n    this.key = \"\";\n    this.altKey = false;\n    this.ctrlKey = false;\n    this.metaKey = false;\n    this.shiftKey = false;\n    this.location = 0;\n    this.repeat = false;\n    if (keyboardEventInitDic != null) {\n      Object.assign(this, keyboardEventInitDic);\n    }\n  }\n};\nvar MockMouseEvent = class extends MockEvent {\n  constructor(type, mouseEventInitDic) {\n    super(type);\n    this.screenX = 0;\n    this.screenY = 0;\n    this.clientX = 0;\n    this.clientY = 0;\n    this.ctrlKey = false;\n    this.shiftKey = false;\n    this.altKey = false;\n    this.metaKey = false;\n    this.button = 0;\n    this.buttons = 0;\n    this.relatedTarget = null;\n    if (mouseEventInitDic != null) {\n      Object.assign(this, mouseEventInitDic);\n    }\n  }\n};\nvar MockUIEvent = class extends MockEvent {\n  constructor(type, uiEventInitDic) {\n    super(type);\n    this.detail = null;\n    this.view = null;\n    if (uiEventInitDic != null) {\n      Object.assign(this, uiEventInitDic);\n    }\n  }\n};\nvar MockFocusEvent = class extends MockUIEvent {\n  constructor(type, focusEventInitDic) {\n    super(type);\n    this.relatedTarget = null;\n    if (focusEventInitDic != null) {\n      Object.assign(this, focusEventInitDic);\n    }\n  }\n};\nvar MockEventListener = class {\n  constructor(type, handler) {\n    this.type = type;\n    this.handler = handler;\n  }\n};\nfunction addEventListener(elm, type, handler) {\n  const target = elm;\n  if (target.__listeners == null) {\n    target.__listeners = [];\n  }\n  target.__listeners.push(new MockEventListener(type, handler));\n}\nfunction removeEventListener(elm, type, handler) {\n  const target = elm;\n  if (target != null && Array.isArray(target.__listeners) === true) {\n    const elmListener = target.__listeners.find(e2 => e2.type === type && e2.handler === handler);\n    if (elmListener != null) {\n      const index = target.__listeners.indexOf(elmListener);\n      target.__listeners.splice(index, 1);\n    }\n  }\n}\nfunction resetEventListeners(target) {\n  if (target != null && target.__listeners != null) {\n    target.__listeners = null;\n  }\n}\nfunction triggerEventListener(elm, ev) {\n  if (elm == null || ev.cancelBubble === true) {\n    return;\n  }\n  const target = elm;\n  ev.currentTarget = elm;\n  if (Array.isArray(target.__listeners) === true) {\n    const listeners = target.__listeners.filter(e2 => e2.type === ev.type);\n    listeners.forEach(listener => {\n      try {\n        listener.handler.call(target, ev);\n      } catch (err) {\n        console.error(err);\n      }\n    });\n  }\n  if (ev.bubbles === false) {\n    return;\n  }\n  if (elm.nodeName === \"#document\" /* DOCUMENT_NODE */) {\n    triggerEventListener(elm.defaultView, ev);\n  } else if (elm.parentElement == null && elm.tagName === \"HTML\") {\n    triggerEventListener(elm.ownerDocument, ev);\n  } else {\n    triggerEventListener(elm.parentElement, ev);\n  }\n}\nfunction dispatchEvent(currentTarget, ev) {\n  ev.target = currentTarget;\n  triggerEventListener(currentTarget, ev);\n  return true;\n}\n\n// scripts/build/parse5-7_1_2-bundle-cache.min.js\nvar e = function (e2) {\n  const t = /* @__PURE__ */new Set([65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214, 393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894, 720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574, 1048575, 1114110, 1114111]),\n    s = \"\\uFFFD\";\n  var a;\n  !function (e3) {\n    e3[e3.EOF = -1] = \"EOF\", e3[e3.NULL = 0] = \"NULL\", e3[e3.TABULATION = 9] = \"TABULATION\", e3[e3.CARRIAGE_RETURN = 13] = \"CARRIAGE_RETURN\", e3[e3.LINE_FEED = 10] = \"LINE_FEED\", e3[e3.FORM_FEED = 12] = \"FORM_FEED\", e3[e3.SPACE = 32] = \"SPACE\", e3[e3.EXCLAMATION_MARK = 33] = \"EXCLAMATION_MARK\", e3[e3.QUOTATION_MARK = 34] = \"QUOTATION_MARK\", e3[e3.NUMBER_SIGN = 35] = \"NUMBER_SIGN\", e3[e3.AMPERSAND = 38] = \"AMPERSAND\", e3[e3.APOSTROPHE = 39] = \"APOSTROPHE\", e3[e3.HYPHEN_MINUS = 45] = \"HYPHEN_MINUS\", e3[e3.SOLIDUS = 47] = \"SOLIDUS\", e3[e3.DIGIT_0 = 48] = \"DIGIT_0\", e3[e3.DIGIT_9 = 57] = \"DIGIT_9\", e3[e3.SEMICOLON = 59] = \"SEMICOLON\", e3[e3.LESS_THAN_SIGN = 60] = \"LESS_THAN_SIGN\", e3[e3.EQUALS_SIGN = 61] = \"EQUALS_SIGN\", e3[e3.GREATER_THAN_SIGN = 62] = \"GREATER_THAN_SIGN\", e3[e3.QUESTION_MARK = 63] = \"QUESTION_MARK\", e3[e3.LATIN_CAPITAL_A = 65] = \"LATIN_CAPITAL_A\", e3[e3.LATIN_CAPITAL_F = 70] = \"LATIN_CAPITAL_F\", e3[e3.LATIN_CAPITAL_X = 88] = \"LATIN_CAPITAL_X\", e3[e3.LATIN_CAPITAL_Z = 90] = \"LATIN_CAPITAL_Z\", e3[e3.RIGHT_SQUARE_BRACKET = 93] = \"RIGHT_SQUARE_BRACKET\", e3[e3.GRAVE_ACCENT = 96] = \"GRAVE_ACCENT\", e3[e3.LATIN_SMALL_A = 97] = \"LATIN_SMALL_A\", e3[e3.LATIN_SMALL_F = 102] = \"LATIN_SMALL_F\", e3[e3.LATIN_SMALL_X = 120] = \"LATIN_SMALL_X\", e3[e3.LATIN_SMALL_Z = 122] = \"LATIN_SMALL_Z\", e3[e3.REPLACEMENT_CHARACTER = 65533] = \"REPLACEMENT_CHARACTER\";\n  }(a = a || (a = {}));\n  const r = \"[CDATA[\",\n    n = \"doctype\",\n    i = \"script\";\n  function o(e3) {\n    return e3 >= 55296 && e3 <= 57343;\n  }\n  function c(e3) {\n    return 32 !== e3 && 10 !== e3 && 13 !== e3 && 9 !== e3 && 12 !== e3 && e3 >= 1 && e3 <= 31 || e3 >= 127 && e3 <= 159;\n  }\n  function E(e3) {\n    return e3 >= 64976 && e3 <= 65007 || t.has(e3);\n  }\n  var T, h;\n  !function (e3) {\n    e3.controlCharacterInInputStream = \"control-character-in-input-stream\", e3.noncharacterInInputStream = \"noncharacter-in-input-stream\", e3.surrogateInInputStream = \"surrogate-in-input-stream\", e3.nonVoidHtmlElementStartTagWithTrailingSolidus = \"non-void-html-element-start-tag-with-trailing-solidus\", e3.endTagWithAttributes = \"end-tag-with-attributes\", e3.endTagWithTrailingSolidus = \"end-tag-with-trailing-solidus\", e3.unexpectedSolidusInTag = \"unexpected-solidus-in-tag\", e3.unexpectedNullCharacter = \"unexpected-null-character\", e3.unexpectedQuestionMarkInsteadOfTagName = \"unexpected-question-mark-instead-of-tag-name\", e3.invalidFirstCharacterOfTagName = \"invalid-first-character-of-tag-name\", e3.unexpectedEqualsSignBeforeAttributeName = \"unexpected-equals-sign-before-attribute-name\", e3.missingEndTagName = \"missing-end-tag-name\", e3.unexpectedCharacterInAttributeName = \"unexpected-character-in-attribute-name\", e3.unknownNamedCharacterReference = \"unknown-named-character-reference\", e3.missingSemicolonAfterCharacterReference = \"missing-semicolon-after-character-reference\", e3.unexpectedCharacterAfterDoctypeSystemIdentifier = \"unexpected-character-after-doctype-system-identifier\", e3.unexpectedCharacterInUnquotedAttributeValue = \"unexpected-character-in-unquoted-attribute-value\", e3.eofBeforeTagName = \"eof-before-tag-name\", e3.eofInTag = \"eof-in-tag\", e3.missingAttributeValue = \"missing-attribute-value\", e3.missingWhitespaceBetweenAttributes = \"missing-whitespace-between-attributes\", e3.missingWhitespaceAfterDoctypePublicKeyword = \"missing-whitespace-after-doctype-public-keyword\", e3.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers = \"missing-whitespace-between-doctype-public-and-system-identifiers\", e3.missingWhitespaceAfterDoctypeSystemKeyword = \"missing-whitespace-after-doctype-system-keyword\", e3.missingQuoteBeforeDoctypePublicIdentifier = \"missing-quote-before-doctype-public-identifier\", e3.missingQuoteBeforeDoctypeSystemIdentifier = \"missing-quote-before-doctype-system-identifier\", e3.missingDoctypePublicIdentifier = \"missing-doctype-public-identifier\", e3.missingDoctypeSystemIdentifier = \"missing-doctype-system-identifier\", e3.abruptDoctypePublicIdentifier = \"abrupt-doctype-public-identifier\", e3.abruptDoctypeSystemIdentifier = \"abrupt-doctype-system-identifier\", e3.cdataInHtmlContent = \"cdata-in-html-content\", e3.incorrectlyOpenedComment = \"incorrectly-opened-comment\", e3.eofInScriptHtmlCommentLikeText = \"eof-in-script-html-comment-like-text\", e3.eofInDoctype = \"eof-in-doctype\", e3.nestedComment = \"nested-comment\", e3.abruptClosingOfEmptyComment = \"abrupt-closing-of-empty-comment\", e3.eofInComment = \"eof-in-comment\", e3.incorrectlyClosedComment = \"incorrectly-closed-comment\", e3.eofInCdata = \"eof-in-cdata\", e3.absenceOfDigitsInNumericCharacterReference = \"absence-of-digits-in-numeric-character-reference\", e3.nullCharacterReference = \"null-character-reference\", e3.surrogateCharacterReference = \"surrogate-character-reference\", e3.characterReferenceOutsideUnicodeRange = \"character-reference-outside-unicode-range\", e3.controlCharacterReference = \"control-character-reference\", e3.noncharacterCharacterReference = \"noncharacter-character-reference\", e3.missingWhitespaceBeforeDoctypeName = \"missing-whitespace-before-doctype-name\", e3.missingDoctypeName = \"missing-doctype-name\", e3.invalidCharacterSequenceAfterDoctypeName = \"invalid-character-sequence-after-doctype-name\", e3.duplicateAttribute = \"duplicate-attribute\", e3.nonConformingDoctype = \"non-conforming-doctype\", e3.missingDoctype = \"missing-doctype\", e3.misplacedDoctype = \"misplaced-doctype\", e3.endTagWithoutMatchingOpenElement = \"end-tag-without-matching-open-element\", e3.closingOfElementWithOpenChildElements = \"closing-of-element-with-open-child-elements\", e3.disallowedContentInNoscriptInHead = \"disallowed-content-in-noscript-in-head\", e3.openElementsLeftAfterEof = \"open-elements-left-after-eof\", e3.abandonedHeadElementChild = \"abandoned-head-element-child\", e3.misplacedStartTagForHeadElement = \"misplaced-start-tag-for-head-element\", e3.nestedNoscriptInHead = \"nested-noscript-in-head\", e3.eofInElementThatCanContainOnlyText = \"eof-in-element-that-can-contain-only-text\";\n  }(T = T || (T = {}));\n  class _ {\n    constructor(e3) {\n      this.handler = e3, this.html = \"\", this.pos = -1, this.lastGapPos = -2, this.gapStack = [], this.skipNextNewLine = false, this.lastChunkWritten = false, this.endOfChunkHit = false, this.bufferWaterline = 65536, this.isEol = false, this.lineStartPos = 0, this.droppedBufferSize = 0, this.line = 1, this.lastErrOffset = -1;\n    }\n    get col() {\n      return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);\n    }\n    get offset() {\n      return this.droppedBufferSize + this.pos;\n    }\n    getError(e3) {\n      const {\n        line: t2,\n        col: s2,\n        offset: a2\n      } = this;\n      return {\n        code: e3,\n        startLine: t2,\n        endLine: t2,\n        startCol: s2,\n        endCol: s2,\n        startOffset: a2,\n        endOffset: a2\n      };\n    }\n    _err(e3) {\n      this.handler.onParseError && this.lastErrOffset !== this.offset && (this.lastErrOffset = this.offset, this.handler.onParseError(this.getError(e3)));\n    }\n    _addGap() {\n      this.gapStack.push(this.lastGapPos), this.lastGapPos = this.pos;\n    }\n    _processSurrogate(e3) {\n      if (this.pos !== this.html.length - 1) {\n        const t2 = this.html.charCodeAt(this.pos + 1);\n        if (function (e4) {\n          return e4 >= 56320 && e4 <= 57343;\n        }(t2)) return this.pos++, this._addGap(), 1024 * (e3 - 55296) + 9216 + t2;\n      } else if (!this.lastChunkWritten) return this.endOfChunkHit = true, a.EOF;\n      return this._err(T.surrogateInInputStream), e3;\n    }\n    willDropParsedChunk() {\n      return this.pos > this.bufferWaterline;\n    }\n    dropParsedChunk() {\n      this.willDropParsedChunk() && (this.html = this.html.substring(this.pos), this.lineStartPos -= this.pos, this.droppedBufferSize += this.pos, this.pos = 0, this.lastGapPos = -2, this.gapStack.length = 0);\n    }\n    write(e3, t2) {\n      this.html.length > 0 ? this.html += e3 : this.html = e3, this.endOfChunkHit = false, this.lastChunkWritten = t2;\n    }\n    insertHtmlAtCurrentPos(e3) {\n      this.html = this.html.substring(0, this.pos + 1) + e3 + this.html.substring(this.pos + 1), this.endOfChunkHit = false;\n    }\n    startsWith(e3, t2) {\n      if (this.pos + e3.length > this.html.length) return this.endOfChunkHit = !this.lastChunkWritten, false;\n      if (t2) return this.html.startsWith(e3, this.pos);\n      for (let t3 = 0; t3 < e3.length; t3++) if ((32 | this.html.charCodeAt(this.pos + t3)) !== e3.charCodeAt(t3)) return false;\n      return true;\n    }\n    peek(e3) {\n      const t2 = this.pos + e3;\n      if (t2 >= this.html.length) return this.endOfChunkHit = !this.lastChunkWritten, a.EOF;\n      const s2 = this.html.charCodeAt(t2);\n      return s2 === a.CARRIAGE_RETURN ? a.LINE_FEED : s2;\n    }\n    advance() {\n      if (this.pos++, this.isEol && (this.isEol = false, this.line++, this.lineStartPos = this.pos), this.pos >= this.html.length) return this.endOfChunkHit = !this.lastChunkWritten, a.EOF;\n      let e3 = this.html.charCodeAt(this.pos);\n      return e3 === a.CARRIAGE_RETURN ? (this.isEol = true, this.skipNextNewLine = true, a.LINE_FEED) : e3 === a.LINE_FEED && (this.isEol = true, this.skipNextNewLine) ? (this.line--, this.skipNextNewLine = false, this._addGap(), this.advance()) : (this.skipNextNewLine = false, o(e3) && (e3 = this._processSurrogate(e3)), null === this.handler.onParseError || e3 > 31 && e3 < 127 || e3 === a.LINE_FEED || e3 === a.CARRIAGE_RETURN || e3 > 159 && e3 < 64976 || this._checkForProblematicCharacters(e3), e3);\n    }\n    _checkForProblematicCharacters(e3) {\n      c(e3) ? this._err(T.controlCharacterInInputStream) : E(e3) && this._err(T.noncharacterInInputStream);\n    }\n    retreat(e3) {\n      for (this.pos -= e3; this.pos < this.lastGapPos;) this.lastGapPos = this.gapStack.pop(), this.pos--;\n      this.isEol = false;\n    }\n  }\n  function A(e3, t2) {\n    for (let s2 = e3.attrs.length - 1; s2 >= 0; s2--) if (e3.attrs[s2].name === t2) return e3.attrs[s2].value;\n    return null;\n  }\n  !function (e3) {\n    e3[e3.CHARACTER = 0] = \"CHARACTER\", e3[e3.NULL_CHARACTER = 1] = \"NULL_CHARACTER\", e3[e3.WHITESPACE_CHARACTER = 2] = \"WHITESPACE_CHARACTER\", e3[e3.START_TAG = 3] = \"START_TAG\", e3[e3.END_TAG = 4] = \"END_TAG\", e3[e3.COMMENT = 5] = \"COMMENT\", e3[e3.DOCTYPE = 6] = \"DOCTYPE\", e3[e3.EOF = 7] = \"EOF\", e3[e3.HIBERNATION = 8] = \"HIBERNATION\";\n  }(h = h || (h = {}));\n  var l = \"undefined\" != typeof globalThis ? globalThis : \"undefined\" != typeof window ? window : \"undefined\" != typeof global ? global : \"undefined\" != typeof self ? self : {},\n    m = {},\n    d = {};\n  Object.defineProperty(d, \"__esModule\", {\n    value: true\n  }), d.default = new Uint16Array('\\u1D41<\\xD5\\u0131\\u028A\\u049D\\u057B\\u05D0\\u0675\\u06DE\\u07A2\\u07D6\\u080F\\u0A4A\\u0A91\\u0DA1\\u0E6D\\u0F09\\u0F26\\u10CA\\u1228\\u12E1\\u1415\\u149D\\u14C3\\u14DF\\u1525\\0\\0\\0\\0\\0\\0\\u156B\\u16CD\\u198D\\u1C12\\u1DDD\\u1F7E\\u2060\\u21B0\\u228D\\u23C0\\u23FB\\u2442\\u2824\\u2912\\u2D08\\u2E48\\u2FCE\\u3016\\u32BA\\u3639\\u37AC\\u38FE\\u3A28\\u3A71\\u3AE0\\u3B2E\\u0800EMabcfglmnoprstu\\\\bfms\\x7F\\x84\\x8B\\x90\\x95\\x98\\xA6\\xB3\\xB9\\xC8\\xCFlig\\u803B\\xC6\\u40C6P\\u803B&\\u4026cute\\u803B\\xC1\\u40C1reve;\\u4102\\u0100iyx}rc\\u803B\\xC2\\u40C2;\\u4410r;\\uC000\\u{1D504}rave\\u803B\\xC0\\u40C0pha;\\u4391acr;\\u4100d;\\u6A53\\u0100gp\\x9D\\xA1on;\\u4104f;\\uC000\\u{1D538}plyFunction;\\u6061ing\\u803B\\xC5\\u40C5\\u0100cs\\xBE\\xC3r;\\uC000\\u{1D49C}ign;\\u6254ilde\\u803B\\xC3\\u40C3ml\\u803B\\xC4\\u40C4\\u0400aceforsu\\xE5\\xFB\\xFE\\u0117\\u011C\\u0122\\u0127\\u012A\\u0100cr\\xEA\\xF2kslash;\\u6216\\u0176\\xF6\\xF8;\\u6AE7ed;\\u6306y;\\u4411\\u0180crt\\u0105\\u010B\\u0114ause;\\u6235noullis;\\u612Ca;\\u4392r;\\uC000\\u{1D505}pf;\\uC000\\u{1D539}eve;\\u42D8c\\xF2\\u0113mpeq;\\u624E\\u0700HOacdefhilorsu\\u014D\\u0151\\u0156\\u0180\\u019E\\u01A2\\u01B5\\u01B7\\u01BA\\u01DC\\u0215\\u0273\\u0278\\u027Ecy;\\u4427PY\\u803B\\xA9\\u40A9\\u0180cpy\\u015D\\u0162\\u017Aute;\\u4106\\u0100;i\\u0167\\u0168\\u62D2talDifferentialD;\\u6145leys;\\u612D\\u0200aeio\\u0189\\u018E\\u0194\\u0198ron;\\u410Cdil\\u803B\\xC7\\u40C7rc;\\u4108nint;\\u6230ot;\\u410A\\u0100dn\\u01A7\\u01ADilla;\\u40B8terDot;\\u40B7\\xF2\\u017Fi;\\u43A7rcle\\u0200DMPT\\u01C7\\u01CB\\u01D1\\u01D6ot;\\u6299inus;\\u6296lus;\\u6295imes;\\u6297o\\u0100cs\\u01E2\\u01F8kwiseContourIntegral;\\u6232eCurly\\u0100DQ\\u0203\\u020FoubleQuote;\\u601Duote;\\u6019\\u0200lnpu\\u021E\\u0228\\u0247\\u0255on\\u0100;e\\u0225\\u0226\\u6237;\\u6A74\\u0180git\\u022F\\u0236\\u023Aruent;\\u6261nt;\\u622FourIntegral;\\u622E\\u0100fr\\u024C\\u024E;\\u6102oduct;\\u6210nterClockwiseContourIntegral;\\u6233oss;\\u6A2Fcr;\\uC000\\u{1D49E}p\\u0100;C\\u0284\\u0285\\u62D3ap;\\u624D\\u0580DJSZacefios\\u02A0\\u02AC\\u02B0\\u02B4\\u02B8\\u02CB\\u02D7\\u02E1\\u02E6\\u0333\\u048D\\u0100;o\\u0179\\u02A5trahd;\\u6911cy;\\u4402cy;\\u4405cy;\\u440F\\u0180grs\\u02BF\\u02C4\\u02C7ger;\\u6021r;\\u61A1hv;\\u6AE4\\u0100ay\\u02D0\\u02D5ron;\\u410E;\\u4414l\\u0100;t\\u02DD\\u02DE\\u6207a;\\u4394r;\\uC000\\u{1D507}\\u0100af\\u02EB\\u0327\\u0100cm\\u02F0\\u0322ritical\\u0200ADGT\\u0300\\u0306\\u0316\\u031Ccute;\\u40B4o\\u0174\\u030B\\u030D;\\u42D9bleAcute;\\u42DDrave;\\u4060ilde;\\u42DCond;\\u62C4ferentialD;\\u6146\\u0470\\u033D\\0\\0\\0\\u0342\\u0354\\0\\u0405f;\\uC000\\u{1D53B}\\u0180;DE\\u0348\\u0349\\u034D\\u40A8ot;\\u60DCqual;\\u6250ble\\u0300CDLRUV\\u0363\\u0372\\u0382\\u03CF\\u03E2\\u03F8ontourIntegra\\xEC\\u0239o\\u0274\\u0379\\0\\0\\u037B\\xBB\\u0349nArrow;\\u61D3\\u0100eo\\u0387\\u03A4ft\\u0180ART\\u0390\\u0396\\u03A1rrow;\\u61D0ightArrow;\\u61D4e\\xE5\\u02CAng\\u0100LR\\u03AB\\u03C4eft\\u0100AR\\u03B3\\u03B9rrow;\\u67F8ightArrow;\\u67FAightArrow;\\u67F9ight\\u0100AT\\u03D8\\u03DErrow;\\u61D2ee;\\u62A8p\\u0241\\u03E9\\0\\0\\u03EFrrow;\\u61D1ownArrow;\\u61D5erticalBar;\\u6225n\\u0300ABLRTa\\u0412\\u042A\\u0430\\u045E\\u047F\\u037Crrow\\u0180;BU\\u041D\\u041E\\u0422\\u6193ar;\\u6913pArrow;\\u61F5reve;\\u4311eft\\u02D2\\u043A\\0\\u0446\\0\\u0450ightVector;\\u6950eeVector;\\u695Eector\\u0100;B\\u0459\\u045A\\u61BDar;\\u6956ight\\u01D4\\u0467\\0\\u0471eeVector;\\u695Fector\\u0100;B\\u047A\\u047B\\u61C1ar;\\u6957ee\\u0100;A\\u0486\\u0487\\u62A4rrow;\\u61A7\\u0100ct\\u0492\\u0497r;\\uC000\\u{1D49F}rok;\\u4110\\u0800NTacdfglmopqstux\\u04BD\\u04C0\\u04C4\\u04CB\\u04DE\\u04E2\\u04E7\\u04EE\\u04F5\\u0521\\u052F\\u0536\\u0552\\u055D\\u0560\\u0565G;\\u414AH\\u803B\\xD0\\u40D0cute\\u803B\\xC9\\u40C9\\u0180aiy\\u04D2\\u04D7\\u04DCron;\\u411Arc\\u803B\\xCA\\u40CA;\\u442Dot;\\u4116r;\\uC000\\u{1D508}rave\\u803B\\xC8\\u40C8ement;\\u6208\\u0100ap\\u04FA\\u04FEcr;\\u4112ty\\u0253\\u0506\\0\\0\\u0512mallSquare;\\u65FBerySmallSquare;\\u65AB\\u0100gp\\u0526\\u052Aon;\\u4118f;\\uC000\\u{1D53C}silon;\\u4395u\\u0100ai\\u053C\\u0549l\\u0100;T\\u0542\\u0543\\u6A75ilde;\\u6242librium;\\u61CC\\u0100ci\\u0557\\u055Ar;\\u6130m;\\u6A73a;\\u4397ml\\u803B\\xCB\\u40CB\\u0100ip\\u056A\\u056Fsts;\\u6203onentialE;\\u6147\\u0280cfios\\u0585\\u0588\\u058D\\u05B2\\u05CCy;\\u4424r;\\uC000\\u{1D509}lled\\u0253\\u0597\\0\\0\\u05A3mallSquare;\\u65FCerySmallSquare;\\u65AA\\u0370\\u05BA\\0\\u05BF\\0\\0\\u05C4f;\\uC000\\u{1D53D}All;\\u6200riertrf;\\u6131c\\xF2\\u05CB\\u0600JTabcdfgorst\\u05E8\\u05EC\\u05EF\\u05FA\\u0600\\u0612\\u0616\\u061B\\u061D\\u0623\\u066C\\u0672cy;\\u4403\\u803B>\\u403Emma\\u0100;d\\u05F7\\u05F8\\u4393;\\u43DCreve;\\u411E\\u0180eiy\\u0607\\u060C\\u0610dil;\\u4122rc;\\u411C;\\u4413ot;\\u4120r;\\uC000\\u{1D50A};\\u62D9pf;\\uC000\\u{1D53E}eater\\u0300EFGLST\\u0635\\u0644\\u064E\\u0656\\u065B\\u0666qual\\u0100;L\\u063E\\u063F\\u6265ess;\\u62DBullEqual;\\u6267reater;\\u6AA2ess;\\u6277lantEqual;\\u6A7Eilde;\\u6273cr;\\uC000\\u{1D4A2};\\u626B\\u0400Aacfiosu\\u0685\\u068B\\u0696\\u069B\\u069E\\u06AA\\u06BE\\u06CARDcy;\\u442A\\u0100ct\\u0690\\u0694ek;\\u42C7;\\u405Eirc;\\u4124r;\\u610ClbertSpace;\\u610B\\u01F0\\u06AF\\0\\u06B2f;\\u610DizontalLine;\\u6500\\u0100ct\\u06C3\\u06C5\\xF2\\u06A9rok;\\u4126mp\\u0144\\u06D0\\u06D8ownHum\\xF0\\u012Fqual;\\u624F\\u0700EJOacdfgmnostu\\u06FA\\u06FE\\u0703\\u0707\\u070E\\u071A\\u071E\\u0721\\u0728\\u0744\\u0778\\u078B\\u078F\\u0795cy;\\u4415lig;\\u4132cy;\\u4401cute\\u803B\\xCD\\u40CD\\u0100iy\\u0713\\u0718rc\\u803B\\xCE\\u40CE;\\u4418ot;\\u4130r;\\u6111rave\\u803B\\xCC\\u40CC\\u0180;ap\\u0720\\u072F\\u073F\\u0100cg\\u0734\\u0737r;\\u412AinaryI;\\u6148lie\\xF3\\u03DD\\u01F4\\u0749\\0\\u0762\\u0100;e\\u074D\\u074E\\u622C\\u0100gr\\u0753\\u0758ral;\\u622Bsection;\\u62C2isible\\u0100CT\\u076C\\u0772omma;\\u6063imes;\\u6062\\u0180gpt\\u077F\\u0783\\u0788on;\\u412Ef;\\uC000\\u{1D540}a;\\u4399cr;\\u6110ilde;\\u4128\\u01EB\\u079A\\0\\u079Ecy;\\u4406l\\u803B\\xCF\\u40CF\\u0280cfosu\\u07AC\\u07B7\\u07BC\\u07C2\\u07D0\\u0100iy\\u07B1\\u07B5rc;\\u4134;\\u4419r;\\uC000\\u{1D50D}pf;\\uC000\\u{1D541}\\u01E3\\u07C7\\0\\u07CCr;\\uC000\\u{1D4A5}rcy;\\u4408kcy;\\u4404\\u0380HJacfos\\u07E4\\u07E8\\u07EC\\u07F1\\u07FD\\u0802\\u0808cy;\\u4425cy;\\u440Cppa;\\u439A\\u0100ey\\u07F6\\u07FBdil;\\u4136;\\u441Ar;\\uC000\\u{1D50E}pf;\\uC000\\u{1D542}cr;\\uC000\\u{1D4A6}\\u0580JTaceflmost\\u0825\\u0829\\u082C\\u0850\\u0863\\u09B3\\u09B8\\u09C7\\u09CD\\u0A37\\u0A47cy;\\u4409\\u803B<\\u403C\\u0280cmnpr\\u0837\\u083C\\u0841\\u0844\\u084Dute;\\u4139bda;\\u439Bg;\\u67EAlacetrf;\\u6112r;\\u619E\\u0180aey\\u0857\\u085C\\u0861ron;\\u413Ddil;\\u413B;\\u441B\\u0100fs\\u0868\\u0970t\\u0500ACDFRTUVar\\u087E\\u08A9\\u08B1\\u08E0\\u08E6\\u08FC\\u092F\\u095B\\u0390\\u096A\\u0100nr\\u0883\\u088FgleBracket;\\u67E8row\\u0180;BR\\u0899\\u089A\\u089E\\u6190ar;\\u61E4ightArrow;\\u61C6eiling;\\u6308o\\u01F5\\u08B7\\0\\u08C3bleBracket;\\u67E6n\\u01D4\\u08C8\\0\\u08D2eeVector;\\u6961ector\\u0100;B\\u08DB\\u08DC\\u61C3ar;\\u6959loor;\\u630Aight\\u0100AV\\u08EF\\u08F5rrow;\\u6194ector;\\u694E\\u0100er\\u0901\\u0917e\\u0180;AV\\u0909\\u090A\\u0910\\u62A3rrow;\\u61A4ector;\\u695Aiangle\\u0180;BE\\u0924\\u0925\\u0929\\u62B2ar;\\u69CFqual;\\u62B4p\\u0180DTV\\u0937\\u0942\\u094CownVector;\\u6951eeVector;\\u6960ector\\u0100;B\\u0956\\u0957\\u61BFar;\\u6958ector\\u0100;B\\u0965\\u0966\\u61BCar;\\u6952ight\\xE1\\u039Cs\\u0300EFGLST\\u097E\\u098B\\u0995\\u099D\\u09A2\\u09ADqualGreater;\\u62DAullEqual;\\u6266reater;\\u6276ess;\\u6AA1lantEqual;\\u6A7Dilde;\\u6272r;\\uC000\\u{1D50F}\\u0100;e\\u09BD\\u09BE\\u62D8ftarrow;\\u61DAidot;\\u413F\\u0180npw\\u09D4\\u0A16\\u0A1Bg\\u0200LRlr\\u09DE\\u09F7\\u0A02\\u0A10eft\\u0100AR\\u09E6\\u09ECrrow;\\u67F5ightArrow;\\u67F7ightArrow;\\u67F6eft\\u0100ar\\u03B3\\u0A0Aight\\xE1\\u03BFight\\xE1\\u03CAf;\\uC000\\u{1D543}er\\u0100LR\\u0A22\\u0A2CeftArrow;\\u6199ightArrow;\\u6198\\u0180cht\\u0A3E\\u0A40\\u0A42\\xF2\\u084C;\\u61B0rok;\\u4141;\\u626A\\u0400acefiosu\\u0A5A\\u0A5D\\u0A60\\u0A77\\u0A7C\\u0A85\\u0A8B\\u0A8Ep;\\u6905y;\\u441C\\u0100dl\\u0A65\\u0A6FiumSpace;\\u605Flintrf;\\u6133r;\\uC000\\u{1D510}nusPlus;\\u6213pf;\\uC000\\u{1D544}c\\xF2\\u0A76;\\u439C\\u0480Jacefostu\\u0AA3\\u0AA7\\u0AAD\\u0AC0\\u0B14\\u0B19\\u0D91\\u0D97\\u0D9Ecy;\\u440Acute;\\u4143\\u0180aey\\u0AB4\\u0AB9\\u0ABEron;\\u4147dil;\\u4145;\\u441D\\u0180gsw\\u0AC7\\u0AF0\\u0B0Eative\\u0180MTV\\u0AD3\\u0ADF\\u0AE8ediumSpace;\\u600Bhi\\u0100cn\\u0AE6\\u0AD8\\xEB\\u0AD9eryThi\\xEE\\u0AD9ted\\u0100GL\\u0AF8\\u0B06reaterGreate\\xF2\\u0673essLes\\xF3\\u0A48Line;\\u400Ar;\\uC000\\u{1D511}\\u0200Bnpt\\u0B22\\u0B28\\u0B37\\u0B3Areak;\\u6060BreakingSpace;\\u40A0f;\\u6115\\u0680;CDEGHLNPRSTV\\u0B55\\u0B56\\u0B6A\\u0B7C\\u0BA1\\u0BEB\\u0C04\\u0C5E\\u0C84\\u0CA6\\u0CD8\\u0D61\\u0D85\\u6AEC\\u0100ou\\u0B5B\\u0B64ngruent;\\u6262pCap;\\u626DoubleVerticalBar;\\u6226\\u0180lqx\\u0B83\\u0B8A\\u0B9Bement;\\u6209ual\\u0100;T\\u0B92\\u0B93\\u6260ilde;\\uC000\\u2242\\u0338ists;\\u6204reater\\u0380;EFGLST\\u0BB6\\u0BB7\\u0BBD\\u0BC9\\u0BD3\\u0BD8\\u0BE5\\u626Fqual;\\u6271ullEqual;\\uC000\\u2267\\u0338reater;\\uC000\\u226B\\u0338ess;\\u6279lantEqual;\\uC000\\u2A7E\\u0338ilde;\\u6275ump\\u0144\\u0BF2\\u0BFDownHump;\\uC000\\u224E\\u0338qual;\\uC000\\u224F\\u0338e\\u0100fs\\u0C0A\\u0C27tTriangle\\u0180;BE\\u0C1A\\u0C1B\\u0C21\\u62EAar;\\uC000\\u29CF\\u0338qual;\\u62ECs\\u0300;EGLST\\u0C35\\u0C36\\u0C3C\\u0C44\\u0C4B\\u0C58\\u626Equal;\\u6270reater;\\u6278ess;\\uC000\\u226A\\u0338lantEqual;\\uC000\\u2A7D\\u0338ilde;\\u6274ested\\u0100GL\\u0C68\\u0C79reaterGreater;\\uC000\\u2AA2\\u0338essLess;\\uC000\\u2AA1\\u0338recedes\\u0180;ES\\u0C92\\u0C93\\u0C9B\\u6280qual;\\uC000\\u2AAF\\u0338lantEqual;\\u62E0\\u0100ei\\u0CAB\\u0CB9verseElement;\\u620CghtTriangle\\u0180;BE\\u0CCB\\u0CCC\\u0CD2\\u62EBar;\\uC000\\u29D0\\u0338qual;\\u62ED\\u0100qu\\u0CDD\\u0D0CuareSu\\u0100bp\\u0CE8\\u0CF9set\\u0100;E\\u0CF0\\u0CF3\\uC000\\u228F\\u0338qual;\\u62E2erset\\u0100;E\\u0D03\\u0D06\\uC000\\u2290\\u0338qual;\\u62E3\\u0180bcp\\u0D13\\u0D24\\u0D4Eset\\u0100;E\\u0D1B\\u0D1E\\uC000\\u2282\\u20D2qual;\\u6288ceeds\\u0200;EST\\u0D32\\u0D33\\u0D3B\\u0D46\\u6281qual;\\uC000\\u2AB0\\u0338lantEqual;\\u62E1ilde;\\uC000\\u227F\\u0338erset\\u0100;E\\u0D58\\u0D5B\\uC000\\u2283\\u20D2qual;\\u6289ilde\\u0200;EFT\\u0D6E\\u0D6F\\u0D75\\u0D7F\\u6241qual;\\u6244ullEqual;\\u6247ilde;\\u6249erticalBar;\\u6224cr;\\uC000\\u{1D4A9}ilde\\u803B\\xD1\\u40D1;\\u439D\\u0700Eacdfgmoprstuv\\u0DBD\\u0DC2\\u0DC9\\u0DD5\\u0DDB\\u0DE0\\u0DE7\\u0DFC\\u0E02\\u0E20\\u0E22\\u0E32\\u0E3F\\u0E44lig;\\u4152cute\\u803B\\xD3\\u40D3\\u0100iy\\u0DCE\\u0DD3rc\\u803B\\xD4\\u40D4;\\u441Eblac;\\u4150r;\\uC000\\u{1D512}rave\\u803B\\xD2\\u40D2\\u0180aei\\u0DEE\\u0DF2\\u0DF6cr;\\u414Cga;\\u43A9cron;\\u439Fpf;\\uC000\\u{1D546}enCurly\\u0100DQ\\u0E0E\\u0E1AoubleQuote;\\u601Cuote;\\u6018;\\u6A54\\u0100cl\\u0E27\\u0E2Cr;\\uC000\\u{1D4AA}ash\\u803B\\xD8\\u40D8i\\u016C\\u0E37\\u0E3Cde\\u803B\\xD5\\u40D5es;\\u6A37ml\\u803B\\xD6\\u40D6er\\u0100BP\\u0E4B\\u0E60\\u0100ar\\u0E50\\u0E53r;\\u603Eac\\u0100ek\\u0E5A\\u0E5C;\\u63DEet;\\u63B4arenthesis;\\u63DC\\u0480acfhilors\\u0E7F\\u0E87\\u0E8A\\u0E8F\\u0E92\\u0E94\\u0E9D\\u0EB0\\u0EFCrtialD;\\u6202y;\\u441Fr;\\uC000\\u{1D513}i;\\u43A6;\\u43A0usMinus;\\u40B1\\u0100ip\\u0EA2\\u0EADncareplan\\xE5\\u069Df;\\u6119\\u0200;eio\\u0EB9\\u0EBA\\u0EE0\\u0EE4\\u6ABBcedes\\u0200;EST\\u0EC8\\u0EC9\\u0ECF\\u0EDA\\u627Aqual;\\u6AAFlantEqual;\\u627Cilde;\\u627Eme;\\u6033\\u0100dp\\u0EE9\\u0EEEuct;\\u620Fortion\\u0100;a\\u0225\\u0EF9l;\\u621D\\u0100ci\\u0F01\\u0F06r;\\uC000\\u{1D4AB};\\u43A8\\u0200Ufos\\u0F11\\u0F16\\u0F1B\\u0F1FOT\\u803B\"\\u4022r;\\uC000\\u{1D514}pf;\\u611Acr;\\uC000\\u{1D4AC}\\u0600BEacefhiorsu\\u0F3E\\u0F43\\u0F47\\u0F60\\u0F73\\u0FA7\\u0FAA\\u0FAD\\u1096\\u10A9\\u10B4\\u10BEarr;\\u6910G\\u803B\\xAE\\u40AE\\u0180cnr\\u0F4E\\u0F53\\u0F56ute;\\u4154g;\\u67EBr\\u0100;t\\u0F5C\\u0F5D\\u61A0l;\\u6916\\u0180aey\\u0F67\\u0F6C\\u0F71ron;\\u4158dil;\\u4156;\\u4420\\u0100;v\\u0F78\\u0F79\\u611Cerse\\u0100EU\\u0F82\\u0F99\\u0100lq\\u0F87\\u0F8Eement;\\u620Builibrium;\\u61CBpEquilibrium;\\u696Fr\\xBB\\u0F79o;\\u43A1ght\\u0400ACDFTUVa\\u0FC1\\u0FEB\\u0FF3\\u1022\\u1028\\u105B\\u1087\\u03D8\\u0100nr\\u0FC6\\u0FD2gleBracket;\\u67E9row\\u0180;BL\\u0FDC\\u0FDD\\u0FE1\\u6192ar;\\u61E5eftArrow;\\u61C4eiling;\\u6309o\\u01F5\\u0FF9\\0\\u1005bleBracket;\\u67E7n\\u01D4\\u100A\\0\\u1014eeVector;\\u695Dector\\u0100;B\\u101D\\u101E\\u61C2ar;\\u6955loor;\\u630B\\u0100er\\u102D\\u1043e\\u0180;AV\\u1035\\u1036\\u103C\\u62A2rrow;\\u61A6ector;\\u695Biangle\\u0180;BE\\u1050\\u1051\\u1055\\u62B3ar;\\u69D0qual;\\u62B5p\\u0180DTV\\u1063\\u106E\\u1078ownVector;\\u694FeeVector;\\u695Cector\\u0100;B\\u1082\\u1083\\u61BEar;\\u6954ector\\u0100;B\\u1091\\u1092\\u61C0ar;\\u6953\\u0100pu\\u109B\\u109Ef;\\u611DndImplies;\\u6970ightarrow;\\u61DB\\u0100ch\\u10B9\\u10BCr;\\u611B;\\u61B1leDelayed;\\u69F4\\u0680HOacfhimoqstu\\u10E4\\u10F1\\u10F7\\u10FD\\u1119\\u111E\\u1151\\u1156\\u1161\\u1167\\u11B5\\u11BB\\u11BF\\u0100Cc\\u10E9\\u10EEHcy;\\u4429y;\\u4428FTcy;\\u442Ccute;\\u415A\\u0280;aeiy\\u1108\\u1109\\u110E\\u1113\\u1117\\u6ABCron;\\u4160dil;\\u415Erc;\\u415C;\\u4421r;\\uC000\\u{1D516}ort\\u0200DLRU\\u112A\\u1134\\u113E\\u1149ownArrow\\xBB\\u041EeftArrow\\xBB\\u089AightArrow\\xBB\\u0FDDpArrow;\\u6191gma;\\u43A3allCircle;\\u6218pf;\\uC000\\u{1D54A}\\u0272\\u116D\\0\\0\\u1170t;\\u621Aare\\u0200;ISU\\u117B\\u117C\\u1189\\u11AF\\u65A1ntersection;\\u6293u\\u0100bp\\u118F\\u119Eset\\u0100;E\\u1197\\u1198\\u628Fqual;\\u6291erset\\u0100;E\\u11A8\\u11A9\\u6290qual;\\u6292nion;\\u6294cr;\\uC000\\u{1D4AE}ar;\\u62C6\\u0200bcmp\\u11C8\\u11DB\\u1209\\u120B\\u0100;s\\u11CD\\u11CE\\u62D0et\\u0100;E\\u11CD\\u11D5qual;\\u6286\\u0100ch\\u11E0\\u1205eeds\\u0200;EST\\u11ED\\u11EE\\u11F4\\u11FF\\u627Bqual;\\u6AB0lantEqual;\\u627Dilde;\\u627FTh\\xE1\\u0F8C;\\u6211\\u0180;es\\u1212\\u1213\\u1223\\u62D1rset\\u0100;E\\u121C\\u121D\\u6283qual;\\u6287et\\xBB\\u1213\\u0580HRSacfhiors\\u123E\\u1244\\u1249\\u1255\\u125E\\u1271\\u1276\\u129F\\u12C2\\u12C8\\u12D1ORN\\u803B\\xDE\\u40DEADE;\\u6122\\u0100Hc\\u124E\\u1252cy;\\u440By;\\u4426\\u0100bu\\u125A\\u125C;\\u4009;\\u43A4\\u0180aey\\u1265\\u126A\\u126Fron;\\u4164dil;\\u4162;\\u4422r;\\uC000\\u{1D517}\\u0100ei\\u127B\\u1289\\u01F2\\u1280\\0\\u1287efore;\\u6234a;\\u4398\\u0100cn\\u128E\\u1298kSpace;\\uC000\\u205F\\u200ASpace;\\u6009lde\\u0200;EFT\\u12AB\\u12AC\\u12B2\\u12BC\\u623Cqual;\\u6243ullEqual;\\u6245ilde;\\u6248pf;\\uC000\\u{1D54B}ipleDot;\\u60DB\\u0100ct\\u12D6\\u12DBr;\\uC000\\u{1D4AF}rok;\\u4166\\u0AE1\\u12F7\\u130E\\u131A\\u1326\\0\\u132C\\u1331\\0\\0\\0\\0\\0\\u1338\\u133D\\u1377\\u1385\\0\\u13FF\\u1404\\u140A\\u1410\\u0100cr\\u12FB\\u1301ute\\u803B\\xDA\\u40DAr\\u0100;o\\u1307\\u1308\\u619Fcir;\\u6949r\\u01E3\\u1313\\0\\u1316y;\\u440Eve;\\u416C\\u0100iy\\u131E\\u1323rc\\u803B\\xDB\\u40DB;\\u4423blac;\\u4170r;\\uC000\\u{1D518}rave\\u803B\\xD9\\u40D9acr;\\u416A\\u0100di\\u1341\\u1369er\\u0100BP\\u1348\\u135D\\u0100ar\\u134D\\u1350r;\\u405Fac\\u0100ek\\u1357\\u1359;\\u63DFet;\\u63B5arenthesis;\\u63DDon\\u0100;P\\u1370\\u1371\\u62C3lus;\\u628E\\u0100gp\\u137B\\u137Fon;\\u4172f;\\uC000\\u{1D54C}\\u0400ADETadps\\u1395\\u13AE\\u13B8\\u13C4\\u03E8\\u13D2\\u13D7\\u13F3rrow\\u0180;BD\\u1150\\u13A0\\u13A4ar;\\u6912ownArrow;\\u61C5ownArrow;\\u6195quilibrium;\\u696Eee\\u0100;A\\u13CB\\u13CC\\u62A5rrow;\\u61A5own\\xE1\\u03F3er\\u0100LR\\u13DE\\u13E8eftArrow;\\u6196ightArrow;\\u6197i\\u0100;l\\u13F9\\u13FA\\u43D2on;\\u43A5ing;\\u416Ecr;\\uC000\\u{1D4B0}ilde;\\u4168ml\\u803B\\xDC\\u40DC\\u0480Dbcdefosv\\u1427\\u142C\\u1430\\u1433\\u143E\\u1485\\u148A\\u1490\\u1496ash;\\u62ABar;\\u6AEBy;\\u4412ash\\u0100;l\\u143B\\u143C\\u62A9;\\u6AE6\\u0100er\\u1443\\u1445;\\u62C1\\u0180bty\\u144C\\u1450\\u147Aar;\\u6016\\u0100;i\\u144F\\u1455cal\\u0200BLST\\u1461\\u1465\\u146A\\u1474ar;\\u6223ine;\\u407Ceparator;\\u6758ilde;\\u6240ThinSpace;\\u600Ar;\\uC000\\u{1D519}pf;\\uC000\\u{1D54D}cr;\\uC000\\u{1D4B1}dash;\\u62AA\\u0280cefos\\u14A7\\u14AC\\u14B1\\u14B6\\u14BCirc;\\u4174dge;\\u62C0r;\\uC000\\u{1D51A}pf;\\uC000\\u{1D54E}cr;\\uC000\\u{1D4B2}\\u0200fios\\u14CB\\u14D0\\u14D2\\u14D8r;\\uC000\\u{1D51B};\\u439Epf;\\uC000\\u{1D54F}cr;\\uC000\\u{1D4B3}\\u0480AIUacfosu\\u14F1\\u14F5\\u14F9\\u14FD\\u1504\\u150F\\u1514\\u151A\\u1520cy;\\u442Fcy;\\u4407cy;\\u442Ecute\\u803B\\xDD\\u40DD\\u0100iy\\u1509\\u150Drc;\\u4176;\\u442Br;\\uC000\\u{1D51C}pf;\\uC000\\u{1D550}cr;\\uC000\\u{1D4B4}ml;\\u4178\\u0400Hacdefos\\u1535\\u1539\\u153F\\u154B\\u154F\\u155D\\u1560\\u1564cy;\\u4416cute;\\u4179\\u0100ay\\u1544\\u1549ron;\\u417D;\\u4417ot;\\u417B\\u01F2\\u1554\\0\\u155BoWidt\\xE8\\u0AD9a;\\u4396r;\\u6128pf;\\u6124cr;\\uC000\\u{1D4B5}\\u0BE1\\u1583\\u158A\\u1590\\0\\u15B0\\u15B6\\u15BF\\0\\0\\0\\0\\u15C6\\u15DB\\u15EB\\u165F\\u166D\\0\\u1695\\u169B\\u16B2\\u16B9\\0\\u16BEcute\\u803B\\xE1\\u40E1reve;\\u4103\\u0300;Ediuy\\u159C\\u159D\\u15A1\\u15A3\\u15A8\\u15AD\\u623E;\\uC000\\u223E\\u0333;\\u623Frc\\u803B\\xE2\\u40E2te\\u80BB\\xB4\\u0306;\\u4430lig\\u803B\\xE6\\u40E6\\u0100;r\\xB2\\u15BA;\\uC000\\u{1D51E}rave\\u803B\\xE0\\u40E0\\u0100ep\\u15CA\\u15D6\\u0100fp\\u15CF\\u15D4sym;\\u6135\\xE8\\u15D3ha;\\u43B1\\u0100ap\\u15DFc\\u0100cl\\u15E4\\u15E7r;\\u4101g;\\u6A3F\\u0264\\u15F0\\0\\0\\u160A\\u0280;adsv\\u15FA\\u15FB\\u15FF\\u1601\\u1607\\u6227nd;\\u6A55;\\u6A5Clope;\\u6A58;\\u6A5A\\u0380;elmrsz\\u1618\\u1619\\u161B\\u161E\\u163F\\u164F\\u1659\\u6220;\\u69A4e\\xBB\\u1619sd\\u0100;a\\u1625\\u1626\\u6221\\u0461\\u1630\\u1632\\u1634\\u1636\\u1638\\u163A\\u163C\\u163E;\\u69A8;\\u69A9;\\u69AA;\\u69AB;\\u69AC;\\u69AD;\\u69AE;\\u69AFt\\u0100;v\\u1645\\u1646\\u621Fb\\u0100;d\\u164C\\u164D\\u62BE;\\u699D\\u0100pt\\u1654\\u1657h;\\u6222\\xBB\\xB9arr;\\u637C\\u0100gp\\u1663\\u1667on;\\u4105f;\\uC000\\u{1D552}\\u0380;Eaeiop\\u12C1\\u167B\\u167D\\u1682\\u1684\\u1687\\u168A;\\u6A70cir;\\u6A6F;\\u624Ad;\\u624Bs;\\u4027rox\\u0100;e\\u12C1\\u1692\\xF1\\u1683ing\\u803B\\xE5\\u40E5\\u0180cty\\u16A1\\u16A6\\u16A8r;\\uC000\\u{1D4B6};\\u402Amp\\u0100;e\\u12C1\\u16AF\\xF1\\u0288ilde\\u803B\\xE3\\u40E3ml\\u803B\\xE4\\u40E4\\u0100ci\\u16C2\\u16C8onin\\xF4\\u0272nt;\\u6A11\\u0800Nabcdefiklnoprsu\\u16ED\\u16F1\\u1730\\u173C\\u1743\\u1748\\u1778\\u177D\\u17E0\\u17E6\\u1839\\u1850\\u170D\\u193D\\u1948\\u1970ot;\\u6AED\\u0100cr\\u16F6\\u171Ek\\u0200ceps\\u1700\\u1705\\u170D\\u1713ong;\\u624Cpsilon;\\u43F6rime;\\u6035im\\u0100;e\\u171A\\u171B\\u623Dq;\\u62CD\\u0176\\u1722\\u1726ee;\\u62BDed\\u0100;g\\u172C\\u172D\\u6305e\\xBB\\u172Drk\\u0100;t\\u135C\\u1737brk;\\u63B6\\u0100oy\\u1701\\u1741;\\u4431quo;\\u601E\\u0280cmprt\\u1753\\u175B\\u1761\\u1764\\u1768aus\\u0100;e\\u010A\\u0109ptyv;\\u69B0s\\xE9\\u170Cno\\xF5\\u0113\\u0180ahw\\u176F\\u1771\\u1773;\\u43B2;\\u6136een;\\u626Cr;\\uC000\\u{1D51F}g\\u0380costuvw\\u178D\\u179D\\u17B3\\u17C1\\u17D5\\u17DB\\u17DE\\u0180aiu\\u1794\\u1796\\u179A\\xF0\\u0760rc;\\u65EFp\\xBB\\u1371\\u0180dpt\\u17A4\\u17A8\\u17ADot;\\u6A00lus;\\u6A01imes;\\u6A02\\u0271\\u17B9\\0\\0\\u17BEcup;\\u6A06ar;\\u6605riangle\\u0100du\\u17CD\\u17D2own;\\u65BDp;\\u65B3plus;\\u6A04e\\xE5\\u1444\\xE5\\u14ADarow;\\u690D\\u0180ako\\u17ED\\u1826\\u1835\\u0100cn\\u17F2\\u1823k\\u0180lst\\u17FA\\u05AB\\u1802ozenge;\\u69EBriangle\\u0200;dlr\\u1812\\u1813\\u1818\\u181D\\u65B4own;\\u65BEeft;\\u65C2ight;\\u65B8k;\\u6423\\u01B1\\u182B\\0\\u1833\\u01B2\\u182F\\0\\u1831;\\u6592;\\u65914;\\u6593ck;\\u6588\\u0100eo\\u183E\\u184D\\u0100;q\\u1843\\u1846\\uC000=\\u20E5uiv;\\uC000\\u2261\\u20E5t;\\u6310\\u0200ptwx\\u1859\\u185E\\u1867\\u186Cf;\\uC000\\u{1D553}\\u0100;t\\u13CB\\u1863om\\xBB\\u13CCtie;\\u62C8\\u0600DHUVbdhmptuv\\u1885\\u1896\\u18AA\\u18BB\\u18D7\\u18DB\\u18EC\\u18FF\\u1905\\u190A\\u1910\\u1921\\u0200LRlr\\u188E\\u1890\\u1892\\u1894;\\u6557;\\u6554;\\u6556;\\u6553\\u0280;DUdu\\u18A1\\u18A2\\u18A4\\u18A6\\u18A8\\u6550;\\u6566;\\u6569;\\u6564;\\u6567\\u0200LRlr\\u18B3\\u18B5\\u18B7\\u18B9;\\u655D;\\u655A;\\u655C;\\u6559\\u0380;HLRhlr\\u18CA\\u18CB\\u18CD\\u18CF\\u18D1\\u18D3\\u18D5\\u6551;\\u656C;\\u6563;\\u6560;\\u656B;\\u6562;\\u655Fox;\\u69C9\\u0200LRlr\\u18E4\\u18E6\\u18E8\\u18EA;\\u6555;\\u6552;\\u6510;\\u650C\\u0280;DUdu\\u06BD\\u18F7\\u18F9\\u18FB\\u18FD;\\u6565;\\u6568;\\u652C;\\u6534inus;\\u629Flus;\\u629Eimes;\\u62A0\\u0200LRlr\\u1919\\u191B\\u191D\\u191F;\\u655B;\\u6558;\\u6518;\\u6514\\u0380;HLRhlr\\u1930\\u1931\\u1933\\u1935\\u1937\\u1939\\u193B\\u6502;\\u656A;\\u6561;\\u655E;\\u653C;\\u6524;\\u651C\\u0100ev\\u0123\\u1942bar\\u803B\\xA6\\u40A6\\u0200ceio\\u1951\\u1956\\u195A\\u1960r;\\uC000\\u{1D4B7}mi;\\u604Fm\\u0100;e\\u171A\\u171Cl\\u0180;bh\\u1968\\u1969\\u196B\\u405C;\\u69C5sub;\\u67C8\\u016C\\u1974\\u197El\\u0100;e\\u1979\\u197A\\u6022t\\xBB\\u197Ap\\u0180;Ee\\u012F\\u1985\\u1987;\\u6AAE\\u0100;q\\u06DC\\u06DB\\u0CE1\\u19A7\\0\\u19E8\\u1A11\\u1A15\\u1A32\\0\\u1A37\\u1A50\\0\\0\\u1AB4\\0\\0\\u1AC1\\0\\0\\u1B21\\u1B2E\\u1B4D\\u1B52\\0\\u1BFD\\0\\u1C0C\\u0180cpr\\u19AD\\u19B2\\u19DDute;\\u4107\\u0300;abcds\\u19BF\\u19C0\\u19C4\\u19CA\\u19D5\\u19D9\\u6229nd;\\u6A44rcup;\\u6A49\\u0100au\\u19CF\\u19D2p;\\u6A4Bp;\\u6A47ot;\\u6A40;\\uC000\\u2229\\uFE00\\u0100eo\\u19E2\\u19E5t;\\u6041\\xEE\\u0693\\u0200aeiu\\u19F0\\u19FB\\u1A01\\u1A05\\u01F0\\u19F5\\0\\u19F8s;\\u6A4Don;\\u410Ddil\\u803B\\xE7\\u40E7rc;\\u4109ps\\u0100;s\\u1A0C\\u1A0D\\u6A4Cm;\\u6A50ot;\\u410B\\u0180dmn\\u1A1B\\u1A20\\u1A26il\\u80BB\\xB8\\u01ADptyv;\\u69B2t\\u8100\\xA2;e\\u1A2D\\u1A2E\\u40A2r\\xE4\\u01B2r;\\uC000\\u{1D520}\\u0180cei\\u1A3D\\u1A40\\u1A4Dy;\\u4447ck\\u0100;m\\u1A47\\u1A48\\u6713ark\\xBB\\u1A48;\\u43C7r\\u0380;Ecefms\\u1A5F\\u1A60\\u1A62\\u1A6B\\u1AA4\\u1AAA\\u1AAE\\u65CB;\\u69C3\\u0180;el\\u1A69\\u1A6A\\u1A6D\\u42C6q;\\u6257e\\u0261\\u1A74\\0\\0\\u1A88rrow\\u0100lr\\u1A7C\\u1A81eft;\\u61BAight;\\u61BB\\u0280RSacd\\u1A92\\u1A94\\u1A96\\u1A9A\\u1A9F\\xBB\\u0F47;\\u64C8st;\\u629Birc;\\u629Aash;\\u629Dnint;\\u6A10id;\\u6AEFcir;\\u69C2ubs\\u0100;u\\u1ABB\\u1ABC\\u6663it\\xBB\\u1ABC\\u02EC\\u1AC7\\u1AD4\\u1AFA\\0\\u1B0Aon\\u0100;e\\u1ACD\\u1ACE\\u403A\\u0100;q\\xC7\\xC6\\u026D\\u1AD9\\0\\0\\u1AE2a\\u0100;t\\u1ADE\\u1ADF\\u402C;\\u4040\\u0180;fl\\u1AE8\\u1AE9\\u1AEB\\u6201\\xEE\\u1160e\\u0100mx\\u1AF1\\u1AF6ent\\xBB\\u1AE9e\\xF3\\u024D\\u01E7\\u1AFE\\0\\u1B07\\u0100;d\\u12BB\\u1B02ot;\\u6A6Dn\\xF4\\u0246\\u0180fry\\u1B10\\u1B14\\u1B17;\\uC000\\u{1D554}o\\xE4\\u0254\\u8100\\xA9;s\\u0155\\u1B1Dr;\\u6117\\u0100ao\\u1B25\\u1B29rr;\\u61B5ss;\\u6717\\u0100cu\\u1B32\\u1B37r;\\uC000\\u{1D4B8}\\u0100bp\\u1B3C\\u1B44\\u0100;e\\u1B41\\u1B42\\u6ACF;\\u6AD1\\u0100;e\\u1B49\\u1B4A\\u6AD0;\\u6AD2dot;\\u62EF\\u0380delprvw\\u1B60\\u1B6C\\u1B77\\u1B82\\u1BAC\\u1BD4\\u1BF9arr\\u0100lr\\u1B68\\u1B6A;\\u6938;\\u6935\\u0270\\u1B72\\0\\0\\u1B75r;\\u62DEc;\\u62DFarr\\u0100;p\\u1B7F\\u1B80\\u61B6;\\u693D\\u0300;bcdos\\u1B8F\\u1B90\\u1B96\\u1BA1\\u1BA5\\u1BA8\\u622Arcap;\\u6A48\\u0100au\\u1B9B\\u1B9Ep;\\u6A46p;\\u6A4Aot;\\u628Dr;\\u6A45;\\uC000\\u222A\\uFE00\\u0200alrv\\u1BB5\\u1BBF\\u1BDE\\u1BE3rr\\u0100;m\\u1BBC\\u1BBD\\u61B7;\\u693Cy\\u0180evw\\u1BC7\\u1BD4\\u1BD8q\\u0270\\u1BCE\\0\\0\\u1BD2re\\xE3\\u1B73u\\xE3\\u1B75ee;\\u62CEedge;\\u62CFen\\u803B\\xA4\\u40A4earrow\\u0100lr\\u1BEE\\u1BF3eft\\xBB\\u1B80ight\\xBB\\u1BBDe\\xE4\\u1BDD\\u0100ci\\u1C01\\u1C07onin\\xF4\\u01F7nt;\\u6231lcty;\\u632D\\u0980AHabcdefhijlorstuwz\\u1C38\\u1C3B\\u1C3F\\u1C5D\\u1C69\\u1C75\\u1C8A\\u1C9E\\u1CAC\\u1CB7\\u1CFB\\u1CFF\\u1D0D\\u1D7B\\u1D91\\u1DAB\\u1DBB\\u1DC6\\u1DCDr\\xF2\\u0381ar;\\u6965\\u0200glrs\\u1C48\\u1C4D\\u1C52\\u1C54ger;\\u6020eth;\\u6138\\xF2\\u1133h\\u0100;v\\u1C5A\\u1C5B\\u6010\\xBB\\u090A\\u016B\\u1C61\\u1C67arow;\\u690Fa\\xE3\\u0315\\u0100ay\\u1C6E\\u1C73ron;\\u410F;\\u4434\\u0180;ao\\u0332\\u1C7C\\u1C84\\u0100gr\\u02BF\\u1C81r;\\u61CAtseq;\\u6A77\\u0180glm\\u1C91\\u1C94\\u1C98\\u803B\\xB0\\u40B0ta;\\u43B4ptyv;\\u69B1\\u0100ir\\u1CA3\\u1CA8sht;\\u697F;\\uC000\\u{1D521}ar\\u0100lr\\u1CB3\\u1CB5\\xBB\\u08DC\\xBB\\u101E\\u0280aegsv\\u1CC2\\u0378\\u1CD6\\u1CDC\\u1CE0m\\u0180;os\\u0326\\u1CCA\\u1CD4nd\\u0100;s\\u0326\\u1CD1uit;\\u6666amma;\\u43DDin;\\u62F2\\u0180;io\\u1CE7\\u1CE8\\u1CF8\\u40F7de\\u8100\\xF7;o\\u1CE7\\u1CF0ntimes;\\u62C7n\\xF8\\u1CF7cy;\\u4452c\\u026F\\u1D06\\0\\0\\u1D0Arn;\\u631Eop;\\u630D\\u0280lptuw\\u1D18\\u1D1D\\u1D22\\u1D49\\u1D55lar;\\u4024f;\\uC000\\u{1D555}\\u0280;emps\\u030B\\u1D2D\\u1D37\\u1D3D\\u1D42q\\u0100;d\\u0352\\u1D33ot;\\u6251inus;\\u6238lus;\\u6214quare;\\u62A1blebarwedg\\xE5\\xFAn\\u0180adh\\u112E\\u1D5D\\u1D67ownarrow\\xF3\\u1C83arpoon\\u0100lr\\u1D72\\u1D76ef\\xF4\\u1CB4igh\\xF4\\u1CB6\\u0162\\u1D7F\\u1D85karo\\xF7\\u0F42\\u026F\\u1D8A\\0\\0\\u1D8Ern;\\u631Fop;\\u630C\\u0180cot\\u1D98\\u1DA3\\u1DA6\\u0100ry\\u1D9D\\u1DA1;\\uC000\\u{1D4B9};\\u4455l;\\u69F6rok;\\u4111\\u0100dr\\u1DB0\\u1DB4ot;\\u62F1i\\u0100;f\\u1DBA\\u1816\\u65BF\\u0100ah\\u1DC0\\u1DC3r\\xF2\\u0429a\\xF2\\u0FA6angle;\\u69A6\\u0100ci\\u1DD2\\u1DD5y;\\u445Fgrarr;\\u67FF\\u0900Dacdefglmnopqrstux\\u1E01\\u1E09\\u1E19\\u1E38\\u0578\\u1E3C\\u1E49\\u1E61\\u1E7E\\u1EA5\\u1EAF\\u1EBD\\u1EE1\\u1F2A\\u1F37\\u1F44\\u1F4E\\u1F5A\\u0100Do\\u1E06\\u1D34o\\xF4\\u1C89\\u0100cs\\u1E0E\\u1E14ute\\u803B\\xE9\\u40E9ter;\\u6A6E\\u0200aioy\\u1E22\\u1E27\\u1E31\\u1E36ron;\\u411Br\\u0100;c\\u1E2D\\u1E2E\\u6256\\u803B\\xEA\\u40EAlon;\\u6255;\\u444Dot;\\u4117\\u0100Dr\\u1E41\\u1E45ot;\\u6252;\\uC000\\u{1D522}\\u0180;rs\\u1E50\\u1E51\\u1E57\\u6A9Aave\\u803B\\xE8\\u40E8\\u0100;d\\u1E5C\\u1E5D\\u6A96ot;\\u6A98\\u0200;ils\\u1E6A\\u1E6B\\u1E72\\u1E74\\u6A99nters;\\u63E7;\\u6113\\u0100;d\\u1E79\\u1E7A\\u6A95ot;\\u6A97\\u0180aps\\u1E85\\u1E89\\u1E97cr;\\u4113ty\\u0180;sv\\u1E92\\u1E93\\u1E95\\u6205et\\xBB\\u1E93p\\u01001;\\u1E9D\\u1EA4\\u0133\\u1EA1\\u1EA3;\\u6004;\\u6005\\u6003\\u0100gs\\u1EAA\\u1EAC;\\u414Bp;\\u6002\\u0100gp\\u1EB4\\u1EB8on;\\u4119f;\\uC000\\u{1D556}\\u0180als\\u1EC4\\u1ECE\\u1ED2r\\u0100;s\\u1ECA\\u1ECB\\u62D5l;\\u69E3us;\\u6A71i\\u0180;lv\\u1EDA\\u1EDB\\u1EDF\\u43B5on\\xBB\\u1EDB;\\u43F5\\u0200csuv\\u1EEA\\u1EF3\\u1F0B\\u1F23\\u0100io\\u1EEF\\u1E31rc\\xBB\\u1E2E\\u0269\\u1EF9\\0\\0\\u1EFB\\xED\\u0548ant\\u0100gl\\u1F02\\u1F06tr\\xBB\\u1E5Dess\\xBB\\u1E7A\\u0180aei\\u1F12\\u1F16\\u1F1Als;\\u403Dst;\\u625Fv\\u0100;D\\u0235\\u1F20D;\\u6A78parsl;\\u69E5\\u0100Da\\u1F2F\\u1F33ot;\\u6253rr;\\u6971\\u0180cdi\\u1F3E\\u1F41\\u1EF8r;\\u612Fo\\xF4\\u0352\\u0100ah\\u1F49\\u1F4B;\\u43B7\\u803B\\xF0\\u40F0\\u0100mr\\u1F53\\u1F57l\\u803B\\xEB\\u40EBo;\\u60AC\\u0180cip\\u1F61\\u1F64\\u1F67l;\\u4021s\\xF4\\u056E\\u0100eo\\u1F6C\\u1F74ctatio\\xEE\\u0559nential\\xE5\\u0579\\u09E1\\u1F92\\0\\u1F9E\\0\\u1FA1\\u1FA7\\0\\0\\u1FC6\\u1FCC\\0\\u1FD3\\0\\u1FE6\\u1FEA\\u2000\\0\\u2008\\u205Allingdotse\\xF1\\u1E44y;\\u4444male;\\u6640\\u0180ilr\\u1FAD\\u1FB3\\u1FC1lig;\\u8000\\uFB03\\u0269\\u1FB9\\0\\0\\u1FBDg;\\u8000\\uFB00ig;\\u8000\\uFB04;\\uC000\\u{1D523}lig;\\u8000\\uFB01lig;\\uC000fj\\u0180alt\\u1FD9\\u1FDC\\u1FE1t;\\u666Dig;\\u8000\\uFB02ns;\\u65B1of;\\u4192\\u01F0\\u1FEE\\0\\u1FF3f;\\uC000\\u{1D557}\\u0100ak\\u05BF\\u1FF7\\u0100;v\\u1FFC\\u1FFD\\u62D4;\\u6AD9artint;\\u6A0D\\u0100ao\\u200C\\u2055\\u0100cs\\u2011\\u2052\\u03B1\\u201A\\u2030\\u2038\\u2045\\u2048\\0\\u2050\\u03B2\\u2022\\u2025\\u2027\\u202A\\u202C\\0\\u202E\\u803B\\xBD\\u40BD;\\u6153\\u803B\\xBC\\u40BC;\\u6155;\\u6159;\\u615B\\u01B3\\u2034\\0\\u2036;\\u6154;\\u6156\\u02B4\\u203E\\u2041\\0\\0\\u2043\\u803B\\xBE\\u40BE;\\u6157;\\u615C5;\\u6158\\u01B6\\u204C\\0\\u204E;\\u615A;\\u615D8;\\u615El;\\u6044wn;\\u6322cr;\\uC000\\u{1D4BB}\\u0880Eabcdefgijlnorstv\\u2082\\u2089\\u209F\\u20A5\\u20B0\\u20B4\\u20F0\\u20F5\\u20FA\\u20FF\\u2103\\u2112\\u2138\\u0317\\u213E\\u2152\\u219E\\u0100;l\\u064D\\u2087;\\u6A8C\\u0180cmp\\u2090\\u2095\\u209Dute;\\u41F5ma\\u0100;d\\u209C\\u1CDA\\u43B3;\\u6A86reve;\\u411F\\u0100iy\\u20AA\\u20AErc;\\u411D;\\u4433ot;\\u4121\\u0200;lqs\\u063E\\u0642\\u20BD\\u20C9\\u0180;qs\\u063E\\u064C\\u20C4lan\\xF4\\u0665\\u0200;cdl\\u0665\\u20D2\\u20D5\\u20E5c;\\u6AA9ot\\u0100;o\\u20DC\\u20DD\\u6A80\\u0100;l\\u20E2\\u20E3\\u6A82;\\u6A84\\u0100;e\\u20EA\\u20ED\\uC000\\u22DB\\uFE00s;\\u6A94r;\\uC000\\u{1D524}\\u0100;g\\u0673\\u061Bmel;\\u6137cy;\\u4453\\u0200;Eaj\\u065A\\u210C\\u210E\\u2110;\\u6A92;\\u6AA5;\\u6AA4\\u0200Eaes\\u211B\\u211D\\u2129\\u2134;\\u6269p\\u0100;p\\u2123\\u2124\\u6A8Arox\\xBB\\u2124\\u0100;q\\u212E\\u212F\\u6A88\\u0100;q\\u212E\\u211Bim;\\u62E7pf;\\uC000\\u{1D558}\\u0100ci\\u2143\\u2146r;\\u610Am\\u0180;el\\u066B\\u214E\\u2150;\\u6A8E;\\u6A90\\u8300>;cdlqr\\u05EE\\u2160\\u216A\\u216E\\u2173\\u2179\\u0100ci\\u2165\\u2167;\\u6AA7r;\\u6A7Aot;\\u62D7Par;\\u6995uest;\\u6A7C\\u0280adels\\u2184\\u216A\\u2190\\u0656\\u219B\\u01F0\\u2189\\0\\u218Epro\\xF8\\u209Er;\\u6978q\\u0100lq\\u063F\\u2196les\\xF3\\u2088i\\xED\\u066B\\u0100en\\u21A3\\u21ADrtneqq;\\uC000\\u2269\\uFE00\\xC5\\u21AA\\u0500Aabcefkosy\\u21C4\\u21C7\\u21F1\\u21F5\\u21FA\\u2218\\u221D\\u222F\\u2268\\u227Dr\\xF2\\u03A0\\u0200ilmr\\u21D0\\u21D4\\u21D7\\u21DBrs\\xF0\\u1484f\\xBB\\u2024il\\xF4\\u06A9\\u0100dr\\u21E0\\u21E4cy;\\u444A\\u0180;cw\\u08F4\\u21EB\\u21EFir;\\u6948;\\u61ADar;\\u610Firc;\\u4125\\u0180alr\\u2201\\u220E\\u2213rts\\u0100;u\\u2209\\u220A\\u6665it\\xBB\\u220Alip;\\u6026con;\\u62B9r;\\uC000\\u{1D525}s\\u0100ew\\u2223\\u2229arow;\\u6925arow;\\u6926\\u0280amopr\\u223A\\u223E\\u2243\\u225E\\u2263rr;\\u61FFtht;\\u623Bk\\u0100lr\\u2249\\u2253eftarrow;\\u61A9ightarrow;\\u61AAf;\\uC000\\u{1D559}bar;\\u6015\\u0180clt\\u226F\\u2274\\u2278r;\\uC000\\u{1D4BD}as\\xE8\\u21F4rok;\\u4127\\u0100bp\\u2282\\u2287ull;\\u6043hen\\xBB\\u1C5B\\u0AE1\\u22A3\\0\\u22AA\\0\\u22B8\\u22C5\\u22CE\\0\\u22D5\\u22F3\\0\\0\\u22F8\\u2322\\u2367\\u2362\\u237F\\0\\u2386\\u23AA\\u23B4cute\\u803B\\xED\\u40ED\\u0180;iy\\u0771\\u22B0\\u22B5rc\\u803B\\xEE\\u40EE;\\u4438\\u0100cx\\u22BC\\u22BFy;\\u4435cl\\u803B\\xA1\\u40A1\\u0100fr\\u039F\\u22C9;\\uC000\\u{1D526}rave\\u803B\\xEC\\u40EC\\u0200;ino\\u073E\\u22DD\\u22E9\\u22EE\\u0100in\\u22E2\\u22E6nt;\\u6A0Ct;\\u622Dfin;\\u69DCta;\\u6129lig;\\u4133\\u0180aop\\u22FE\\u231A\\u231D\\u0180cgt\\u2305\\u2308\\u2317r;\\u412B\\u0180elp\\u071F\\u230F\\u2313in\\xE5\\u078Ear\\xF4\\u0720h;\\u4131f;\\u62B7ed;\\u41B5\\u0280;cfot\\u04F4\\u232C\\u2331\\u233D\\u2341are;\\u6105in\\u0100;t\\u2338\\u2339\\u621Eie;\\u69DDdo\\xF4\\u2319\\u0280;celp\\u0757\\u234C\\u2350\\u235B\\u2361al;\\u62BA\\u0100gr\\u2355\\u2359er\\xF3\\u1563\\xE3\\u234Darhk;\\u6A17rod;\\u6A3C\\u0200cgpt\\u236F\\u2372\\u2376\\u237By;\\u4451on;\\u412Ff;\\uC000\\u{1D55A}a;\\u43B9uest\\u803B\\xBF\\u40BF\\u0100ci\\u238A\\u238Fr;\\uC000\\u{1D4BE}n\\u0280;Edsv\\u04F4\\u239B\\u239D\\u23A1\\u04F3;\\u62F9ot;\\u62F5\\u0100;v\\u23A6\\u23A7\\u62F4;\\u62F3\\u0100;i\\u0777\\u23AElde;\\u4129\\u01EB\\u23B8\\0\\u23BCcy;\\u4456l\\u803B\\xEF\\u40EF\\u0300cfmosu\\u23CC\\u23D7\\u23DC\\u23E1\\u23E7\\u23F5\\u0100iy\\u23D1\\u23D5rc;\\u4135;\\u4439r;\\uC000\\u{1D527}ath;\\u4237pf;\\uC000\\u{1D55B}\\u01E3\\u23EC\\0\\u23F1r;\\uC000\\u{1D4BF}rcy;\\u4458kcy;\\u4454\\u0400acfghjos\\u240B\\u2416\\u2422\\u2427\\u242D\\u2431\\u2435\\u243Bppa\\u0100;v\\u2413\\u2414\\u43BA;\\u43F0\\u0100ey\\u241B\\u2420dil;\\u4137;\\u443Ar;\\uC000\\u{1D528}reen;\\u4138cy;\\u4445cy;\\u445Cpf;\\uC000\\u{1D55C}cr;\\uC000\\u{1D4C0}\\u0B80ABEHabcdefghjlmnoprstuv\\u2470\\u2481\\u2486\\u248D\\u2491\\u250E\\u253D\\u255A\\u2580\\u264E\\u265E\\u2665\\u2679\\u267D\\u269A\\u26B2\\u26D8\\u275D\\u2768\\u278B\\u27C0\\u2801\\u2812\\u0180art\\u2477\\u247A\\u247Cr\\xF2\\u09C6\\xF2\\u0395ail;\\u691Barr;\\u690E\\u0100;g\\u0994\\u248B;\\u6A8Bar;\\u6962\\u0963\\u24A5\\0\\u24AA\\0\\u24B1\\0\\0\\0\\0\\0\\u24B5\\u24BA\\0\\u24C6\\u24C8\\u24CD\\0\\u24F9ute;\\u413Amptyv;\\u69B4ra\\xEE\\u084Cbda;\\u43BBg\\u0180;dl\\u088E\\u24C1\\u24C3;\\u6991\\xE5\\u088E;\\u6A85uo\\u803B\\xAB\\u40ABr\\u0400;bfhlpst\\u0899\\u24DE\\u24E6\\u24E9\\u24EB\\u24EE\\u24F1\\u24F5\\u0100;f\\u089D\\u24E3s;\\u691Fs;\\u691D\\xEB\\u2252p;\\u61ABl;\\u6939im;\\u6973l;\\u61A2\\u0180;ae\\u24FF\\u2500\\u2504\\u6AABil;\\u6919\\u0100;s\\u2509\\u250A\\u6AAD;\\uC000\\u2AAD\\uFE00\\u0180abr\\u2515\\u2519\\u251Drr;\\u690Crk;\\u6772\\u0100ak\\u2522\\u252Cc\\u0100ek\\u2528\\u252A;\\u407B;\\u405B\\u0100es\\u2531\\u2533;\\u698Bl\\u0100du\\u2539\\u253B;\\u698F;\\u698D\\u0200aeuy\\u2546\\u254B\\u2556\\u2558ron;\\u413E\\u0100di\\u2550\\u2554il;\\u413C\\xEC\\u08B0\\xE2\\u2529;\\u443B\\u0200cqrs\\u2563\\u2566\\u256D\\u257Da;\\u6936uo\\u0100;r\\u0E19\\u1746\\u0100du\\u2572\\u2577har;\\u6967shar;\\u694Bh;\\u61B2\\u0280;fgqs\\u258B\\u258C\\u0989\\u25F3\\u25FF\\u6264t\\u0280ahlrt\\u2598\\u25A4\\u25B7\\u25C2\\u25E8rrow\\u0100;t\\u0899\\u25A1a\\xE9\\u24F6arpoon\\u0100du\\u25AF\\u25B4own\\xBB\\u045Ap\\xBB\\u0966eftarrows;\\u61C7ight\\u0180ahs\\u25CD\\u25D6\\u25DErrow\\u0100;s\\u08F4\\u08A7arpoon\\xF3\\u0F98quigarro\\xF7\\u21F0hreetimes;\\u62CB\\u0180;qs\\u258B\\u0993\\u25FAlan\\xF4\\u09AC\\u0280;cdgs\\u09AC\\u260A\\u260D\\u261D\\u2628c;\\u6AA8ot\\u0100;o\\u2614\\u2615\\u6A7F\\u0100;r\\u261A\\u261B\\u6A81;\\u6A83\\u0100;e\\u2622\\u2625\\uC000\\u22DA\\uFE00s;\\u6A93\\u0280adegs\\u2633\\u2639\\u263D\\u2649\\u264Bppro\\xF8\\u24C6ot;\\u62D6q\\u0100gq\\u2643\\u2645\\xF4\\u0989gt\\xF2\\u248C\\xF4\\u099Bi\\xED\\u09B2\\u0180ilr\\u2655\\u08E1\\u265Asht;\\u697C;\\uC000\\u{1D529}\\u0100;E\\u099C\\u2663;\\u6A91\\u0161\\u2669\\u2676r\\u0100du\\u25B2\\u266E\\u0100;l\\u0965\\u2673;\\u696Alk;\\u6584cy;\\u4459\\u0280;acht\\u0A48\\u2688\\u268B\\u2691\\u2696r\\xF2\\u25C1orne\\xF2\\u1D08ard;\\u696Bri;\\u65FA\\u0100io\\u269F\\u26A4dot;\\u4140ust\\u0100;a\\u26AC\\u26AD\\u63B0che\\xBB\\u26AD\\u0200Eaes\\u26BB\\u26BD\\u26C9\\u26D4;\\u6268p\\u0100;p\\u26C3\\u26C4\\u6A89rox\\xBB\\u26C4\\u0100;q\\u26CE\\u26CF\\u6A87\\u0100;q\\u26CE\\u26BBim;\\u62E6\\u0400abnoptwz\\u26E9\\u26F4\\u26F7\\u271A\\u272F\\u2741\\u2747\\u2750\\u0100nr\\u26EE\\u26F1g;\\u67ECr;\\u61FDr\\xEB\\u08C1g\\u0180lmr\\u26FF\\u270D\\u2714eft\\u0100ar\\u09E6\\u2707ight\\xE1\\u09F2apsto;\\u67FCight\\xE1\\u09FDparrow\\u0100lr\\u2725\\u2729ef\\xF4\\u24EDight;\\u61AC\\u0180afl\\u2736\\u2739\\u273Dr;\\u6985;\\uC000\\u{1D55D}us;\\u6A2Dimes;\\u6A34\\u0161\\u274B\\u274Fst;\\u6217\\xE1\\u134E\\u0180;ef\\u2757\\u2758\\u1800\\u65CAnge\\xBB\\u2758ar\\u0100;l\\u2764\\u2765\\u4028t;\\u6993\\u0280achmt\\u2773\\u2776\\u277C\\u2785\\u2787r\\xF2\\u08A8orne\\xF2\\u1D8Car\\u0100;d\\u0F98\\u2783;\\u696D;\\u600Eri;\\u62BF\\u0300achiqt\\u2798\\u279D\\u0A40\\u27A2\\u27AE\\u27BBquo;\\u6039r;\\uC000\\u{1D4C1}m\\u0180;eg\\u09B2\\u27AA\\u27AC;\\u6A8D;\\u6A8F\\u0100bu\\u252A\\u27B3o\\u0100;r\\u0E1F\\u27B9;\\u601Arok;\\u4142\\u8400<;cdhilqr\\u082B\\u27D2\\u2639\\u27DC\\u27E0\\u27E5\\u27EA\\u27F0\\u0100ci\\u27D7\\u27D9;\\u6AA6r;\\u6A79re\\xE5\\u25F2mes;\\u62C9arr;\\u6976uest;\\u6A7B\\u0100Pi\\u27F5\\u27F9ar;\\u6996\\u0180;ef\\u2800\\u092D\\u181B\\u65C3r\\u0100du\\u2807\\u280Dshar;\\u694Ahar;\\u6966\\u0100en\\u2817\\u2821rtneqq;\\uC000\\u2268\\uFE00\\xC5\\u281E\\u0700Dacdefhilnopsu\\u2840\\u2845\\u2882\\u288E\\u2893\\u28A0\\u28A5\\u28A8\\u28DA\\u28E2\\u28E4\\u0A83\\u28F3\\u2902Dot;\\u623A\\u0200clpr\\u284E\\u2852\\u2863\\u287Dr\\u803B\\xAF\\u40AF\\u0100et\\u2857\\u2859;\\u6642\\u0100;e\\u285E\\u285F\\u6720se\\xBB\\u285F\\u0100;s\\u103B\\u2868to\\u0200;dlu\\u103B\\u2873\\u2877\\u287Bow\\xEE\\u048Cef\\xF4\\u090F\\xF0\\u13D1ker;\\u65AE\\u0100oy\\u2887\\u288Cmma;\\u6A29;\\u443Cash;\\u6014asuredangle\\xBB\\u1626r;\\uC000\\u{1D52A}o;\\u6127\\u0180cdn\\u28AF\\u28B4\\u28C9ro\\u803B\\xB5\\u40B5\\u0200;acd\\u1464\\u28BD\\u28C0\\u28C4s\\xF4\\u16A7ir;\\u6AF0ot\\u80BB\\xB7\\u01B5us\\u0180;bd\\u28D2\\u1903\\u28D3\\u6212\\u0100;u\\u1D3C\\u28D8;\\u6A2A\\u0163\\u28DE\\u28E1p;\\u6ADB\\xF2\\u2212\\xF0\\u0A81\\u0100dp\\u28E9\\u28EEels;\\u62A7f;\\uC000\\u{1D55E}\\u0100ct\\u28F8\\u28FDr;\\uC000\\u{1D4C2}pos\\xBB\\u159D\\u0180;lm\\u2909\\u290A\\u290D\\u43BCtimap;\\u62B8\\u0C00GLRVabcdefghijlmoprstuvw\\u2942\\u2953\\u297E\\u2989\\u2998\\u29DA\\u29E9\\u2A15\\u2A1A\\u2A58\\u2A5D\\u2A83\\u2A95\\u2AA4\\u2AA8\\u2B04\\u2B07\\u2B44\\u2B7F\\u2BAE\\u2C34\\u2C67\\u2C7C\\u2CE9\\u0100gt\\u2947\\u294B;\\uC000\\u22D9\\u0338\\u0100;v\\u2950\\u0BCF\\uC000\\u226B\\u20D2\\u0180elt\\u295A\\u2972\\u2976ft\\u0100ar\\u2961\\u2967rrow;\\u61CDightarrow;\\u61CE;\\uC000\\u22D8\\u0338\\u0100;v\\u297B\\u0C47\\uC000\\u226A\\u20D2ightarrow;\\u61CF\\u0100Dd\\u298E\\u2993ash;\\u62AFash;\\u62AE\\u0280bcnpt\\u29A3\\u29A7\\u29AC\\u29B1\\u29CCla\\xBB\\u02DEute;\\u4144g;\\uC000\\u2220\\u20D2\\u0280;Eiop\\u0D84\\u29BC\\u29C0\\u29C5\\u29C8;\\uC000\\u2A70\\u0338d;\\uC000\\u224B\\u0338s;\\u4149ro\\xF8\\u0D84ur\\u0100;a\\u29D3\\u29D4\\u666El\\u0100;s\\u29D3\\u0B38\\u01F3\\u29DF\\0\\u29E3p\\u80BB\\xA0\\u0B37mp\\u0100;e\\u0BF9\\u0C00\\u0280aeouy\\u29F4\\u29FE\\u2A03\\u2A10\\u2A13\\u01F0\\u29F9\\0\\u29FB;\\u6A43on;\\u4148dil;\\u4146ng\\u0100;d\\u0D7E\\u2A0Aot;\\uC000\\u2A6D\\u0338p;\\u6A42;\\u443Dash;\\u6013\\u0380;Aadqsx\\u0B92\\u2A29\\u2A2D\\u2A3B\\u2A41\\u2A45\\u2A50rr;\\u61D7r\\u0100hr\\u2A33\\u2A36k;\\u6924\\u0100;o\\u13F2\\u13F0ot;\\uC000\\u2250\\u0338ui\\xF6\\u0B63\\u0100ei\\u2A4A\\u2A4Ear;\\u6928\\xED\\u0B98ist\\u0100;s\\u0BA0\\u0B9Fr;\\uC000\\u{1D52B}\\u0200Eest\\u0BC5\\u2A66\\u2A79\\u2A7C\\u0180;qs\\u0BBC\\u2A6D\\u0BE1\\u0180;qs\\u0BBC\\u0BC5\\u2A74lan\\xF4\\u0BE2i\\xED\\u0BEA\\u0100;r\\u0BB6\\u2A81\\xBB\\u0BB7\\u0180Aap\\u2A8A\\u2A8D\\u2A91r\\xF2\\u2971rr;\\u61AEar;\\u6AF2\\u0180;sv\\u0F8D\\u2A9C\\u0F8C\\u0100;d\\u2AA1\\u2AA2\\u62FC;\\u62FAcy;\\u445A\\u0380AEadest\\u2AB7\\u2ABA\\u2ABE\\u2AC2\\u2AC5\\u2AF6\\u2AF9r\\xF2\\u2966;\\uC000\\u2266\\u0338rr;\\u619Ar;\\u6025\\u0200;fqs\\u0C3B\\u2ACE\\u2AE3\\u2AEFt\\u0100ar\\u2AD4\\u2AD9rro\\xF7\\u2AC1ightarro\\xF7\\u2A90\\u0180;qs\\u0C3B\\u2ABA\\u2AEAlan\\xF4\\u0C55\\u0100;s\\u0C55\\u2AF4\\xBB\\u0C36i\\xED\\u0C5D\\u0100;r\\u0C35\\u2AFEi\\u0100;e\\u0C1A\\u0C25i\\xE4\\u0D90\\u0100pt\\u2B0C\\u2B11f;\\uC000\\u{1D55F}\\u8180\\xAC;in\\u2B19\\u2B1A\\u2B36\\u40ACn\\u0200;Edv\\u0B89\\u2B24\\u2B28\\u2B2E;\\uC000\\u22F9\\u0338ot;\\uC000\\u22F5\\u0338\\u01E1\\u0B89\\u2B33\\u2B35;\\u62F7;\\u62F6i\\u0100;v\\u0CB8\\u2B3C\\u01E1\\u0CB8\\u2B41\\u2B43;\\u62FE;\\u62FD\\u0180aor\\u2B4B\\u2B63\\u2B69r\\u0200;ast\\u0B7B\\u2B55\\u2B5A\\u2B5Flle\\xEC\\u0B7Bl;\\uC000\\u2AFD\\u20E5;\\uC000\\u2202\\u0338lint;\\u6A14\\u0180;ce\\u0C92\\u2B70\\u2B73u\\xE5\\u0CA5\\u0100;c\\u0C98\\u2B78\\u0100;e\\u0C92\\u2B7D\\xF1\\u0C98\\u0200Aait\\u2B88\\u2B8B\\u2B9D\\u2BA7r\\xF2\\u2988rr\\u0180;cw\\u2B94\\u2B95\\u2B99\\u619B;\\uC000\\u2933\\u0338;\\uC000\\u219D\\u0338ghtarrow\\xBB\\u2B95ri\\u0100;e\\u0CCB\\u0CD6\\u0380chimpqu\\u2BBD\\u2BCD\\u2BD9\\u2B04\\u0B78\\u2BE4\\u2BEF\\u0200;cer\\u0D32\\u2BC6\\u0D37\\u2BC9u\\xE5\\u0D45;\\uC000\\u{1D4C3}ort\\u026D\\u2B05\\0\\0\\u2BD6ar\\xE1\\u2B56m\\u0100;e\\u0D6E\\u2BDF\\u0100;q\\u0D74\\u0D73su\\u0100bp\\u2BEB\\u2BED\\xE5\\u0CF8\\xE5\\u0D0B\\u0180bcp\\u2BF6\\u2C11\\u2C19\\u0200;Ees\\u2BFF\\u2C00\\u0D22\\u2C04\\u6284;\\uC000\\u2AC5\\u0338et\\u0100;e\\u0D1B\\u2C0Bq\\u0100;q\\u0D23\\u2C00c\\u0100;e\\u0D32\\u2C17\\xF1\\u0D38\\u0200;Ees\\u2C22\\u2C23\\u0D5F\\u2C27\\u6285;\\uC000\\u2AC6\\u0338et\\u0100;e\\u0D58\\u2C2Eq\\u0100;q\\u0D60\\u2C23\\u0200gilr\\u2C3D\\u2C3F\\u2C45\\u2C47\\xEC\\u0BD7lde\\u803B\\xF1\\u40F1\\xE7\\u0C43iangle\\u0100lr\\u2C52\\u2C5Ceft\\u0100;e\\u0C1A\\u2C5A\\xF1\\u0C26ight\\u0100;e\\u0CCB\\u2C65\\xF1\\u0CD7\\u0100;m\\u2C6C\\u2C6D\\u43BD\\u0180;es\\u2C74\\u2C75\\u2C79\\u4023ro;\\u6116p;\\u6007\\u0480DHadgilrs\\u2C8F\\u2C94\\u2C99\\u2C9E\\u2CA3\\u2CB0\\u2CB6\\u2CD3\\u2CE3ash;\\u62ADarr;\\u6904p;\\uC000\\u224D\\u20D2ash;\\u62AC\\u0100et\\u2CA8\\u2CAC;\\uC000\\u2265\\u20D2;\\uC000>\\u20D2nfin;\\u69DE\\u0180Aet\\u2CBD\\u2CC1\\u2CC5rr;\\u6902;\\uC000\\u2264\\u20D2\\u0100;r\\u2CCA\\u2CCD\\uC000<\\u20D2ie;\\uC000\\u22B4\\u20D2\\u0100At\\u2CD8\\u2CDCrr;\\u6903rie;\\uC000\\u22B5\\u20D2im;\\uC000\\u223C\\u20D2\\u0180Aan\\u2CF0\\u2CF4\\u2D02rr;\\u61D6r\\u0100hr\\u2CFA\\u2CFDk;\\u6923\\u0100;o\\u13E7\\u13E5ear;\\u6927\\u1253\\u1A95\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\u2D2D\\0\\u2D38\\u2D48\\u2D60\\u2D65\\u2D72\\u2D84\\u1B07\\0\\0\\u2D8D\\u2DAB\\0\\u2DC8\\u2DCE\\0\\u2DDC\\u2E19\\u2E2B\\u2E3E\\u2E43\\u0100cs\\u2D31\\u1A97ute\\u803B\\xF3\\u40F3\\u0100iy\\u2D3C\\u2D45r\\u0100;c\\u1A9E\\u2D42\\u803B\\xF4\\u40F4;\\u443E\\u0280abios\\u1AA0\\u2D52\\u2D57\\u01C8\\u2D5Alac;\\u4151v;\\u6A38old;\\u69BClig;\\u4153\\u0100cr\\u2D69\\u2D6Dir;\\u69BF;\\uC000\\u{1D52C}\\u036F\\u2D79\\0\\0\\u2D7C\\0\\u2D82n;\\u42DBave\\u803B\\xF2\\u40F2;\\u69C1\\u0100bm\\u2D88\\u0DF4ar;\\u69B5\\u0200acit\\u2D95\\u2D98\\u2DA5\\u2DA8r\\xF2\\u1A80\\u0100ir\\u2D9D\\u2DA0r;\\u69BEoss;\\u69BBn\\xE5\\u0E52;\\u69C0\\u0180aei\\u2DB1\\u2DB5\\u2DB9cr;\\u414Dga;\\u43C9\\u0180cdn\\u2DC0\\u2DC5\\u01CDron;\\u43BF;\\u69B6pf;\\uC000\\u{1D560}\\u0180ael\\u2DD4\\u2DD7\\u01D2r;\\u69B7rp;\\u69B9\\u0380;adiosv\\u2DEA\\u2DEB\\u2DEE\\u2E08\\u2E0D\\u2E10\\u2E16\\u6228r\\xF2\\u1A86\\u0200;efm\\u2DF7\\u2DF8\\u2E02\\u2E05\\u6A5Dr\\u0100;o\\u2DFE\\u2DFF\\u6134f\\xBB\\u2DFF\\u803B\\xAA\\u40AA\\u803B\\xBA\\u40BAgof;\\u62B6r;\\u6A56lope;\\u6A57;\\u6A5B\\u0180clo\\u2E1F\\u2E21\\u2E27\\xF2\\u2E01ash\\u803B\\xF8\\u40F8l;\\u6298i\\u016C\\u2E2F\\u2E34de\\u803B\\xF5\\u40F5es\\u0100;a\\u01DB\\u2E3As;\\u6A36ml\\u803B\\xF6\\u40F6bar;\\u633D\\u0AE1\\u2E5E\\0\\u2E7D\\0\\u2E80\\u2E9D\\0\\u2EA2\\u2EB9\\0\\0\\u2ECB\\u0E9C\\0\\u2F13\\0\\0\\u2F2B\\u2FBC\\0\\u2FC8r\\u0200;ast\\u0403\\u2E67\\u2E72\\u0E85\\u8100\\xB6;l\\u2E6D\\u2E6E\\u40B6le\\xEC\\u0403\\u0269\\u2E78\\0\\0\\u2E7Bm;\\u6AF3;\\u6AFDy;\\u443Fr\\u0280cimpt\\u2E8B\\u2E8F\\u2E93\\u1865\\u2E97nt;\\u4025od;\\u402Eil;\\u6030enk;\\u6031r;\\uC000\\u{1D52D}\\u0180imo\\u2EA8\\u2EB0\\u2EB4\\u0100;v\\u2EAD\\u2EAE\\u43C6;\\u43D5ma\\xF4\\u0A76ne;\\u660E\\u0180;tv\\u2EBF\\u2EC0\\u2EC8\\u43C0chfork\\xBB\\u1FFD;\\u43D6\\u0100au\\u2ECF\\u2EDFn\\u0100ck\\u2ED5\\u2EDDk\\u0100;h\\u21F4\\u2EDB;\\u610E\\xF6\\u21F4s\\u0480;abcdemst\\u2EF3\\u2EF4\\u1908\\u2EF9\\u2EFD\\u2F04\\u2F06\\u2F0A\\u2F0E\\u402Bcir;\\u6A23ir;\\u6A22\\u0100ou\\u1D40\\u2F02;\\u6A25;\\u6A72n\\u80BB\\xB1\\u0E9Dim;\\u6A26wo;\\u6A27\\u0180ipu\\u2F19\\u2F20\\u2F25ntint;\\u6A15f;\\uC000\\u{1D561}nd\\u803B\\xA3\\u40A3\\u0500;Eaceinosu\\u0EC8\\u2F3F\\u2F41\\u2F44\\u2F47\\u2F81\\u2F89\\u2F92\\u2F7E\\u2FB6;\\u6AB3p;\\u6AB7u\\xE5\\u0ED9\\u0100;c\\u0ECE\\u2F4C\\u0300;acens\\u0EC8\\u2F59\\u2F5F\\u2F66\\u2F68\\u2F7Eppro\\xF8\\u2F43urlye\\xF1\\u0ED9\\xF1\\u0ECE\\u0180aes\\u2F6F\\u2F76\\u2F7Approx;\\u6AB9qq;\\u6AB5im;\\u62E8i\\xED\\u0EDFme\\u0100;s\\u2F88\\u0EAE\\u6032\\u0180Eas\\u2F78\\u2F90\\u2F7A\\xF0\\u2F75\\u0180dfp\\u0EEC\\u2F99\\u2FAF\\u0180als\\u2FA0\\u2FA5\\u2FAAlar;\\u632Eine;\\u6312urf;\\u6313\\u0100;t\\u0EFB\\u2FB4\\xEF\\u0EFBrel;\\u62B0\\u0100ci\\u2FC0\\u2FC5r;\\uC000\\u{1D4C5};\\u43C8ncsp;\\u6008\\u0300fiopsu\\u2FDA\\u22E2\\u2FDF\\u2FE5\\u2FEB\\u2FF1r;\\uC000\\u{1D52E}pf;\\uC000\\u{1D562}rime;\\u6057cr;\\uC000\\u{1D4C6}\\u0180aeo\\u2FF8\\u3009\\u3013t\\u0100ei\\u2FFE\\u3005rnion\\xF3\\u06B0nt;\\u6A16st\\u0100;e\\u3010\\u3011\\u403F\\xF1\\u1F19\\xF4\\u0F14\\u0A80ABHabcdefhilmnoprstux\\u3040\\u3051\\u3055\\u3059\\u30E0\\u310E\\u312B\\u3147\\u3162\\u3172\\u318E\\u3206\\u3215\\u3224\\u3229\\u3258\\u326E\\u3272\\u3290\\u32B0\\u32B7\\u0180art\\u3047\\u304A\\u304Cr\\xF2\\u10B3\\xF2\\u03DDail;\\u691Car\\xF2\\u1C65ar;\\u6964\\u0380cdenqrt\\u3068\\u3075\\u3078\\u307F\\u308F\\u3094\\u30CC\\u0100eu\\u306D\\u3071;\\uC000\\u223D\\u0331te;\\u4155i\\xE3\\u116Emptyv;\\u69B3g\\u0200;del\\u0FD1\\u3089\\u308B\\u308D;\\u6992;\\u69A5\\xE5\\u0FD1uo\\u803B\\xBB\\u40BBr\\u0580;abcfhlpstw\\u0FDC\\u30AC\\u30AF\\u30B7\\u30B9\\u30BC\\u30BE\\u30C0\\u30C3\\u30C7\\u30CAp;\\u6975\\u0100;f\\u0FE0\\u30B4s;\\u6920;\\u6933s;\\u691E\\xEB\\u225D\\xF0\\u272El;\\u6945im;\\u6974l;\\u61A3;\\u619D\\u0100ai\\u30D1\\u30D5il;\\u691Ao\\u0100;n\\u30DB\\u30DC\\u6236al\\xF3\\u0F1E\\u0180abr\\u30E7\\u30EA\\u30EEr\\xF2\\u17E5rk;\\u6773\\u0100ak\\u30F3\\u30FDc\\u0100ek\\u30F9\\u30FB;\\u407D;\\u405D\\u0100es\\u3102\\u3104;\\u698Cl\\u0100du\\u310A\\u310C;\\u698E;\\u6990\\u0200aeuy\\u3117\\u311C\\u3127\\u3129ron;\\u4159\\u0100di\\u3121\\u3125il;\\u4157\\xEC\\u0FF2\\xE2\\u30FA;\\u4440\\u0200clqs\\u3134\\u3137\\u313D\\u3144a;\\u6937dhar;\\u6969uo\\u0100;r\\u020E\\u020Dh;\\u61B3\\u0180acg\\u314E\\u315F\\u0F44l\\u0200;ips\\u0F78\\u3158\\u315B\\u109Cn\\xE5\\u10BBar\\xF4\\u0FA9t;\\u65AD\\u0180ilr\\u3169\\u1023\\u316Esht;\\u697D;\\uC000\\u{1D52F}\\u0100ao\\u3177\\u3186r\\u0100du\\u317D\\u317F\\xBB\\u047B\\u0100;l\\u1091\\u3184;\\u696C\\u0100;v\\u318B\\u318C\\u43C1;\\u43F1\\u0180gns\\u3195\\u31F9\\u31FCht\\u0300ahlrst\\u31A4\\u31B0\\u31C2\\u31D8\\u31E4\\u31EErrow\\u0100;t\\u0FDC\\u31ADa\\xE9\\u30C8arpoon\\u0100du\\u31BB\\u31BFow\\xEE\\u317Ep\\xBB\\u1092eft\\u0100ah\\u31CA\\u31D0rrow\\xF3\\u0FEAarpoon\\xF3\\u0551ightarrows;\\u61C9quigarro\\xF7\\u30CBhreetimes;\\u62CCg;\\u42DAingdotse\\xF1\\u1F32\\u0180ahm\\u320D\\u3210\\u3213r\\xF2\\u0FEAa\\xF2\\u0551;\\u600Foust\\u0100;a\\u321E\\u321F\\u63B1che\\xBB\\u321Fmid;\\u6AEE\\u0200abpt\\u3232\\u323D\\u3240\\u3252\\u0100nr\\u3237\\u323Ag;\\u67EDr;\\u61FEr\\xEB\\u1003\\u0180afl\\u3247\\u324A\\u324Er;\\u6986;\\uC000\\u{1D563}us;\\u6A2Eimes;\\u6A35\\u0100ap\\u325D\\u3267r\\u0100;g\\u3263\\u3264\\u4029t;\\u6994olint;\\u6A12ar\\xF2\\u31E3\\u0200achq\\u327B\\u3280\\u10BC\\u3285quo;\\u603Ar;\\uC000\\u{1D4C7}\\u0100bu\\u30FB\\u328Ao\\u0100;r\\u0214\\u0213\\u0180hir\\u3297\\u329B\\u32A0re\\xE5\\u31F8mes;\\u62CAi\\u0200;efl\\u32AA\\u1059\\u1821\\u32AB\\u65B9tri;\\u69CEluhar;\\u6968;\\u611E\\u0D61\\u32D5\\u32DB\\u32DF\\u332C\\u3338\\u3371\\0\\u337A\\u33A4\\0\\0\\u33EC\\u33F0\\0\\u3428\\u3448\\u345A\\u34AD\\u34B1\\u34CA\\u34F1\\0\\u3616\\0\\0\\u3633cute;\\u415Bqu\\xEF\\u27BA\\u0500;Eaceinpsy\\u11ED\\u32F3\\u32F5\\u32FF\\u3302\\u330B\\u330F\\u331F\\u3326\\u3329;\\u6AB4\\u01F0\\u32FA\\0\\u32FC;\\u6AB8on;\\u4161u\\xE5\\u11FE\\u0100;d\\u11F3\\u3307il;\\u415Frc;\\u415D\\u0180Eas\\u3316\\u3318\\u331B;\\u6AB6p;\\u6ABAim;\\u62E9olint;\\u6A13i\\xED\\u1204;\\u4441ot\\u0180;be\\u3334\\u1D47\\u3335\\u62C5;\\u6A66\\u0380Aacmstx\\u3346\\u334A\\u3357\\u335B\\u335E\\u3363\\u336Drr;\\u61D8r\\u0100hr\\u3350\\u3352\\xEB\\u2228\\u0100;o\\u0A36\\u0A34t\\u803B\\xA7\\u40A7i;\\u403Bwar;\\u6929m\\u0100in\\u3369\\xF0nu\\xF3\\xF1t;\\u6736r\\u0100;o\\u3376\\u2055\\uC000\\u{1D530}\\u0200acoy\\u3382\\u3386\\u3391\\u33A0rp;\\u666F\\u0100hy\\u338B\\u338Fcy;\\u4449;\\u4448rt\\u026D\\u3399\\0\\0\\u339Ci\\xE4\\u1464ara\\xEC\\u2E6F\\u803B\\xAD\\u40AD\\u0100gm\\u33A8\\u33B4ma\\u0180;fv\\u33B1\\u33B2\\u33B2\\u43C3;\\u43C2\\u0400;deglnpr\\u12AB\\u33C5\\u33C9\\u33CE\\u33D6\\u33DE\\u33E1\\u33E6ot;\\u6A6A\\u0100;q\\u12B1\\u12B0\\u0100;E\\u33D3\\u33D4\\u6A9E;\\u6AA0\\u0100;E\\u33DB\\u33DC\\u6A9D;\\u6A9Fe;\\u6246lus;\\u6A24arr;\\u6972ar\\xF2\\u113D\\u0200aeit\\u33F8\\u3408\\u340F\\u3417\\u0100ls\\u33FD\\u3404lsetm\\xE9\\u336Ahp;\\u6A33parsl;\\u69E4\\u0100dl\\u1463\\u3414e;\\u6323\\u0100;e\\u341C\\u341D\\u6AAA\\u0100;s\\u3422\\u3423\\u6AAC;\\uC000\\u2AAC\\uFE00\\u0180flp\\u342E\\u3433\\u3442tcy;\\u444C\\u0100;b\\u3438\\u3439\\u402F\\u0100;a\\u343E\\u343F\\u69C4r;\\u633Ff;\\uC000\\u{1D564}a\\u0100dr\\u344D\\u0402es\\u0100;u\\u3454\\u3455\\u6660it\\xBB\\u3455\\u0180csu\\u3460\\u3479\\u349F\\u0100au\\u3465\\u346Fp\\u0100;s\\u1188\\u346B;\\uC000\\u2293\\uFE00p\\u0100;s\\u11B4\\u3475;\\uC000\\u2294\\uFE00u\\u0100bp\\u347F\\u348F\\u0180;es\\u1197\\u119C\\u3486et\\u0100;e\\u1197\\u348D\\xF1\\u119D\\u0180;es\\u11A8\\u11AD\\u3496et\\u0100;e\\u11A8\\u349D\\xF1\\u11AE\\u0180;af\\u117B\\u34A6\\u05B0r\\u0165\\u34AB\\u05B1\\xBB\\u117Car\\xF2\\u1148\\u0200cemt\\u34B9\\u34BE\\u34C2\\u34C5r;\\uC000\\u{1D4C8}tm\\xEE\\xF1i\\xEC\\u3415ar\\xE6\\u11BE\\u0100ar\\u34CE\\u34D5r\\u0100;f\\u34D4\\u17BF\\u6606\\u0100an\\u34DA\\u34EDight\\u0100ep\\u34E3\\u34EApsilo\\xEE\\u1EE0h\\xE9\\u2EAFs\\xBB\\u2852\\u0280bcmnp\\u34FB\\u355E\\u1209\\u358B\\u358E\\u0480;Edemnprs\\u350E\\u350F\\u3511\\u3515\\u351E\\u3523\\u352C\\u3531\\u3536\\u6282;\\u6AC5ot;\\u6ABD\\u0100;d\\u11DA\\u351Aot;\\u6AC3ult;\\u6AC1\\u0100Ee\\u3528\\u352A;\\u6ACB;\\u628Alus;\\u6ABFarr;\\u6979\\u0180eiu\\u353D\\u3552\\u3555t\\u0180;en\\u350E\\u3545\\u354Bq\\u0100;q\\u11DA\\u350Feq\\u0100;q\\u352B\\u3528m;\\u6AC7\\u0100bp\\u355A\\u355C;\\u6AD5;\\u6AD3c\\u0300;acens\\u11ED\\u356C\\u3572\\u3579\\u357B\\u3326ppro\\xF8\\u32FAurlye\\xF1\\u11FE\\xF1\\u11F3\\u0180aes\\u3582\\u3588\\u331Bppro\\xF8\\u331Aq\\xF1\\u3317g;\\u666A\\u0680123;Edehlmnps\\u35A9\\u35AC\\u35AF\\u121C\\u35B2\\u35B4\\u35C0\\u35C9\\u35D5\\u35DA\\u35DF\\u35E8\\u35ED\\u803B\\xB9\\u40B9\\u803B\\xB2\\u40B2\\u803B\\xB3\\u40B3;\\u6AC6\\u0100os\\u35B9\\u35BCt;\\u6ABEub;\\u6AD8\\u0100;d\\u1222\\u35C5ot;\\u6AC4s\\u0100ou\\u35CF\\u35D2l;\\u67C9b;\\u6AD7arr;\\u697Bult;\\u6AC2\\u0100Ee\\u35E4\\u35E6;\\u6ACC;\\u628Blus;\\u6AC0\\u0180eiu\\u35F4\\u3609\\u360Ct\\u0180;en\\u121C\\u35FC\\u3602q\\u0100;q\\u1222\\u35B2eq\\u0100;q\\u35E7\\u35E4m;\\u6AC8\\u0100bp\\u3611\\u3613;\\u6AD4;\\u6AD6\\u0180Aan\\u361C\\u3620\\u362Drr;\\u61D9r\\u0100hr\\u3626\\u3628\\xEB\\u222E\\u0100;o\\u0A2B\\u0A29war;\\u692Alig\\u803B\\xDF\\u40DF\\u0BE1\\u3651\\u365D\\u3660\\u12CE\\u3673\\u3679\\0\\u367E\\u36C2\\0\\0\\0\\0\\0\\u36DB\\u3703\\0\\u3709\\u376C\\0\\0\\0\\u3787\\u0272\\u3656\\0\\0\\u365Bget;\\u6316;\\u43C4r\\xEB\\u0E5F\\u0180aey\\u3666\\u366B\\u3670ron;\\u4165dil;\\u4163;\\u4442lrec;\\u6315r;\\uC000\\u{1D531}\\u0200eiko\\u3686\\u369D\\u36B5\\u36BC\\u01F2\\u368B\\0\\u3691e\\u01004f\\u1284\\u1281a\\u0180;sv\\u3698\\u3699\\u369B\\u43B8ym;\\u43D1\\u0100cn\\u36A2\\u36B2k\\u0100as\\u36A8\\u36AEppro\\xF8\\u12C1im\\xBB\\u12ACs\\xF0\\u129E\\u0100as\\u36BA\\u36AE\\xF0\\u12C1rn\\u803B\\xFE\\u40FE\\u01EC\\u031F\\u36C6\\u22E7es\\u8180\\xD7;bd\\u36CF\\u36D0\\u36D8\\u40D7\\u0100;a\\u190F\\u36D5r;\\u6A31;\\u6A30\\u0180eps\\u36E1\\u36E3\\u3700\\xE1\\u2A4D\\u0200;bcf\\u0486\\u36EC\\u36F0\\u36F4ot;\\u6336ir;\\u6AF1\\u0100;o\\u36F9\\u36FC\\uC000\\u{1D565}rk;\\u6ADA\\xE1\\u3362rime;\\u6034\\u0180aip\\u370F\\u3712\\u3764d\\xE5\\u1248\\u0380adempst\\u3721\\u374D\\u3740\\u3751\\u3757\\u375C\\u375Fngle\\u0280;dlqr\\u3730\\u3731\\u3736\\u3740\\u3742\\u65B5own\\xBB\\u1DBBeft\\u0100;e\\u2800\\u373E\\xF1\\u092E;\\u625Cight\\u0100;e\\u32AA\\u374B\\xF1\\u105Aot;\\u65ECinus;\\u6A3Alus;\\u6A39b;\\u69CDime;\\u6A3Bezium;\\u63E2\\u0180cht\\u3772\\u377D\\u3781\\u0100ry\\u3777\\u377B;\\uC000\\u{1D4C9};\\u4446cy;\\u445Brok;\\u4167\\u0100io\\u378B\\u378Ex\\xF4\\u1777head\\u0100lr\\u3797\\u37A0eftarro\\xF7\\u084Fightarrow\\xBB\\u0F5D\\u0900AHabcdfghlmoprstuw\\u37D0\\u37D3\\u37D7\\u37E4\\u37F0\\u37FC\\u380E\\u381C\\u3823\\u3834\\u3851\\u385D\\u386B\\u38A9\\u38CC\\u38D2\\u38EA\\u38F6r\\xF2\\u03EDar;\\u6963\\u0100cr\\u37DC\\u37E2ute\\u803B\\xFA\\u40FA\\xF2\\u1150r\\u01E3\\u37EA\\0\\u37EDy;\\u445Eve;\\u416D\\u0100iy\\u37F5\\u37FArc\\u803B\\xFB\\u40FB;\\u4443\\u0180abh\\u3803\\u3806\\u380Br\\xF2\\u13ADlac;\\u4171a\\xF2\\u13C3\\u0100ir\\u3813\\u3818sht;\\u697E;\\uC000\\u{1D532}rave\\u803B\\xF9\\u40F9\\u0161\\u3827\\u3831r\\u0100lr\\u382C\\u382E\\xBB\\u0957\\xBB\\u1083lk;\\u6580\\u0100ct\\u3839\\u384D\\u026F\\u383F\\0\\0\\u384Arn\\u0100;e\\u3845\\u3846\\u631Cr\\xBB\\u3846op;\\u630Fri;\\u65F8\\u0100al\\u3856\\u385Acr;\\u416B\\u80BB\\xA8\\u0349\\u0100gp\\u3862\\u3866on;\\u4173f;\\uC000\\u{1D566}\\u0300adhlsu\\u114B\\u3878\\u387D\\u1372\\u3891\\u38A0own\\xE1\\u13B3arpoon\\u0100lr\\u3888\\u388Cef\\xF4\\u382Digh\\xF4\\u382Fi\\u0180;hl\\u3899\\u389A\\u389C\\u43C5\\xBB\\u13FAon\\xBB\\u389Aparrows;\\u61C8\\u0180cit\\u38B0\\u38C4\\u38C8\\u026F\\u38B6\\0\\0\\u38C1rn\\u0100;e\\u38BC\\u38BD\\u631Dr\\xBB\\u38BDop;\\u630Eng;\\u416Fri;\\u65F9cr;\\uC000\\u{1D4CA}\\u0180dir\\u38D9\\u38DD\\u38E2ot;\\u62F0lde;\\u4169i\\u0100;f\\u3730\\u38E8\\xBB\\u1813\\u0100am\\u38EF\\u38F2r\\xF2\\u38A8l\\u803B\\xFC\\u40FCangle;\\u69A7\\u0780ABDacdeflnoprsz\\u391C\\u391F\\u3929\\u392D\\u39B5\\u39B8\\u39BD\\u39DF\\u39E4\\u39E8\\u39F3\\u39F9\\u39FD\\u3A01\\u3A20r\\xF2\\u03F7ar\\u0100;v\\u3926\\u3927\\u6AE8;\\u6AE9as\\xE8\\u03E1\\u0100nr\\u3932\\u3937grt;\\u699C\\u0380eknprst\\u34E3\\u3946\\u394B\\u3952\\u395D\\u3964\\u3996app\\xE1\\u2415othin\\xE7\\u1E96\\u0180hir\\u34EB\\u2EC8\\u3959op\\xF4\\u2FB5\\u0100;h\\u13B7\\u3962\\xEF\\u318D\\u0100iu\\u3969\\u396Dgm\\xE1\\u33B3\\u0100bp\\u3972\\u3984setneq\\u0100;q\\u397D\\u3980\\uC000\\u228A\\uFE00;\\uC000\\u2ACB\\uFE00setneq\\u0100;q\\u398F\\u3992\\uC000\\u228B\\uFE00;\\uC000\\u2ACC\\uFE00\\u0100hr\\u399B\\u399Fet\\xE1\\u369Ciangle\\u0100lr\\u39AA\\u39AFeft\\xBB\\u0925ight\\xBB\\u1051y;\\u4432ash\\xBB\\u1036\\u0180elr\\u39C4\\u39D2\\u39D7\\u0180;be\\u2DEA\\u39CB\\u39CFar;\\u62BBq;\\u625Alip;\\u62EE\\u0100bt\\u39DC\\u1468a\\xF2\\u1469r;\\uC000\\u{1D533}tr\\xE9\\u39AEsu\\u0100bp\\u39EF\\u39F1\\xBB\\u0D1C\\xBB\\u0D59pf;\\uC000\\u{1D567}ro\\xF0\\u0EFBtr\\xE9\\u39B4\\u0100cu\\u3A06\\u3A0Br;\\uC000\\u{1D4CB}\\u0100bp\\u3A10\\u3A18n\\u0100Ee\\u3980\\u3A16\\xBB\\u397En\\u0100Ee\\u3992\\u3A1E\\xBB\\u3990igzag;\\u699A\\u0380cefoprs\\u3A36\\u3A3B\\u3A56\\u3A5B\\u3A54\\u3A61\\u3A6Airc;\\u4175\\u0100di\\u3A40\\u3A51\\u0100bg\\u3A45\\u3A49ar;\\u6A5Fe\\u0100;q\\u15FA\\u3A4F;\\u6259erp;\\u6118r;\\uC000\\u{1D534}pf;\\uC000\\u{1D568}\\u0100;e\\u1479\\u3A66at\\xE8\\u1479cr;\\uC000\\u{1D4CC}\\u0AE3\\u178E\\u3A87\\0\\u3A8B\\0\\u3A90\\u3A9B\\0\\0\\u3A9D\\u3AA8\\u3AAB\\u3AAF\\0\\0\\u3AC3\\u3ACE\\0\\u3AD8\\u17DC\\u17DFtr\\xE9\\u17D1r;\\uC000\\u{1D535}\\u0100Aa\\u3A94\\u3A97r\\xF2\\u03C3r\\xF2\\u09F6;\\u43BE\\u0100Aa\\u3AA1\\u3AA4r\\xF2\\u03B8r\\xF2\\u09EBa\\xF0\\u2713is;\\u62FB\\u0180dpt\\u17A4\\u3AB5\\u3ABE\\u0100fl\\u3ABA\\u17A9;\\uC000\\u{1D569}im\\xE5\\u17B2\\u0100Aa\\u3AC7\\u3ACAr\\xF2\\u03CEr\\xF2\\u0A01\\u0100cq\\u3AD2\\u17B8r;\\uC000\\u{1D4CD}\\u0100pt\\u17D6\\u3ADCr\\xE9\\u17D4\\u0400acefiosu\\u3AF0\\u3AFD\\u3B08\\u3B0C\\u3B11\\u3B15\\u3B1B\\u3B21c\\u0100uy\\u3AF6\\u3AFBte\\u803B\\xFD\\u40FD;\\u444F\\u0100iy\\u3B02\\u3B06rc;\\u4177;\\u444Bn\\u803B\\xA5\\u40A5r;\\uC000\\u{1D536}cy;\\u4457pf;\\uC000\\u{1D56A}cr;\\uC000\\u{1D4CE}\\u0100cm\\u3B26\\u3B29y;\\u444El\\u803B\\xFF\\u40FF\\u0500acdefhiosw\\u3B42\\u3B48\\u3B54\\u3B58\\u3B64\\u3B69\\u3B6D\\u3B74\\u3B7A\\u3B80cute;\\u417A\\u0100ay\\u3B4D\\u3B52ron;\\u417E;\\u4437ot;\\u417C\\u0100et\\u3B5D\\u3B61tr\\xE6\\u155Fa;\\u43B6r;\\uC000\\u{1D537}cy;\\u4436grarr;\\u61DDpf;\\uC000\\u{1D56B}cr;\\uC000\\u{1D4CF}\\u0100jn\\u3B85\\u3B87;\\u600Dj;\\u600C'.split(\"\").map(function (e3) {\n    return e3.charCodeAt(0);\n  }));\n  var p = {};\n  Object.defineProperty(p, \"__esModule\", {\n    value: true\n  }), p.default = new Uint16Array(\"\\u0200aglq\t\u0015\u0018\\x1B\\u026D\u000f\\0\\0\u0012p;\\u4026os;\\u4027t;\\u403Et;\\u403Cuot;\\u4022\".split(\"\").map(function (e3) {\n    return e3.charCodeAt(0);\n  }));\n  var u,\n    N,\n    I,\n    C,\n    S,\n    D = {};\n  !function (e3) {\n    var t2;\n    Object.defineProperty(e3, \"__esModule\", {\n      value: true\n    }), e3.replaceCodePoint = e3.fromCodePoint = void 0;\n    var s2 = /* @__PURE__ */new Map([[0, 65533], [128, 8364], [130, 8218], [131, 402], [132, 8222], [133, 8230], [134, 8224], [135, 8225], [136, 710], [137, 8240], [138, 352], [139, 8249], [140, 338], [142, 381], [145, 8216], [146, 8217], [147, 8220], [148, 8221], [149, 8226], [150, 8211], [151, 8212], [152, 732], [153, 8482], [154, 353], [155, 8250], [156, 339], [158, 382], [159, 376]]);\n    function a2(e4) {\n      var t3;\n      return e4 >= 55296 && e4 <= 57343 || e4 > 1114111 ? 65533 : null !== (t3 = s2.get(e4)) && void 0 !== t3 ? t3 : e4;\n    }\n    e3.fromCodePoint = null !== (t2 = String.fromCodePoint) && void 0 !== t2 ? t2 : function (e4) {\n      var t3 = \"\";\n      return e4 > 65535 && (e4 -= 65536, t3 += String.fromCharCode(e4 >>> 10 & 1023 | 55296), e4 = 56320 | 1023 & e4), t3 + String.fromCharCode(e4);\n    }, e3.replaceCodePoint = a2, e3.default = function (t3) {\n      return (0, e3.fromCodePoint)(a2(t3));\n    };\n  }(D), function (e3) {\n    var t2 = l && l.__createBinding || (Object.create ? function (e4, t3, s3, a3) {\n        void 0 === a3 && (a3 = s3);\n        var r3 = Object.getOwnPropertyDescriptor(t3, s3);\n        r3 && !(\"get\" in r3 ? !t3.__esModule : r3.writable || r3.configurable) || (r3 = {\n          enumerable: true,\n          get: function () {\n            return t3[s3];\n          }\n        }), Object.defineProperty(e4, a3, r3);\n      } : function (e4, t3, s3, a3) {\n        void 0 === a3 && (a3 = s3), e4[a3] = t3[s3];\n      }),\n      s2 = l && l.__setModuleDefault || (Object.create ? function (e4, t3) {\n        Object.defineProperty(e4, \"default\", {\n          enumerable: true,\n          value: t3\n        });\n      } : function (e4, t3) {\n        e4.default = t3;\n      }),\n      a2 = l && l.__importStar || function (e4) {\n        if (e4 && e4.__esModule) return e4;\n        var a3 = {};\n        if (null != e4) for (var r3 in e4) \"default\" !== r3 && Object.prototype.hasOwnProperty.call(e4, r3) && t2(a3, e4, r3);\n        return s2(a3, e4), a3;\n      },\n      r2 = l && l.__importDefault || function (e4) {\n        return e4 && e4.__esModule ? e4 : {\n          default: e4\n        };\n      };\n    Object.defineProperty(e3, \"__esModule\", {\n      value: true\n    }), e3.decodeXML = e3.decodeHTMLStrict = e3.decodeHTMLAttribute = e3.decodeHTML = e3.determineBranch = e3.EntityDecoder = e3.DecodingMode = e3.BinTrieFlags = e3.fromCodePoint = e3.replaceCodePoint = e3.decodeCodePoint = e3.xmlDecodeTree = e3.htmlDecodeTree = void 0;\n    var n2 = r2(d);\n    e3.htmlDecodeTree = n2.default;\n    var i2 = r2(p);\n    e3.xmlDecodeTree = i2.default;\n    var o2 = a2(D);\n    e3.decodeCodePoint = o2.default;\n    var c2,\n      E2,\n      T2,\n      h2,\n      _2 = D;\n    function A2(e4) {\n      return e4 >= c2.ZERO && e4 <= c2.NINE;\n    }\n    Object.defineProperty(e3, \"replaceCodePoint\", {\n      enumerable: true,\n      get: function () {\n        return _2.replaceCodePoint;\n      }\n    }), Object.defineProperty(e3, \"fromCodePoint\", {\n      enumerable: true,\n      get: function () {\n        return _2.fromCodePoint;\n      }\n    }), function (e4) {\n      e4[e4.NUM = 35] = \"NUM\", e4[e4.SEMI = 59] = \"SEMI\", e4[e4.EQUALS = 61] = \"EQUALS\", e4[e4.ZERO = 48] = \"ZERO\", e4[e4.NINE = 57] = \"NINE\", e4[e4.LOWER_A = 97] = \"LOWER_A\", e4[e4.LOWER_F = 102] = \"LOWER_F\", e4[e4.LOWER_X = 120] = \"LOWER_X\", e4[e4.LOWER_Z = 122] = \"LOWER_Z\", e4[e4.UPPER_A = 65] = \"UPPER_A\", e4[e4.UPPER_F = 70] = \"UPPER_F\", e4[e4.UPPER_Z = 90] = \"UPPER_Z\";\n    }(c2 || (c2 = {})), function (e4) {\n      e4[e4.VALUE_LENGTH = 49152] = \"VALUE_LENGTH\", e4[e4.BRANCH_LENGTH = 16256] = \"BRANCH_LENGTH\", e4[e4.JUMP_TABLE = 127] = \"JUMP_TABLE\";\n    }(E2 = e3.BinTrieFlags || (e3.BinTrieFlags = {})), function (e4) {\n      e4[e4.EntityStart = 0] = \"EntityStart\", e4[e4.NumericStart = 1] = \"NumericStart\", e4[e4.NumericDecimal = 2] = \"NumericDecimal\", e4[e4.NumericHex = 3] = \"NumericHex\", e4[e4.NamedEntity = 4] = \"NamedEntity\";\n    }(T2 || (T2 = {})), function (e4) {\n      e4[e4.Legacy = 0] = \"Legacy\", e4[e4.Strict = 1] = \"Strict\", e4[e4.Attribute = 2] = \"Attribute\";\n    }(h2 = e3.DecodingMode || (e3.DecodingMode = {}));\n    var m2 = function () {\n      function e4(e5, t3, s3) {\n        this.decodeTree = e5, this.emitCodePoint = t3, this.errors = s3, this.state = T2.EntityStart, this.consumed = 1, this.result = 0, this.treeIndex = 0, this.excess = 1, this.decodeMode = h2.Strict;\n      }\n      return e4.prototype.startEntity = function (e5) {\n        this.decodeMode = e5, this.state = T2.EntityStart, this.result = 0, this.treeIndex = 0, this.excess = 1, this.consumed = 1;\n      }, e4.prototype.write = function (e5, t3) {\n        switch (this.state) {\n          case T2.EntityStart:\n            return e5.charCodeAt(t3) === c2.NUM ? (this.state = T2.NumericStart, this.consumed += 1, this.stateNumericStart(e5, t3 + 1)) : (this.state = T2.NamedEntity, this.stateNamedEntity(e5, t3));\n          case T2.NumericStart:\n            return this.stateNumericStart(e5, t3);\n          case T2.NumericDecimal:\n            return this.stateNumericDecimal(e5, t3);\n          case T2.NumericHex:\n            return this.stateNumericHex(e5, t3);\n          case T2.NamedEntity:\n            return this.stateNamedEntity(e5, t3);\n        }\n      }, e4.prototype.stateNumericStart = function (e5, t3) {\n        return t3 >= e5.length ? -1 : (32 | e5.charCodeAt(t3)) === c2.LOWER_X ? (this.state = T2.NumericHex, this.consumed += 1, this.stateNumericHex(e5, t3 + 1)) : (this.state = T2.NumericDecimal, this.stateNumericDecimal(e5, t3));\n      }, e4.prototype.addToNumericResult = function (e5, t3, s3, a3) {\n        if (t3 !== s3) {\n          var r3 = s3 - t3;\n          this.result = this.result * Math.pow(a3, r3) + parseInt(e5.substr(t3, r3), a3), this.consumed += r3;\n        }\n      }, e4.prototype.stateNumericHex = function (e5, t3) {\n        for (var s3, a3 = t3; t3 < e5.length;) {\n          var r3 = e5.charCodeAt(t3);\n          if (!(A2(r3) || (s3 = r3, s3 >= c2.UPPER_A && s3 <= c2.UPPER_F || s3 >= c2.LOWER_A && s3 <= c2.LOWER_F))) return this.addToNumericResult(e5, a3, t3, 16), this.emitNumericEntity(r3, 3);\n          t3 += 1;\n        }\n        return this.addToNumericResult(e5, a3, t3, 16), -1;\n      }, e4.prototype.stateNumericDecimal = function (e5, t3) {\n        for (var s3 = t3; t3 < e5.length;) {\n          var a3 = e5.charCodeAt(t3);\n          if (!A2(a3)) return this.addToNumericResult(e5, s3, t3, 10), this.emitNumericEntity(a3, 2);\n          t3 += 1;\n        }\n        return this.addToNumericResult(e5, s3, t3, 10), -1;\n      }, e4.prototype.emitNumericEntity = function (e5, t3) {\n        var s3;\n        if (this.consumed <= t3) return null === (s3 = this.errors) || void 0 === s3 || s3.absenceOfDigitsInNumericCharacterReference(this.consumed), 0;\n        if (e5 === c2.SEMI) this.consumed += 1;else if (this.decodeMode === h2.Strict) return 0;\n        return this.emitCodePoint((0, o2.replaceCodePoint)(this.result), this.consumed), this.errors && (e5 !== c2.SEMI && this.errors.missingSemicolonAfterCharacterReference(), this.errors.validateNumericCharacterReference(this.result)), this.consumed;\n      }, e4.prototype.stateNamedEntity = function (e5, t3) {\n        for (var s3 = this.decodeTree, a3 = s3[this.treeIndex], r3 = (a3 & E2.VALUE_LENGTH) >> 14; t3 < e5.length; t3++, this.excess++) {\n          var n3 = e5.charCodeAt(t3);\n          if (this.treeIndex = N2(s3, a3, this.treeIndex + Math.max(1, r3), n3), this.treeIndex < 0) return 0 === this.result || this.decodeMode === h2.Attribute && (0 === r3 || (i3 = n3) === c2.EQUALS || function (e6) {\n            return e6 >= c2.UPPER_A && e6 <= c2.UPPER_Z || e6 >= c2.LOWER_A && e6 <= c2.LOWER_Z || A2(e6);\n          }(i3)) ? 0 : this.emitNotTerminatedNamedEntity();\n          if (0 != (r3 = ((a3 = s3[this.treeIndex]) & E2.VALUE_LENGTH) >> 14)) {\n            if (n3 === c2.SEMI) return this.emitNamedEntityData(this.treeIndex, r3, this.consumed + this.excess);\n            this.decodeMode !== h2.Strict && (this.result = this.treeIndex, this.consumed += this.excess, this.excess = 0);\n          }\n        }\n        var i3;\n        return -1;\n      }, e4.prototype.emitNotTerminatedNamedEntity = function () {\n        var e5,\n          t3 = this.result,\n          s3 = (this.decodeTree[t3] & E2.VALUE_LENGTH) >> 14;\n        return this.emitNamedEntityData(t3, s3, this.consumed), null === (e5 = this.errors) || void 0 === e5 || e5.missingSemicolonAfterCharacterReference(), this.consumed;\n      }, e4.prototype.emitNamedEntityData = function (e5, t3, s3) {\n        var a3 = this.decodeTree;\n        return this.emitCodePoint(1 === t3 ? a3[e5] & ~E2.VALUE_LENGTH : a3[e5 + 1], s3), 3 === t3 && this.emitCodePoint(a3[e5 + 2], s3), s3;\n      }, e4.prototype.end = function () {\n        var e5;\n        switch (this.state) {\n          case T2.NamedEntity:\n            return 0 === this.result || this.decodeMode === h2.Attribute && this.result !== this.treeIndex ? 0 : this.emitNotTerminatedNamedEntity();\n          case T2.NumericDecimal:\n            return this.emitNumericEntity(0, 2);\n          case T2.NumericHex:\n            return this.emitNumericEntity(0, 3);\n          case T2.NumericStart:\n            return null === (e5 = this.errors) || void 0 === e5 || e5.absenceOfDigitsInNumericCharacterReference(this.consumed), 0;\n          case T2.EntityStart:\n            return 0;\n        }\n      }, e4;\n    }();\n    function u2(e4) {\n      var t3 = \"\",\n        s3 = new m2(e4, function (e5) {\n          return t3 += (0, o2.fromCodePoint)(e5);\n        });\n      return function (e5, a3) {\n        for (var r3 = 0, n3 = 0; (n3 = e5.indexOf(\"&\", n3)) >= 0;) {\n          t3 += e5.slice(r3, n3), s3.startEntity(a3);\n          var i3 = s3.write(e5, n3 + 1);\n          if (i3 < 0) {\n            r3 = n3 + s3.end();\n            break;\n          }\n          r3 = n3 + i3, n3 = 0 === i3 ? r3 + 1 : r3;\n        }\n        var o3 = t3 + e5.slice(r3);\n        return t3 = \"\", o3;\n      };\n    }\n    function N2(e4, t3, s3, a3) {\n      var r3 = (t3 & E2.BRANCH_LENGTH) >> 7,\n        n3 = t3 & E2.JUMP_TABLE;\n      if (0 === r3) return 0 !== n3 && a3 === n3 ? s3 : -1;\n      if (n3) {\n        var i3 = a3 - n3;\n        return i3 < 0 || i3 >= r3 ? -1 : e4[s3 + i3] - 1;\n      }\n      for (var o3 = s3, c3 = o3 + r3 - 1; o3 <= c3;) {\n        var T3 = o3 + c3 >>> 1,\n          h3 = e4[T3];\n        if (h3 < a3) o3 = T3 + 1;else {\n          if (!(h3 > a3)) return e4[T3 + r3];\n          c3 = T3 - 1;\n        }\n      }\n      return -1;\n    }\n    e3.EntityDecoder = m2, e3.determineBranch = N2;\n    var I2 = u2(n2.default),\n      C2 = u2(i2.default);\n    e3.decodeHTML = function (e4, t3) {\n      return void 0 === t3 && (t3 = h2.Legacy), I2(e4, t3);\n    }, e3.decodeHTMLAttribute = function (e4) {\n      return I2(e4, h2.Attribute);\n    }, e3.decodeHTMLStrict = function (e4) {\n      return I2(e4, h2.Strict);\n    }, e3.decodeXML = function (e4) {\n      return C2(e4, h2.Strict);\n    };\n  }(m), function (e3) {\n    e3.HTML = \"http://www.w3.org/1999/xhtml\", e3.MATHML = \"http://www.w3.org/1998/Math/MathML\", e3.SVG = \"http://www.w3.org/2000/svg\", e3.XLINK = \"http://www.w3.org/1999/xlink\", e3.XML = \"http://www.w3.org/XML/1998/namespace\", e3.XMLNS = \"http://www.w3.org/2000/xmlns/\";\n  }(u = u || (u = {})), function (e3) {\n    e3.TYPE = \"type\", e3.ACTION = \"action\", e3.ENCODING = \"encoding\", e3.PROMPT = \"prompt\", e3.NAME = \"name\", e3.COLOR = \"color\", e3.FACE = \"face\", e3.SIZE = \"size\";\n  }(N = N || (N = {})), function (e3) {\n    e3.NO_QUIRKS = \"no-quirks\", e3.QUIRKS = \"quirks\", e3.LIMITED_QUIRKS = \"limited-quirks\";\n  }(I = I || (I = {})), function (e3) {\n    e3.A = \"a\", e3.ADDRESS = \"address\", e3.ANNOTATION_XML = \"annotation-xml\", e3.APPLET = \"applet\", e3.AREA = \"area\", e3.ARTICLE = \"article\", e3.ASIDE = \"aside\", e3.B = \"b\", e3.BASE = \"base\", e3.BASEFONT = \"basefont\", e3.BGSOUND = \"bgsound\", e3.BIG = \"big\", e3.BLOCKQUOTE = \"blockquote\", e3.BODY = \"body\", e3.BR = \"br\", e3.BUTTON = \"button\", e3.CAPTION = \"caption\", e3.CENTER = \"center\", e3.CODE = \"code\", e3.COL = \"col\", e3.COLGROUP = \"colgroup\", e3.DD = \"dd\", e3.DESC = \"desc\", e3.DETAILS = \"details\", e3.DIALOG = \"dialog\", e3.DIR = \"dir\", e3.DIV = \"div\", e3.DL = \"dl\", e3.DT = \"dt\", e3.EM = \"em\", e3.EMBED = \"embed\", e3.FIELDSET = \"fieldset\", e3.FIGCAPTION = \"figcaption\", e3.FIGURE = \"figure\", e3.FONT = \"font\", e3.FOOTER = \"footer\", e3.FOREIGN_OBJECT = \"foreignObject\", e3.FORM = \"form\", e3.FRAME = \"frame\", e3.FRAMESET = \"frameset\", e3.H1 = \"h1\", e3.H2 = \"h2\", e3.H3 = \"h3\", e3.H4 = \"h4\", e3.H5 = \"h5\", e3.H6 = \"h6\", e3.HEAD = \"head\", e3.HEADER = \"header\", e3.HGROUP = \"hgroup\", e3.HR = \"hr\", e3.HTML = \"html\", e3.I = \"i\", e3.IMG = \"img\", e3.IMAGE = \"image\", e3.INPUT = \"input\", e3.IFRAME = \"iframe\", e3.KEYGEN = \"keygen\", e3.LABEL = \"label\", e3.LI = \"li\", e3.LINK = \"link\", e3.LISTING = \"listing\", e3.MAIN = \"main\", e3.MALIGNMARK = \"malignmark\", e3.MARQUEE = \"marquee\", e3.MATH = \"math\", e3.MENU = \"menu\", e3.META = \"meta\", e3.MGLYPH = \"mglyph\", e3.MI = \"mi\", e3.MO = \"mo\", e3.MN = \"mn\", e3.MS = \"ms\", e3.MTEXT = \"mtext\", e3.NAV = \"nav\", e3.NOBR = \"nobr\", e3.NOFRAMES = \"noframes\", e3.NOEMBED = \"noembed\", e3.NOSCRIPT = \"noscript\", e3.OBJECT = \"object\", e3.OL = \"ol\", e3.OPTGROUP = \"optgroup\", e3.OPTION = \"option\", e3.P = \"p\", e3.PARAM = \"param\", e3.PLAINTEXT = \"plaintext\", e3.PRE = \"pre\", e3.RB = \"rb\", e3.RP = \"rp\", e3.RT = \"rt\", e3.RTC = \"rtc\", e3.RUBY = \"ruby\", e3.S = \"s\", e3.SCRIPT = \"script\", e3.SECTION = \"section\", e3.SELECT = \"select\", e3.SOURCE = \"source\", e3.SMALL = \"small\", e3.SPAN = \"span\", e3.STRIKE = \"strike\", e3.STRONG = \"strong\", e3.STYLE = \"style\", e3.SUB = \"sub\", e3.SUMMARY = \"summary\", e3.SUP = \"sup\", e3.TABLE = \"table\", e3.TBODY = \"tbody\", e3.TEMPLATE = \"template\", e3.TEXTAREA = \"textarea\", e3.TFOOT = \"tfoot\", e3.TD = \"td\", e3.TH = \"th\", e3.THEAD = \"thead\", e3.TITLE = \"title\", e3.TR = \"tr\", e3.TRACK = \"track\", e3.TT = \"tt\", e3.U = \"u\", e3.UL = \"ul\", e3.SVG = \"svg\", e3.VAR = \"var\", e3.WBR = \"wbr\", e3.XMP = \"xmp\";\n  }(C = C || (C = {})), function (e3) {\n    e3[e3.UNKNOWN = 0] = \"UNKNOWN\", e3[e3.A = 1] = \"A\", e3[e3.ADDRESS = 2] = \"ADDRESS\", e3[e3.ANNOTATION_XML = 3] = \"ANNOTATION_XML\", e3[e3.APPLET = 4] = \"APPLET\", e3[e3.AREA = 5] = \"AREA\", e3[e3.ARTICLE = 6] = \"ARTICLE\", e3[e3.ASIDE = 7] = \"ASIDE\", e3[e3.B = 8] = \"B\", e3[e3.BASE = 9] = \"BASE\", e3[e3.BASEFONT = 10] = \"BASEFONT\", e3[e3.BGSOUND = 11] = \"BGSOUND\", e3[e3.BIG = 12] = \"BIG\", e3[e3.BLOCKQUOTE = 13] = \"BLOCKQUOTE\", e3[e3.BODY = 14] = \"BODY\", e3[e3.BR = 15] = \"BR\", e3[e3.BUTTON = 16] = \"BUTTON\", e3[e3.CAPTION = 17] = \"CAPTION\", e3[e3.CENTER = 18] = \"CENTER\", e3[e3.CODE = 19] = \"CODE\", e3[e3.COL = 20] = \"COL\", e3[e3.COLGROUP = 21] = \"COLGROUP\", e3[e3.DD = 22] = \"DD\", e3[e3.DESC = 23] = \"DESC\", e3[e3.DETAILS = 24] = \"DETAILS\", e3[e3.DIALOG = 25] = \"DIALOG\", e3[e3.DIR = 26] = \"DIR\", e3[e3.DIV = 27] = \"DIV\", e3[e3.DL = 28] = \"DL\", e3[e3.DT = 29] = \"DT\", e3[e3.EM = 30] = \"EM\", e3[e3.EMBED = 31] = \"EMBED\", e3[e3.FIELDSET = 32] = \"FIELDSET\", e3[e3.FIGCAPTION = 33] = \"FIGCAPTION\", e3[e3.FIGURE = 34] = \"FIGURE\", e3[e3.FONT = 35] = \"FONT\", e3[e3.FOOTER = 36] = \"FOOTER\", e3[e3.FOREIGN_OBJECT = 37] = \"FOREIGN_OBJECT\", e3[e3.FORM = 38] = \"FORM\", e3[e3.FRAME = 39] = \"FRAME\", e3[e3.FRAMESET = 40] = \"FRAMESET\", e3[e3.H1 = 41] = \"H1\", e3[e3.H2 = 42] = \"H2\", e3[e3.H3 = 43] = \"H3\", e3[e3.H4 = 44] = \"H4\", e3[e3.H5 = 45] = \"H5\", e3[e3.H6 = 46] = \"H6\", e3[e3.HEAD = 47] = \"HEAD\", e3[e3.HEADER = 48] = \"HEADER\", e3[e3.HGROUP = 49] = \"HGROUP\", e3[e3.HR = 50] = \"HR\", e3[e3.HTML = 51] = \"HTML\", e3[e3.I = 52] = \"I\", e3[e3.IMG = 53] = \"IMG\", e3[e3.IMAGE = 54] = \"IMAGE\", e3[e3.INPUT = 55] = \"INPUT\", e3[e3.IFRAME = 56] = \"IFRAME\", e3[e3.KEYGEN = 57] = \"KEYGEN\", e3[e3.LABEL = 58] = \"LABEL\", e3[e3.LI = 59] = \"LI\", e3[e3.LINK = 60] = \"LINK\", e3[e3.LISTING = 61] = \"LISTING\", e3[e3.MAIN = 62] = \"MAIN\", e3[e3.MALIGNMARK = 63] = \"MALIGNMARK\", e3[e3.MARQUEE = 64] = \"MARQUEE\", e3[e3.MATH = 65] = \"MATH\", e3[e3.MENU = 66] = \"MENU\", e3[e3.META = 67] = \"META\", e3[e3.MGLYPH = 68] = \"MGLYPH\", e3[e3.MI = 69] = \"MI\", e3[e3.MO = 70] = \"MO\", e3[e3.MN = 71] = \"MN\", e3[e3.MS = 72] = \"MS\", e3[e3.MTEXT = 73] = \"MTEXT\", e3[e3.NAV = 74] = \"NAV\", e3[e3.NOBR = 75] = \"NOBR\", e3[e3.NOFRAMES = 76] = \"NOFRAMES\", e3[e3.NOEMBED = 77] = \"NOEMBED\", e3[e3.NOSCRIPT = 78] = \"NOSCRIPT\", e3[e3.OBJECT = 79] = \"OBJECT\", e3[e3.OL = 80] = \"OL\", e3[e3.OPTGROUP = 81] = \"OPTGROUP\", e3[e3.OPTION = 82] = \"OPTION\", e3[e3.P = 83] = \"P\", e3[e3.PARAM = 84] = \"PARAM\", e3[e3.PLAINTEXT = 85] = \"PLAINTEXT\", e3[e3.PRE = 86] = \"PRE\", e3[e3.RB = 87] = \"RB\", e3[e3.RP = 88] = \"RP\", e3[e3.RT = 89] = \"RT\", e3[e3.RTC = 90] = \"RTC\", e3[e3.RUBY = 91] = \"RUBY\", e3[e3.S = 92] = \"S\", e3[e3.SCRIPT = 93] = \"SCRIPT\", e3[e3.SECTION = 94] = \"SECTION\", e3[e3.SELECT = 95] = \"SELECT\", e3[e3.SOURCE = 96] = \"SOURCE\", e3[e3.SMALL = 97] = \"SMALL\", e3[e3.SPAN = 98] = \"SPAN\", e3[e3.STRIKE = 99] = \"STRIKE\", e3[e3.STRONG = 100] = \"STRONG\", e3[e3.STYLE = 101] = \"STYLE\", e3[e3.SUB = 102] = \"SUB\", e3[e3.SUMMARY = 103] = \"SUMMARY\", e3[e3.SUP = 104] = \"SUP\", e3[e3.TABLE = 105] = \"TABLE\", e3[e3.TBODY = 106] = \"TBODY\", e3[e3.TEMPLATE = 107] = \"TEMPLATE\", e3[e3.TEXTAREA = 108] = \"TEXTAREA\", e3[e3.TFOOT = 109] = \"TFOOT\", e3[e3.TD = 110] = \"TD\", e3[e3.TH = 111] = \"TH\", e3[e3.THEAD = 112] = \"THEAD\", e3[e3.TITLE = 113] = \"TITLE\", e3[e3.TR = 114] = \"TR\", e3[e3.TRACK = 115] = \"TRACK\", e3[e3.TT = 116] = \"TT\", e3[e3.U = 117] = \"U\", e3[e3.UL = 118] = \"UL\", e3[e3.SVG = 119] = \"SVG\", e3[e3.VAR = 120] = \"VAR\", e3[e3.WBR = 121] = \"WBR\", e3[e3.XMP = 122] = \"XMP\";\n  }(S = S || (S = {}));\n  const R = /* @__PURE__ */new Map([[C.A, S.A], [C.ADDRESS, S.ADDRESS], [C.ANNOTATION_XML, S.ANNOTATION_XML], [C.APPLET, S.APPLET], [C.AREA, S.AREA], [C.ARTICLE, S.ARTICLE], [C.ASIDE, S.ASIDE], [C.B, S.B], [C.BASE, S.BASE], [C.BASEFONT, S.BASEFONT], [C.BGSOUND, S.BGSOUND], [C.BIG, S.BIG], [C.BLOCKQUOTE, S.BLOCKQUOTE], [C.BODY, S.BODY], [C.BR, S.BR], [C.BUTTON, S.BUTTON], [C.CAPTION, S.CAPTION], [C.CENTER, S.CENTER], [C.CODE, S.CODE], [C.COL, S.COL], [C.COLGROUP, S.COLGROUP], [C.DD, S.DD], [C.DESC, S.DESC], [C.DETAILS, S.DETAILS], [C.DIALOG, S.DIALOG], [C.DIR, S.DIR], [C.DIV, S.DIV], [C.DL, S.DL], [C.DT, S.DT], [C.EM, S.EM], [C.EMBED, S.EMBED], [C.FIELDSET, S.FIELDSET], [C.FIGCAPTION, S.FIGCAPTION], [C.FIGURE, S.FIGURE], [C.FONT, S.FONT], [C.FOOTER, S.FOOTER], [C.FOREIGN_OBJECT, S.FOREIGN_OBJECT], [C.FORM, S.FORM], [C.FRAME, S.FRAME], [C.FRAMESET, S.FRAMESET], [C.H1, S.H1], [C.H2, S.H2], [C.H3, S.H3], [C.H4, S.H4], [C.H5, S.H5], [C.H6, S.H6], [C.HEAD, S.HEAD], [C.HEADER, S.HEADER], [C.HGROUP, S.HGROUP], [C.HR, S.HR], [C.HTML, S.HTML], [C.I, S.I], [C.IMG, S.IMG], [C.IMAGE, S.IMAGE], [C.INPUT, S.INPUT], [C.IFRAME, S.IFRAME], [C.KEYGEN, S.KEYGEN], [C.LABEL, S.LABEL], [C.LI, S.LI], [C.LINK, S.LINK], [C.LISTING, S.LISTING], [C.MAIN, S.MAIN], [C.MALIGNMARK, S.MALIGNMARK], [C.MARQUEE, S.MARQUEE], [C.MATH, S.MATH], [C.MENU, S.MENU], [C.META, S.META], [C.MGLYPH, S.MGLYPH], [C.MI, S.MI], [C.MO, S.MO], [C.MN, S.MN], [C.MS, S.MS], [C.MTEXT, S.MTEXT], [C.NAV, S.NAV], [C.NOBR, S.NOBR], [C.NOFRAMES, S.NOFRAMES], [C.NOEMBED, S.NOEMBED], [C.NOSCRIPT, S.NOSCRIPT], [C.OBJECT, S.OBJECT], [C.OL, S.OL], [C.OPTGROUP, S.OPTGROUP], [C.OPTION, S.OPTION], [C.P, S.P], [C.PARAM, S.PARAM], [C.PLAINTEXT, S.PLAINTEXT], [C.PRE, S.PRE], [C.RB, S.RB], [C.RP, S.RP], [C.RT, S.RT], [C.RTC, S.RTC], [C.RUBY, S.RUBY], [C.S, S.S], [C.SCRIPT, S.SCRIPT], [C.SECTION, S.SECTION], [C.SELECT, S.SELECT], [C.SOURCE, S.SOURCE], [C.SMALL, S.SMALL], [C.SPAN, S.SPAN], [C.STRIKE, S.STRIKE], [C.STRONG, S.STRONG], [C.STYLE, S.STYLE], [C.SUB, S.SUB], [C.SUMMARY, S.SUMMARY], [C.SUP, S.SUP], [C.TABLE, S.TABLE], [C.TBODY, S.TBODY], [C.TEMPLATE, S.TEMPLATE], [C.TEXTAREA, S.TEXTAREA], [C.TFOOT, S.TFOOT], [C.TD, S.TD], [C.TH, S.TH], [C.THEAD, S.THEAD], [C.TITLE, S.TITLE], [C.TR, S.TR], [C.TRACK, S.TRACK], [C.TT, S.TT], [C.U, S.U], [C.UL, S.UL], [C.SVG, S.SVG], [C.VAR, S.VAR], [C.WBR, S.WBR], [C.XMP, S.XMP]]);\n  function O(e3) {\n    var t2;\n    return null !== (t2 = R.get(e3)) && void 0 !== t2 ? t2 : S.UNKNOWN;\n  }\n  const f = S,\n    L = {\n      [u.HTML]: /* @__PURE__ */new Set([f.ADDRESS, f.APPLET, f.AREA, f.ARTICLE, f.ASIDE, f.BASE, f.BASEFONT, f.BGSOUND, f.BLOCKQUOTE, f.BODY, f.BR, f.BUTTON, f.CAPTION, f.CENTER, f.COL, f.COLGROUP, f.DD, f.DETAILS, f.DIR, f.DIV, f.DL, f.DT, f.EMBED, f.FIELDSET, f.FIGCAPTION, f.FIGURE, f.FOOTER, f.FORM, f.FRAME, f.FRAMESET, f.H1, f.H2, f.H3, f.H4, f.H5, f.H6, f.HEAD, f.HEADER, f.HGROUP, f.HR, f.HTML, f.IFRAME, f.IMG, f.INPUT, f.LI, f.LINK, f.LISTING, f.MAIN, f.MARQUEE, f.MENU, f.META, f.NAV, f.NOEMBED, f.NOFRAMES, f.NOSCRIPT, f.OBJECT, f.OL, f.P, f.PARAM, f.PLAINTEXT, f.PRE, f.SCRIPT, f.SECTION, f.SELECT, f.SOURCE, f.STYLE, f.SUMMARY, f.TABLE, f.TBODY, f.TD, f.TEMPLATE, f.TEXTAREA, f.TFOOT, f.TH, f.THEAD, f.TITLE, f.TR, f.TRACK, f.UL, f.WBR, f.XMP]),\n      [u.MATHML]: /* @__PURE__ */new Set([f.MI, f.MO, f.MN, f.MS, f.MTEXT, f.ANNOTATION_XML]),\n      [u.SVG]: /* @__PURE__ */new Set([f.TITLE, f.FOREIGN_OBJECT, f.DESC]),\n      [u.XLINK]: /* @__PURE__ */new Set(),\n      [u.XML]: /* @__PURE__ */new Set(),\n      [u.XMLNS]: /* @__PURE__ */new Set()\n    };\n  function M(e3) {\n    return e3 === f.H1 || e3 === f.H2 || e3 === f.H3 || e3 === f.H4 || e3 === f.H5 || e3 === f.H6;\n  }\n  /* @__PURE__ */\n  new Set([C.STYLE, C.SCRIPT, C.XMP, C.IFRAME, C.NOEMBED, C.NOFRAMES, C.PLAINTEXT]);\n  const g = /* @__PURE__ */new Map([[128, 8364], [130, 8218], [131, 402], [132, 8222], [133, 8230], [134, 8224], [135, 8225], [136, 710], [137, 8240], [138, 352], [139, 8249], [140, 338], [142, 381], [145, 8216], [146, 8217], [147, 8220], [148, 8221], [149, 8226], [150, 8211], [151, 8212], [152, 732], [153, 8482], [154, 353], [155, 8250], [156, 339], [158, 382], [159, 376]]);\n  var P;\n  !function (e3) {\n    e3[e3.DATA = 0] = \"DATA\", e3[e3.RCDATA = 1] = \"RCDATA\", e3[e3.RAWTEXT = 2] = \"RAWTEXT\", e3[e3.SCRIPT_DATA = 3] = \"SCRIPT_DATA\", e3[e3.PLAINTEXT = 4] = \"PLAINTEXT\", e3[e3.TAG_OPEN = 5] = \"TAG_OPEN\", e3[e3.END_TAG_OPEN = 6] = \"END_TAG_OPEN\", e3[e3.TAG_NAME = 7] = \"TAG_NAME\", e3[e3.RCDATA_LESS_THAN_SIGN = 8] = \"RCDATA_LESS_THAN_SIGN\", e3[e3.RCDATA_END_TAG_OPEN = 9] = \"RCDATA_END_TAG_OPEN\", e3[e3.RCDATA_END_TAG_NAME = 10] = \"RCDATA_END_TAG_NAME\", e3[e3.RAWTEXT_LESS_THAN_SIGN = 11] = \"RAWTEXT_LESS_THAN_SIGN\", e3[e3.RAWTEXT_END_TAG_OPEN = 12] = \"RAWTEXT_END_TAG_OPEN\", e3[e3.RAWTEXT_END_TAG_NAME = 13] = \"RAWTEXT_END_TAG_NAME\", e3[e3.SCRIPT_DATA_LESS_THAN_SIGN = 14] = \"SCRIPT_DATA_LESS_THAN_SIGN\", e3[e3.SCRIPT_DATA_END_TAG_OPEN = 15] = \"SCRIPT_DATA_END_TAG_OPEN\", e3[e3.SCRIPT_DATA_END_TAG_NAME = 16] = \"SCRIPT_DATA_END_TAG_NAME\", e3[e3.SCRIPT_DATA_ESCAPE_START = 17] = \"SCRIPT_DATA_ESCAPE_START\", e3[e3.SCRIPT_DATA_ESCAPE_START_DASH = 18] = \"SCRIPT_DATA_ESCAPE_START_DASH\", e3[e3.SCRIPT_DATA_ESCAPED = 19] = \"SCRIPT_DATA_ESCAPED\", e3[e3.SCRIPT_DATA_ESCAPED_DASH = 20] = \"SCRIPT_DATA_ESCAPED_DASH\", e3[e3.SCRIPT_DATA_ESCAPED_DASH_DASH = 21] = \"SCRIPT_DATA_ESCAPED_DASH_DASH\", e3[e3.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN = 22] = \"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\", e3[e3.SCRIPT_DATA_ESCAPED_END_TAG_OPEN = 23] = \"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\", e3[e3.SCRIPT_DATA_ESCAPED_END_TAG_NAME = 24] = \"SCRIPT_DATA_ESCAPED_END_TAG_NAME\", e3[e3.SCRIPT_DATA_DOUBLE_ESCAPE_START = 25] = \"SCRIPT_DATA_DOUBLE_ESCAPE_START\", e3[e3.SCRIPT_DATA_DOUBLE_ESCAPED = 26] = \"SCRIPT_DATA_DOUBLE_ESCAPED\", e3[e3.SCRIPT_DATA_DOUBLE_ESCAPED_DASH = 27] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\", e3[e3.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH = 28] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\", e3[e3.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN = 29] = \"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\", e3[e3.SCRIPT_DATA_DOUBLE_ESCAPE_END = 30] = \"SCRIPT_DATA_DOUBLE_ESCAPE_END\", e3[e3.BEFORE_ATTRIBUTE_NAME = 31] = \"BEFORE_ATTRIBUTE_NAME\", e3[e3.ATTRIBUTE_NAME = 32] = \"ATTRIBUTE_NAME\", e3[e3.AFTER_ATTRIBUTE_NAME = 33] = \"AFTER_ATTRIBUTE_NAME\", e3[e3.BEFORE_ATTRIBUTE_VALUE = 34] = \"BEFORE_ATTRIBUTE_VALUE\", e3[e3.ATTRIBUTE_VALUE_DOUBLE_QUOTED = 35] = \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\", e3[e3.ATTRIBUTE_VALUE_SINGLE_QUOTED = 36] = \"ATTRIBUTE_VALUE_SINGLE_QUOTED\", e3[e3.ATTRIBUTE_VALUE_UNQUOTED = 37] = \"ATTRIBUTE_VALUE_UNQUOTED\", e3[e3.AFTER_ATTRIBUTE_VALUE_QUOTED = 38] = \"AFTER_ATTRIBUTE_VALUE_QUOTED\", e3[e3.SELF_CLOSING_START_TAG = 39] = \"SELF_CLOSING_START_TAG\", e3[e3.BOGUS_COMMENT = 40] = \"BOGUS_COMMENT\", e3[e3.MARKUP_DECLARATION_OPEN = 41] = \"MARKUP_DECLARATION_OPEN\", e3[e3.COMMENT_START = 42] = \"COMMENT_START\", e3[e3.COMMENT_START_DASH = 43] = \"COMMENT_START_DASH\", e3[e3.COMMENT = 44] = \"COMMENT\", e3[e3.COMMENT_LESS_THAN_SIGN = 45] = \"COMMENT_LESS_THAN_SIGN\", e3[e3.COMMENT_LESS_THAN_SIGN_BANG = 46] = \"COMMENT_LESS_THAN_SIGN_BANG\", e3[e3.COMMENT_LESS_THAN_SIGN_BANG_DASH = 47] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH\", e3[e3.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH = 48] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\", e3[e3.COMMENT_END_DASH = 49] = \"COMMENT_END_DASH\", e3[e3.COMMENT_END = 50] = \"COMMENT_END\", e3[e3.COMMENT_END_BANG = 51] = \"COMMENT_END_BANG\", e3[e3.DOCTYPE = 52] = \"DOCTYPE\", e3[e3.BEFORE_DOCTYPE_NAME = 53] = \"BEFORE_DOCTYPE_NAME\", e3[e3.DOCTYPE_NAME = 54] = \"DOCTYPE_NAME\", e3[e3.AFTER_DOCTYPE_NAME = 55] = \"AFTER_DOCTYPE_NAME\", e3[e3.AFTER_DOCTYPE_PUBLIC_KEYWORD = 56] = \"AFTER_DOCTYPE_PUBLIC_KEYWORD\", e3[e3.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER = 57] = \"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\", e3[e3.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED = 58] = \"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\", e3[e3.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED = 59] = \"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\", e3[e3.AFTER_DOCTYPE_PUBLIC_IDENTIFIER = 60] = \"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\", e3[e3.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS = 61] = \"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\", e3[e3.AFTER_DOCTYPE_SYSTEM_KEYWORD = 62] = \"AFTER_DOCTYPE_SYSTEM_KEYWORD\", e3[e3.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER = 63] = \"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\", e3[e3.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED = 64] = \"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\", e3[e3.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED = 65] = \"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\", e3[e3.AFTER_DOCTYPE_SYSTEM_IDENTIFIER = 66] = \"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\", e3[e3.BOGUS_DOCTYPE = 67] = \"BOGUS_DOCTYPE\", e3[e3.CDATA_SECTION = 68] = \"CDATA_SECTION\", e3[e3.CDATA_SECTION_BRACKET = 69] = \"CDATA_SECTION_BRACKET\", e3[e3.CDATA_SECTION_END = 70] = \"CDATA_SECTION_END\", e3[e3.CHARACTER_REFERENCE = 71] = \"CHARACTER_REFERENCE\", e3[e3.NAMED_CHARACTER_REFERENCE = 72] = \"NAMED_CHARACTER_REFERENCE\", e3[e3.AMBIGUOUS_AMPERSAND = 73] = \"AMBIGUOUS_AMPERSAND\", e3[e3.NUMERIC_CHARACTER_REFERENCE = 74] = \"NUMERIC_CHARACTER_REFERENCE\", e3[e3.HEXADEMICAL_CHARACTER_REFERENCE_START = 75] = \"HEXADEMICAL_CHARACTER_REFERENCE_START\", e3[e3.HEXADEMICAL_CHARACTER_REFERENCE = 76] = \"HEXADEMICAL_CHARACTER_REFERENCE\", e3[e3.DECIMAL_CHARACTER_REFERENCE = 77] = \"DECIMAL_CHARACTER_REFERENCE\", e3[e3.NUMERIC_CHARACTER_REFERENCE_END = 78] = \"NUMERIC_CHARACTER_REFERENCE_END\";\n  }(P || (P = {}));\n  const k = {\n    DATA: P.DATA,\n    RCDATA: P.RCDATA,\n    RAWTEXT: P.RAWTEXT,\n    SCRIPT_DATA: P.SCRIPT_DATA,\n    PLAINTEXT: P.PLAINTEXT,\n    CDATA_SECTION: P.CDATA_SECTION\n  };\n  function b(e3) {\n    return e3 >= a.DIGIT_0 && e3 <= a.DIGIT_9;\n  }\n  function B(e3) {\n    return e3 >= a.LATIN_CAPITAL_A && e3 <= a.LATIN_CAPITAL_Z;\n  }\n  function H(e3) {\n    return function (e4) {\n      return e4 >= a.LATIN_SMALL_A && e4 <= a.LATIN_SMALL_Z;\n    }(e3) || B(e3);\n  }\n  function F(e3) {\n    return H(e3) || b(e3);\n  }\n  function U(e3) {\n    return e3 >= a.LATIN_CAPITAL_A && e3 <= a.LATIN_CAPITAL_F;\n  }\n  function y(e3) {\n    return e3 >= a.LATIN_SMALL_A && e3 <= a.LATIN_SMALL_F;\n  }\n  function G(e3) {\n    return e3 + 32;\n  }\n  function w(e3) {\n    return e3 === a.SPACE || e3 === a.LINE_FEED || e3 === a.TABULATION || e3 === a.FORM_FEED;\n  }\n  function x(e3) {\n    return w(e3) || e3 === a.SOLIDUS || e3 === a.GREATER_THAN_SIGN;\n  }\n  class Y {\n    constructor(e3, t2) {\n      this.options = e3, this.handler = t2, this.paused = false, this.inLoop = false, this.inForeignNode = false, this.lastStartTagName = \"\", this.active = false, this.state = P.DATA, this.returnState = P.DATA, this.charRefCode = -1, this.consumedAfterSnapshot = -1, this.currentCharacterToken = null, this.currentToken = null, this.currentAttr = {\n        name: \"\",\n        value: \"\"\n      }, this.preprocessor = new _(t2), this.currentLocation = this.getCurrentLocation(-1);\n    }\n    _err(e3) {\n      var t2, s2;\n      null === (s2 = (t2 = this.handler).onParseError) || void 0 === s2 || s2.call(t2, this.preprocessor.getError(e3));\n    }\n    getCurrentLocation(e3) {\n      return this.options.sourceCodeLocationInfo ? {\n        startLine: this.preprocessor.line,\n        startCol: this.preprocessor.col - e3,\n        startOffset: this.preprocessor.offset - e3,\n        endLine: -1,\n        endCol: -1,\n        endOffset: -1\n      } : null;\n    }\n    _runParsingLoop() {\n      if (!this.inLoop) {\n        for (this.inLoop = true; this.active && !this.paused;) {\n          this.consumedAfterSnapshot = 0;\n          const e3 = this._consume();\n          this._ensureHibernation() || this._callState(e3);\n        }\n        this.inLoop = false;\n      }\n    }\n    pause() {\n      this.paused = true;\n    }\n    resume(e3) {\n      if (!this.paused) throw new Error(\"Parser was already resumed\");\n      this.paused = false, this.inLoop || (this._runParsingLoop(), this.paused || null == e3 || e3());\n    }\n    write(e3, t2, s2) {\n      this.active = true, this.preprocessor.write(e3, t2), this._runParsingLoop(), this.paused || null == s2 || s2();\n    }\n    insertHtmlAtCurrentPos(e3) {\n      this.active = true, this.preprocessor.insertHtmlAtCurrentPos(e3), this._runParsingLoop();\n    }\n    _ensureHibernation() {\n      return !!this.preprocessor.endOfChunkHit && (this._unconsume(this.consumedAfterSnapshot), this.active = false, true);\n    }\n    _consume() {\n      return this.consumedAfterSnapshot++, this.preprocessor.advance();\n    }\n    _unconsume(e3) {\n      this.consumedAfterSnapshot -= e3, this.preprocessor.retreat(e3);\n    }\n    _reconsumeInState(e3, t2) {\n      this.state = e3, this._callState(t2);\n    }\n    _advanceBy(e3) {\n      this.consumedAfterSnapshot += e3;\n      for (let t2 = 0; t2 < e3; t2++) this.preprocessor.advance();\n    }\n    _consumeSequenceIfMatch(e3, t2) {\n      return !!this.preprocessor.startsWith(e3, t2) && (this._advanceBy(e3.length - 1), true);\n    }\n    _createStartTagToken() {\n      this.currentToken = {\n        type: h.START_TAG,\n        tagName: \"\",\n        tagID: S.UNKNOWN,\n        selfClosing: false,\n        ackSelfClosing: false,\n        attrs: [],\n        location: this.getCurrentLocation(1)\n      };\n    }\n    _createEndTagToken() {\n      this.currentToken = {\n        type: h.END_TAG,\n        tagName: \"\",\n        tagID: S.UNKNOWN,\n        selfClosing: false,\n        ackSelfClosing: false,\n        attrs: [],\n        location: this.getCurrentLocation(2)\n      };\n    }\n    _createCommentToken(e3) {\n      this.currentToken = {\n        type: h.COMMENT,\n        data: \"\",\n        location: this.getCurrentLocation(e3)\n      };\n    }\n    _createDoctypeToken(e3) {\n      this.currentToken = {\n        type: h.DOCTYPE,\n        name: e3,\n        forceQuirks: false,\n        publicId: null,\n        systemId: null,\n        location: this.currentLocation\n      };\n    }\n    _createCharacterToken(e3, t2) {\n      this.currentCharacterToken = {\n        type: e3,\n        chars: t2,\n        location: this.currentLocation\n      };\n    }\n    _createAttr(e3) {\n      this.currentAttr = {\n        name: e3,\n        value: \"\"\n      }, this.currentLocation = this.getCurrentLocation(0);\n    }\n    _leaveAttrName() {\n      var e3, t2;\n      const s2 = this.currentToken;\n      null === A(s2, this.currentAttr.name) ? (s2.attrs.push(this.currentAttr), s2.location && this.currentLocation && ((null !== (e3 = (t2 = s2.location).attrs) && void 0 !== e3 ? e3 : t2.attrs = /* @__PURE__ */Object.create(null))[this.currentAttr.name] = this.currentLocation, this._leaveAttrValue())) : this._err(T.duplicateAttribute);\n    }\n    _leaveAttrValue() {\n      this.currentLocation && (this.currentLocation.endLine = this.preprocessor.line, this.currentLocation.endCol = this.preprocessor.col, this.currentLocation.endOffset = this.preprocessor.offset);\n    }\n    prepareToken(e3) {\n      this._emitCurrentCharacterToken(e3.location), this.currentToken = null, e3.location && (e3.location.endLine = this.preprocessor.line, e3.location.endCol = this.preprocessor.col + 1, e3.location.endOffset = this.preprocessor.offset + 1), this.currentLocation = this.getCurrentLocation(-1);\n    }\n    emitCurrentTagToken() {\n      const e3 = this.currentToken;\n      this.prepareToken(e3), e3.tagID = O(e3.tagName), e3.type === h.START_TAG ? (this.lastStartTagName = e3.tagName, this.handler.onStartTag(e3)) : (e3.attrs.length > 0 && this._err(T.endTagWithAttributes), e3.selfClosing && this._err(T.endTagWithTrailingSolidus), this.handler.onEndTag(e3)), this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentComment(e3) {\n      this.prepareToken(e3), this.handler.onComment(e3), this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentDoctype(e3) {\n      this.prepareToken(e3), this.handler.onDoctype(e3), this.preprocessor.dropParsedChunk();\n    }\n    _emitCurrentCharacterToken(e3) {\n      if (this.currentCharacterToken) {\n        switch (e3 && this.currentCharacterToken.location && (this.currentCharacterToken.location.endLine = e3.startLine, this.currentCharacterToken.location.endCol = e3.startCol, this.currentCharacterToken.location.endOffset = e3.startOffset), this.currentCharacterToken.type) {\n          case h.CHARACTER:\n            this.handler.onCharacter(this.currentCharacterToken);\n            break;\n          case h.NULL_CHARACTER:\n            this.handler.onNullCharacter(this.currentCharacterToken);\n            break;\n          case h.WHITESPACE_CHARACTER:\n            this.handler.onWhitespaceCharacter(this.currentCharacterToken);\n        }\n        this.currentCharacterToken = null;\n      }\n    }\n    _emitEOFToken() {\n      const e3 = this.getCurrentLocation(0);\n      e3 && (e3.endLine = e3.startLine, e3.endCol = e3.startCol, e3.endOffset = e3.startOffset), this._emitCurrentCharacterToken(e3), this.handler.onEof({\n        type: h.EOF,\n        location: e3\n      }), this.active = false;\n    }\n    _appendCharToCurrentCharacterToken(e3, t2) {\n      if (this.currentCharacterToken) {\n        if (this.currentCharacterToken.type === e3) return void (this.currentCharacterToken.chars += t2);\n        this.currentLocation = this.getCurrentLocation(0), this._emitCurrentCharacterToken(this.currentLocation), this.preprocessor.dropParsedChunk();\n      }\n      this._createCharacterToken(e3, t2);\n    }\n    _emitCodePoint(e3) {\n      const t2 = w(e3) ? h.WHITESPACE_CHARACTER : e3 === a.NULL ? h.NULL_CHARACTER : h.CHARACTER;\n      this._appendCharToCurrentCharacterToken(t2, String.fromCodePoint(e3));\n    }\n    _emitChars(e3) {\n      this._appendCharToCurrentCharacterToken(h.CHARACTER, e3);\n    }\n    _matchNamedCharacterReference(e3) {\n      let t2 = null,\n        s2 = 0,\n        r2 = false;\n      for (let i2 = 0, o2 = m.htmlDecodeTree[0]; i2 >= 0 && (i2 = m.determineBranch(m.htmlDecodeTree, o2, i2 + 1, e3), !(i2 < 0)); e3 = this._consume()) {\n        s2 += 1, o2 = m.htmlDecodeTree[i2];\n        const c2 = o2 & m.BinTrieFlags.VALUE_LENGTH;\n        if (c2) {\n          const o3 = (c2 >> 14) - 1;\n          if (e3 !== a.SEMICOLON && this._isCharacterReferenceInAttribute() && ((n2 = this.preprocessor.peek(1)) === a.EQUALS_SIGN || F(n2)) ? (t2 = [a.AMPERSAND], i2 += o3) : (t2 = 0 === o3 ? [m.htmlDecodeTree[i2] & ~m.BinTrieFlags.VALUE_LENGTH] : 1 === o3 ? [m.htmlDecodeTree[++i2]] : [m.htmlDecodeTree[++i2], m.htmlDecodeTree[++i2]], s2 = 0, r2 = e3 !== a.SEMICOLON), 0 === o3) {\n            this._consume();\n            break;\n          }\n        }\n      }\n      var n2;\n      return this._unconsume(s2), r2 && !this.preprocessor.endOfChunkHit && this._err(T.missingSemicolonAfterCharacterReference), this._unconsume(1), t2;\n    }\n    _isCharacterReferenceInAttribute() {\n      return this.returnState === P.ATTRIBUTE_VALUE_DOUBLE_QUOTED || this.returnState === P.ATTRIBUTE_VALUE_SINGLE_QUOTED || this.returnState === P.ATTRIBUTE_VALUE_UNQUOTED;\n    }\n    _flushCodePointConsumedAsCharacterReference(e3) {\n      this._isCharacterReferenceInAttribute() ? this.currentAttr.value += String.fromCodePoint(e3) : this._emitCodePoint(e3);\n    }\n    _callState(e3) {\n      switch (this.state) {\n        case P.DATA:\n          this._stateData(e3);\n          break;\n        case P.RCDATA:\n          this._stateRcdata(e3);\n          break;\n        case P.RAWTEXT:\n          this._stateRawtext(e3);\n          break;\n        case P.SCRIPT_DATA:\n          this._stateScriptData(e3);\n          break;\n        case P.PLAINTEXT:\n          this._statePlaintext(e3);\n          break;\n        case P.TAG_OPEN:\n          this._stateTagOpen(e3);\n          break;\n        case P.END_TAG_OPEN:\n          this._stateEndTagOpen(e3);\n          break;\n        case P.TAG_NAME:\n          this._stateTagName(e3);\n          break;\n        case P.RCDATA_LESS_THAN_SIGN:\n          this._stateRcdataLessThanSign(e3);\n          break;\n        case P.RCDATA_END_TAG_OPEN:\n          this._stateRcdataEndTagOpen(e3);\n          break;\n        case P.RCDATA_END_TAG_NAME:\n          this._stateRcdataEndTagName(e3);\n          break;\n        case P.RAWTEXT_LESS_THAN_SIGN:\n          this._stateRawtextLessThanSign(e3);\n          break;\n        case P.RAWTEXT_END_TAG_OPEN:\n          this._stateRawtextEndTagOpen(e3);\n          break;\n        case P.RAWTEXT_END_TAG_NAME:\n          this._stateRawtextEndTagName(e3);\n          break;\n        case P.SCRIPT_DATA_LESS_THAN_SIGN:\n          this._stateScriptDataLessThanSign(e3);\n          break;\n        case P.SCRIPT_DATA_END_TAG_OPEN:\n          this._stateScriptDataEndTagOpen(e3);\n          break;\n        case P.SCRIPT_DATA_END_TAG_NAME:\n          this._stateScriptDataEndTagName(e3);\n          break;\n        case P.SCRIPT_DATA_ESCAPE_START:\n          this._stateScriptDataEscapeStart(e3);\n          break;\n        case P.SCRIPT_DATA_ESCAPE_START_DASH:\n          this._stateScriptDataEscapeStartDash(e3);\n          break;\n        case P.SCRIPT_DATA_ESCAPED:\n          this._stateScriptDataEscaped(e3);\n          break;\n        case P.SCRIPT_DATA_ESCAPED_DASH:\n          this._stateScriptDataEscapedDash(e3);\n          break;\n        case P.SCRIPT_DATA_ESCAPED_DASH_DASH:\n          this._stateScriptDataEscapedDashDash(e3);\n          break;\n        case P.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN:\n          this._stateScriptDataEscapedLessThanSign(e3);\n          break;\n        case P.SCRIPT_DATA_ESCAPED_END_TAG_OPEN:\n          this._stateScriptDataEscapedEndTagOpen(e3);\n          break;\n        case P.SCRIPT_DATA_ESCAPED_END_TAG_NAME:\n          this._stateScriptDataEscapedEndTagName(e3);\n          break;\n        case P.SCRIPT_DATA_DOUBLE_ESCAPE_START:\n          this._stateScriptDataDoubleEscapeStart(e3);\n          break;\n        case P.SCRIPT_DATA_DOUBLE_ESCAPED:\n          this._stateScriptDataDoubleEscaped(e3);\n          break;\n        case P.SCRIPT_DATA_DOUBLE_ESCAPED_DASH:\n          this._stateScriptDataDoubleEscapedDash(e3);\n          break;\n        case P.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH:\n          this._stateScriptDataDoubleEscapedDashDash(e3);\n          break;\n        case P.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN:\n          this._stateScriptDataDoubleEscapedLessThanSign(e3);\n          break;\n        case P.SCRIPT_DATA_DOUBLE_ESCAPE_END:\n          this._stateScriptDataDoubleEscapeEnd(e3);\n          break;\n        case P.BEFORE_ATTRIBUTE_NAME:\n          this._stateBeforeAttributeName(e3);\n          break;\n        case P.ATTRIBUTE_NAME:\n          this._stateAttributeName(e3);\n          break;\n        case P.AFTER_ATTRIBUTE_NAME:\n          this._stateAfterAttributeName(e3);\n          break;\n        case P.BEFORE_ATTRIBUTE_VALUE:\n          this._stateBeforeAttributeValue(e3);\n          break;\n        case P.ATTRIBUTE_VALUE_DOUBLE_QUOTED:\n          this._stateAttributeValueDoubleQuoted(e3);\n          break;\n        case P.ATTRIBUTE_VALUE_SINGLE_QUOTED:\n          this._stateAttributeValueSingleQuoted(e3);\n          break;\n        case P.ATTRIBUTE_VALUE_UNQUOTED:\n          this._stateAttributeValueUnquoted(e3);\n          break;\n        case P.AFTER_ATTRIBUTE_VALUE_QUOTED:\n          this._stateAfterAttributeValueQuoted(e3);\n          break;\n        case P.SELF_CLOSING_START_TAG:\n          this._stateSelfClosingStartTag(e3);\n          break;\n        case P.BOGUS_COMMENT:\n          this._stateBogusComment(e3);\n          break;\n        case P.MARKUP_DECLARATION_OPEN:\n          this._stateMarkupDeclarationOpen(e3);\n          break;\n        case P.COMMENT_START:\n          this._stateCommentStart(e3);\n          break;\n        case P.COMMENT_START_DASH:\n          this._stateCommentStartDash(e3);\n          break;\n        case P.COMMENT:\n          this._stateComment(e3);\n          break;\n        case P.COMMENT_LESS_THAN_SIGN:\n          this._stateCommentLessThanSign(e3);\n          break;\n        case P.COMMENT_LESS_THAN_SIGN_BANG:\n          this._stateCommentLessThanSignBang(e3);\n          break;\n        case P.COMMENT_LESS_THAN_SIGN_BANG_DASH:\n          this._stateCommentLessThanSignBangDash(e3);\n          break;\n        case P.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH:\n          this._stateCommentLessThanSignBangDashDash(e3);\n          break;\n        case P.COMMENT_END_DASH:\n          this._stateCommentEndDash(e3);\n          break;\n        case P.COMMENT_END:\n          this._stateCommentEnd(e3);\n          break;\n        case P.COMMENT_END_BANG:\n          this._stateCommentEndBang(e3);\n          break;\n        case P.DOCTYPE:\n          this._stateDoctype(e3);\n          break;\n        case P.BEFORE_DOCTYPE_NAME:\n          this._stateBeforeDoctypeName(e3);\n          break;\n        case P.DOCTYPE_NAME:\n          this._stateDoctypeName(e3);\n          break;\n        case P.AFTER_DOCTYPE_NAME:\n          this._stateAfterDoctypeName(e3);\n          break;\n        case P.AFTER_DOCTYPE_PUBLIC_KEYWORD:\n          this._stateAfterDoctypePublicKeyword(e3);\n          break;\n        case P.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER:\n          this._stateBeforeDoctypePublicIdentifier(e3);\n          break;\n        case P.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED:\n          this._stateDoctypePublicIdentifierDoubleQuoted(e3);\n          break;\n        case P.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED:\n          this._stateDoctypePublicIdentifierSingleQuoted(e3);\n          break;\n        case P.AFTER_DOCTYPE_PUBLIC_IDENTIFIER:\n          this._stateAfterDoctypePublicIdentifier(e3);\n          break;\n        case P.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS:\n          this._stateBetweenDoctypePublicAndSystemIdentifiers(e3);\n          break;\n        case P.AFTER_DOCTYPE_SYSTEM_KEYWORD:\n          this._stateAfterDoctypeSystemKeyword(e3);\n          break;\n        case P.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER:\n          this._stateBeforeDoctypeSystemIdentifier(e3);\n          break;\n        case P.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED:\n          this._stateDoctypeSystemIdentifierDoubleQuoted(e3);\n          break;\n        case P.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED:\n          this._stateDoctypeSystemIdentifierSingleQuoted(e3);\n          break;\n        case P.AFTER_DOCTYPE_SYSTEM_IDENTIFIER:\n          this._stateAfterDoctypeSystemIdentifier(e3);\n          break;\n        case P.BOGUS_DOCTYPE:\n          this._stateBogusDoctype(e3);\n          break;\n        case P.CDATA_SECTION:\n          this._stateCdataSection(e3);\n          break;\n        case P.CDATA_SECTION_BRACKET:\n          this._stateCdataSectionBracket(e3);\n          break;\n        case P.CDATA_SECTION_END:\n          this._stateCdataSectionEnd(e3);\n          break;\n        case P.CHARACTER_REFERENCE:\n          this._stateCharacterReference(e3);\n          break;\n        case P.NAMED_CHARACTER_REFERENCE:\n          this._stateNamedCharacterReference(e3);\n          break;\n        case P.AMBIGUOUS_AMPERSAND:\n          this._stateAmbiguousAmpersand(e3);\n          break;\n        case P.NUMERIC_CHARACTER_REFERENCE:\n          this._stateNumericCharacterReference(e3);\n          break;\n        case P.HEXADEMICAL_CHARACTER_REFERENCE_START:\n          this._stateHexademicalCharacterReferenceStart(e3);\n          break;\n        case P.HEXADEMICAL_CHARACTER_REFERENCE:\n          this._stateHexademicalCharacterReference(e3);\n          break;\n        case P.DECIMAL_CHARACTER_REFERENCE:\n          this._stateDecimalCharacterReference(e3);\n          break;\n        case P.NUMERIC_CHARACTER_REFERENCE_END:\n          this._stateNumericCharacterReferenceEnd(e3);\n          break;\n        default:\n          throw new Error(\"Unknown state\");\n      }\n    }\n    _stateData(e3) {\n      switch (e3) {\n        case a.LESS_THAN_SIGN:\n          this.state = P.TAG_OPEN;\n          break;\n        case a.AMPERSAND:\n          this.returnState = P.DATA, this.state = P.CHARACTER_REFERENCE;\n          break;\n        case a.NULL:\n          this._err(T.unexpectedNullCharacter), this._emitCodePoint(e3);\n          break;\n        case a.EOF:\n          this._emitEOFToken();\n          break;\n        default:\n          this._emitCodePoint(e3);\n      }\n    }\n    _stateRcdata(e3) {\n      switch (e3) {\n        case a.AMPERSAND:\n          this.returnState = P.RCDATA, this.state = P.CHARACTER_REFERENCE;\n          break;\n        case a.LESS_THAN_SIGN:\n          this.state = P.RCDATA_LESS_THAN_SIGN;\n          break;\n        case a.NULL:\n          this._err(T.unexpectedNullCharacter), this._emitChars(s);\n          break;\n        case a.EOF:\n          this._emitEOFToken();\n          break;\n        default:\n          this._emitCodePoint(e3);\n      }\n    }\n    _stateRawtext(e3) {\n      switch (e3) {\n        case a.LESS_THAN_SIGN:\n          this.state = P.RAWTEXT_LESS_THAN_SIGN;\n          break;\n        case a.NULL:\n          this._err(T.unexpectedNullCharacter), this._emitChars(s);\n          break;\n        case a.EOF:\n          this._emitEOFToken();\n          break;\n        default:\n          this._emitCodePoint(e3);\n      }\n    }\n    _stateScriptData(e3) {\n      switch (e3) {\n        case a.LESS_THAN_SIGN:\n          this.state = P.SCRIPT_DATA_LESS_THAN_SIGN;\n          break;\n        case a.NULL:\n          this._err(T.unexpectedNullCharacter), this._emitChars(s);\n          break;\n        case a.EOF:\n          this._emitEOFToken();\n          break;\n        default:\n          this._emitCodePoint(e3);\n      }\n    }\n    _statePlaintext(e3) {\n      switch (e3) {\n        case a.NULL:\n          this._err(T.unexpectedNullCharacter), this._emitChars(s);\n          break;\n        case a.EOF:\n          this._emitEOFToken();\n          break;\n        default:\n          this._emitCodePoint(e3);\n      }\n    }\n    _stateTagOpen(e3) {\n      if (H(e3)) this._createStartTagToken(), this.state = P.TAG_NAME, this._stateTagName(e3);else switch (e3) {\n        case a.EXCLAMATION_MARK:\n          this.state = P.MARKUP_DECLARATION_OPEN;\n          break;\n        case a.SOLIDUS:\n          this.state = P.END_TAG_OPEN;\n          break;\n        case a.QUESTION_MARK:\n          this._err(T.unexpectedQuestionMarkInsteadOfTagName), this._createCommentToken(1), this.state = P.BOGUS_COMMENT, this._stateBogusComment(e3);\n          break;\n        case a.EOF:\n          this._err(T.eofBeforeTagName), this._emitChars(\"<\"), this._emitEOFToken();\n          break;\n        default:\n          this._err(T.invalidFirstCharacterOfTagName), this._emitChars(\"<\"), this.state = P.DATA, this._stateData(e3);\n      }\n    }\n    _stateEndTagOpen(e3) {\n      if (H(e3)) this._createEndTagToken(), this.state = P.TAG_NAME, this._stateTagName(e3);else switch (e3) {\n        case a.GREATER_THAN_SIGN:\n          this._err(T.missingEndTagName), this.state = P.DATA;\n          break;\n        case a.EOF:\n          this._err(T.eofBeforeTagName), this._emitChars(\"</\"), this._emitEOFToken();\n          break;\n        default:\n          this._err(T.invalidFirstCharacterOfTagName), this._createCommentToken(2), this.state = P.BOGUS_COMMENT, this._stateBogusComment(e3);\n      }\n    }\n    _stateTagName(e3) {\n      const t2 = this.currentToken;\n      switch (e3) {\n        case a.SPACE:\n        case a.LINE_FEED:\n        case a.TABULATION:\n        case a.FORM_FEED:\n          this.state = P.BEFORE_ATTRIBUTE_NAME;\n          break;\n        case a.SOLIDUS:\n          this.state = P.SELF_CLOSING_START_TAG;\n          break;\n        case a.GREATER_THAN_SIGN:\n          this.state = P.DATA, this.emitCurrentTagToken();\n          break;\n        case a.NULL:\n          this._err(T.unexpectedNullCharacter), t2.tagName += s;\n          break;\n        case a.EOF:\n          this._err(T.eofInTag), this._emitEOFToken();\n          break;\n        default:\n          t2.tagName += String.fromCodePoint(B(e3) ? G(e3) : e3);\n      }\n    }\n    _stateRcdataLessThanSign(e3) {\n      e3 === a.SOLIDUS ? this.state = P.RCDATA_END_TAG_OPEN : (this._emitChars(\"<\"), this.state = P.RCDATA, this._stateRcdata(e3));\n    }\n    _stateRcdataEndTagOpen(e3) {\n      H(e3) ? (this.state = P.RCDATA_END_TAG_NAME, this._stateRcdataEndTagName(e3)) : (this._emitChars(\"</\"), this.state = P.RCDATA, this._stateRcdata(e3));\n    }\n    handleSpecialEndTag(e3) {\n      if (!this.preprocessor.startsWith(this.lastStartTagName, false)) return !this._ensureHibernation();\n      switch (this._createEndTagToken(), this.currentToken.tagName = this.lastStartTagName, this.preprocessor.peek(this.lastStartTagName.length)) {\n        case a.SPACE:\n        case a.LINE_FEED:\n        case a.TABULATION:\n        case a.FORM_FEED:\n          return this._advanceBy(this.lastStartTagName.length), this.state = P.BEFORE_ATTRIBUTE_NAME, false;\n        case a.SOLIDUS:\n          return this._advanceBy(this.lastStartTagName.length), this.state = P.SELF_CLOSING_START_TAG, false;\n        case a.GREATER_THAN_SIGN:\n          return this._advanceBy(this.lastStartTagName.length), this.emitCurrentTagToken(), this.state = P.DATA, false;\n        default:\n          return !this._ensureHibernation();\n      }\n    }\n    _stateRcdataEndTagName(e3) {\n      this.handleSpecialEndTag(e3) && (this._emitChars(\"</\"), this.state = P.RCDATA, this._stateRcdata(e3));\n    }\n    _stateRawtextLessThanSign(e3) {\n      e3 === a.SOLIDUS ? this.state = P.RAWTEXT_END_TAG_OPEN : (this._emitChars(\"<\"), this.state = P.RAWTEXT, this._stateRawtext(e3));\n    }\n    _stateRawtextEndTagOpen(e3) {\n      H(e3) ? (this.state = P.RAWTEXT_END_TAG_NAME, this._stateRawtextEndTagName(e3)) : (this._emitChars(\"</\"), this.state = P.RAWTEXT, this._stateRawtext(e3));\n    }\n    _stateRawtextEndTagName(e3) {\n      this.handleSpecialEndTag(e3) && (this._emitChars(\"</\"), this.state = P.RAWTEXT, this._stateRawtext(e3));\n    }\n    _stateScriptDataLessThanSign(e3) {\n      switch (e3) {\n        case a.SOLIDUS:\n          this.state = P.SCRIPT_DATA_END_TAG_OPEN;\n          break;\n        case a.EXCLAMATION_MARK:\n          this.state = P.SCRIPT_DATA_ESCAPE_START, this._emitChars(\"<!\");\n          break;\n        default:\n          this._emitChars(\"<\"), this.state = P.SCRIPT_DATA, this._stateScriptData(e3);\n      }\n    }\n    _stateScriptDataEndTagOpen(e3) {\n      H(e3) ? (this.state = P.SCRIPT_DATA_END_TAG_NAME, this._stateScriptDataEndTagName(e3)) : (this._emitChars(\"</\"), this.state = P.SCRIPT_DATA, this._stateScriptData(e3));\n    }\n    _stateScriptDataEndTagName(e3) {\n      this.handleSpecialEndTag(e3) && (this._emitChars(\"</\"), this.state = P.SCRIPT_DATA, this._stateScriptData(e3));\n    }\n    _stateScriptDataEscapeStart(e3) {\n      e3 === a.HYPHEN_MINUS ? (this.state = P.SCRIPT_DATA_ESCAPE_START_DASH, this._emitChars(\"-\")) : (this.state = P.SCRIPT_DATA, this._stateScriptData(e3));\n    }\n    _stateScriptDataEscapeStartDash(e3) {\n      e3 === a.HYPHEN_MINUS ? (this.state = P.SCRIPT_DATA_ESCAPED_DASH_DASH, this._emitChars(\"-\")) : (this.state = P.SCRIPT_DATA, this._stateScriptData(e3));\n    }\n    _stateScriptDataEscaped(e3) {\n      switch (e3) {\n        case a.HYPHEN_MINUS:\n          this.state = P.SCRIPT_DATA_ESCAPED_DASH, this._emitChars(\"-\");\n          break;\n        case a.LESS_THAN_SIGN:\n          this.state = P.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n          break;\n        case a.NULL:\n          this._err(T.unexpectedNullCharacter), this._emitChars(s);\n          break;\n        case a.EOF:\n          this._err(T.eofInScriptHtmlCommentLikeText), this._emitEOFToken();\n          break;\n        default:\n          this._emitCodePoint(e3);\n      }\n    }\n    _stateScriptDataEscapedDash(e3) {\n      switch (e3) {\n        case a.HYPHEN_MINUS:\n          this.state = P.SCRIPT_DATA_ESCAPED_DASH_DASH, this._emitChars(\"-\");\n          break;\n        case a.LESS_THAN_SIGN:\n          this.state = P.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n          break;\n        case a.NULL:\n          this._err(T.unexpectedNullCharacter), this.state = P.SCRIPT_DATA_ESCAPED, this._emitChars(s);\n          break;\n        case a.EOF:\n          this._err(T.eofInScriptHtmlCommentLikeText), this._emitEOFToken();\n          break;\n        default:\n          this.state = P.SCRIPT_DATA_ESCAPED, this._emitCodePoint(e3);\n      }\n    }\n    _stateScriptDataEscapedDashDash(e3) {\n      switch (e3) {\n        case a.HYPHEN_MINUS:\n          this._emitChars(\"-\");\n          break;\n        case a.LESS_THAN_SIGN:\n          this.state = P.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n          break;\n        case a.GREATER_THAN_SIGN:\n          this.state = P.SCRIPT_DATA, this._emitChars(\">\");\n          break;\n        case a.NULL:\n          this._err(T.unexpectedNullCharacter), this.state = P.SCRIPT_DATA_ESCAPED, this._emitChars(s);\n          break;\n        case a.EOF:\n          this._err(T.eofInScriptHtmlCommentLikeText), this._emitEOFToken();\n          break;\n        default:\n          this.state = P.SCRIPT_DATA_ESCAPED, this._emitCodePoint(e3);\n      }\n    }\n    _stateScriptDataEscapedLessThanSign(e3) {\n      e3 === a.SOLIDUS ? this.state = P.SCRIPT_DATA_ESCAPED_END_TAG_OPEN : H(e3) ? (this._emitChars(\"<\"), this.state = P.SCRIPT_DATA_DOUBLE_ESCAPE_START, this._stateScriptDataDoubleEscapeStart(e3)) : (this._emitChars(\"<\"), this.state = P.SCRIPT_DATA_ESCAPED, this._stateScriptDataEscaped(e3));\n    }\n    _stateScriptDataEscapedEndTagOpen(e3) {\n      H(e3) ? (this.state = P.SCRIPT_DATA_ESCAPED_END_TAG_NAME, this._stateScriptDataEscapedEndTagName(e3)) : (this._emitChars(\"</\"), this.state = P.SCRIPT_DATA_ESCAPED, this._stateScriptDataEscaped(e3));\n    }\n    _stateScriptDataEscapedEndTagName(e3) {\n      this.handleSpecialEndTag(e3) && (this._emitChars(\"</\"), this.state = P.SCRIPT_DATA_ESCAPED, this._stateScriptDataEscaped(e3));\n    }\n    _stateScriptDataDoubleEscapeStart(e3) {\n      if (this.preprocessor.startsWith(i, false) && x(this.preprocessor.peek(6))) {\n        this._emitCodePoint(e3);\n        for (let e4 = 0; e4 < 6; e4++) this._emitCodePoint(this._consume());\n        this.state = P.SCRIPT_DATA_DOUBLE_ESCAPED;\n      } else this._ensureHibernation() || (this.state = P.SCRIPT_DATA_ESCAPED, this._stateScriptDataEscaped(e3));\n    }\n    _stateScriptDataDoubleEscaped(e3) {\n      switch (e3) {\n        case a.HYPHEN_MINUS:\n          this.state = P.SCRIPT_DATA_DOUBLE_ESCAPED_DASH, this._emitChars(\"-\");\n          break;\n        case a.LESS_THAN_SIGN:\n          this.state = P.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN, this._emitChars(\"<\");\n          break;\n        case a.NULL:\n          this._err(T.unexpectedNullCharacter), this._emitChars(s);\n          break;\n        case a.EOF:\n          this._err(T.eofInScriptHtmlCommentLikeText), this._emitEOFToken();\n          break;\n        default:\n          this._emitCodePoint(e3);\n      }\n    }\n    _stateScriptDataDoubleEscapedDash(e3) {\n      switch (e3) {\n        case a.HYPHEN_MINUS:\n          this.state = P.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH, this._emitChars(\"-\");\n          break;\n        case a.LESS_THAN_SIGN:\n          this.state = P.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN, this._emitChars(\"<\");\n          break;\n        case a.NULL:\n          this._err(T.unexpectedNullCharacter), this.state = P.SCRIPT_DATA_DOUBLE_ESCAPED, this._emitChars(s);\n          break;\n        case a.EOF:\n          this._err(T.eofInScriptHtmlCommentLikeText), this._emitEOFToken();\n          break;\n        default:\n          this.state = P.SCRIPT_DATA_DOUBLE_ESCAPED, this._emitCodePoint(e3);\n      }\n    }\n    _stateScriptDataDoubleEscapedDashDash(e3) {\n      switch (e3) {\n        case a.HYPHEN_MINUS:\n          this._emitChars(\"-\");\n          break;\n        case a.LESS_THAN_SIGN:\n          this.state = P.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN, this._emitChars(\"<\");\n          break;\n        case a.GREATER_THAN_SIGN:\n          this.state = P.SCRIPT_DATA, this._emitChars(\">\");\n          break;\n        case a.NULL:\n          this._err(T.unexpectedNullCharacter), this.state = P.SCRIPT_DATA_DOUBLE_ESCAPED, this._emitChars(s);\n          break;\n        case a.EOF:\n          this._err(T.eofInScriptHtmlCommentLikeText), this._emitEOFToken();\n          break;\n        default:\n          this.state = P.SCRIPT_DATA_DOUBLE_ESCAPED, this._emitCodePoint(e3);\n      }\n    }\n    _stateScriptDataDoubleEscapedLessThanSign(e3) {\n      e3 === a.SOLIDUS ? (this.state = P.SCRIPT_DATA_DOUBLE_ESCAPE_END, this._emitChars(\"/\")) : (this.state = P.SCRIPT_DATA_DOUBLE_ESCAPED, this._stateScriptDataDoubleEscaped(e3));\n    }\n    _stateScriptDataDoubleEscapeEnd(e3) {\n      if (this.preprocessor.startsWith(i, false) && x(this.preprocessor.peek(6))) {\n        this._emitCodePoint(e3);\n        for (let e4 = 0; e4 < 6; e4++) this._emitCodePoint(this._consume());\n        this.state = P.SCRIPT_DATA_ESCAPED;\n      } else this._ensureHibernation() || (this.state = P.SCRIPT_DATA_DOUBLE_ESCAPED, this._stateScriptDataDoubleEscaped(e3));\n    }\n    _stateBeforeAttributeName(e3) {\n      switch (e3) {\n        case a.SPACE:\n        case a.LINE_FEED:\n        case a.TABULATION:\n        case a.FORM_FEED:\n          break;\n        case a.SOLIDUS:\n        case a.GREATER_THAN_SIGN:\n        case a.EOF:\n          this.state = P.AFTER_ATTRIBUTE_NAME, this._stateAfterAttributeName(e3);\n          break;\n        case a.EQUALS_SIGN:\n          this._err(T.unexpectedEqualsSignBeforeAttributeName), this._createAttr(\"=\"), this.state = P.ATTRIBUTE_NAME;\n          break;\n        default:\n          this._createAttr(\"\"), this.state = P.ATTRIBUTE_NAME, this._stateAttributeName(e3);\n      }\n    }\n    _stateAttributeName(e3) {\n      switch (e3) {\n        case a.SPACE:\n        case a.LINE_FEED:\n        case a.TABULATION:\n        case a.FORM_FEED:\n        case a.SOLIDUS:\n        case a.GREATER_THAN_SIGN:\n        case a.EOF:\n          this._leaveAttrName(), this.state = P.AFTER_ATTRIBUTE_NAME, this._stateAfterAttributeName(e3);\n          break;\n        case a.EQUALS_SIGN:\n          this._leaveAttrName(), this.state = P.BEFORE_ATTRIBUTE_VALUE;\n          break;\n        case a.QUOTATION_MARK:\n        case a.APOSTROPHE:\n        case a.LESS_THAN_SIGN:\n          this._err(T.unexpectedCharacterInAttributeName), this.currentAttr.name += String.fromCodePoint(e3);\n          break;\n        case a.NULL:\n          this._err(T.unexpectedNullCharacter), this.currentAttr.name += s;\n          break;\n        default:\n          this.currentAttr.name += String.fromCodePoint(B(e3) ? G(e3) : e3);\n      }\n    }\n    _stateAfterAttributeName(e3) {\n      switch (e3) {\n        case a.SPACE:\n        case a.LINE_FEED:\n        case a.TABULATION:\n        case a.FORM_FEED:\n          break;\n        case a.SOLIDUS:\n          this.state = P.SELF_CLOSING_START_TAG;\n          break;\n        case a.EQUALS_SIGN:\n          this.state = P.BEFORE_ATTRIBUTE_VALUE;\n          break;\n        case a.GREATER_THAN_SIGN:\n          this.state = P.DATA, this.emitCurrentTagToken();\n          break;\n        case a.EOF:\n          this._err(T.eofInTag), this._emitEOFToken();\n          break;\n        default:\n          this._createAttr(\"\"), this.state = P.ATTRIBUTE_NAME, this._stateAttributeName(e3);\n      }\n    }\n    _stateBeforeAttributeValue(e3) {\n      switch (e3) {\n        case a.SPACE:\n        case a.LINE_FEED:\n        case a.TABULATION:\n        case a.FORM_FEED:\n          break;\n        case a.QUOTATION_MARK:\n          this.state = P.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n          break;\n        case a.APOSTROPHE:\n          this.state = P.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n          break;\n        case a.GREATER_THAN_SIGN:\n          this._err(T.missingAttributeValue), this.state = P.DATA, this.emitCurrentTagToken();\n          break;\n        default:\n          this.state = P.ATTRIBUTE_VALUE_UNQUOTED, this._stateAttributeValueUnquoted(e3);\n      }\n    }\n    _stateAttributeValueDoubleQuoted(e3) {\n      switch (e3) {\n        case a.QUOTATION_MARK:\n          this.state = P.AFTER_ATTRIBUTE_VALUE_QUOTED;\n          break;\n        case a.AMPERSAND:\n          this.returnState = P.ATTRIBUTE_VALUE_DOUBLE_QUOTED, this.state = P.CHARACTER_REFERENCE;\n          break;\n        case a.NULL:\n          this._err(T.unexpectedNullCharacter), this.currentAttr.value += s;\n          break;\n        case a.EOF:\n          this._err(T.eofInTag), this._emitEOFToken();\n          break;\n        default:\n          this.currentAttr.value += String.fromCodePoint(e3);\n      }\n    }\n    _stateAttributeValueSingleQuoted(e3) {\n      switch (e3) {\n        case a.APOSTROPHE:\n          this.state = P.AFTER_ATTRIBUTE_VALUE_QUOTED;\n          break;\n        case a.AMPERSAND:\n          this.returnState = P.ATTRIBUTE_VALUE_SINGLE_QUOTED, this.state = P.CHARACTER_REFERENCE;\n          break;\n        case a.NULL:\n          this._err(T.unexpectedNullCharacter), this.currentAttr.value += s;\n          break;\n        case a.EOF:\n          this._err(T.eofInTag), this._emitEOFToken();\n          break;\n        default:\n          this.currentAttr.value += String.fromCodePoint(e3);\n      }\n    }\n    _stateAttributeValueUnquoted(e3) {\n      switch (e3) {\n        case a.SPACE:\n        case a.LINE_FEED:\n        case a.TABULATION:\n        case a.FORM_FEED:\n          this._leaveAttrValue(), this.state = P.BEFORE_ATTRIBUTE_NAME;\n          break;\n        case a.AMPERSAND:\n          this.returnState = P.ATTRIBUTE_VALUE_UNQUOTED, this.state = P.CHARACTER_REFERENCE;\n          break;\n        case a.GREATER_THAN_SIGN:\n          this._leaveAttrValue(), this.state = P.DATA, this.emitCurrentTagToken();\n          break;\n        case a.NULL:\n          this._err(T.unexpectedNullCharacter), this.currentAttr.value += s;\n          break;\n        case a.QUOTATION_MARK:\n        case a.APOSTROPHE:\n        case a.LESS_THAN_SIGN:\n        case a.EQUALS_SIGN:\n        case a.GRAVE_ACCENT:\n          this._err(T.unexpectedCharacterInUnquotedAttributeValue), this.currentAttr.value += String.fromCodePoint(e3);\n          break;\n        case a.EOF:\n          this._err(T.eofInTag), this._emitEOFToken();\n          break;\n        default:\n          this.currentAttr.value += String.fromCodePoint(e3);\n      }\n    }\n    _stateAfterAttributeValueQuoted(e3) {\n      switch (e3) {\n        case a.SPACE:\n        case a.LINE_FEED:\n        case a.TABULATION:\n        case a.FORM_FEED:\n          this._leaveAttrValue(), this.state = P.BEFORE_ATTRIBUTE_NAME;\n          break;\n        case a.SOLIDUS:\n          this._leaveAttrValue(), this.state = P.SELF_CLOSING_START_TAG;\n          break;\n        case a.GREATER_THAN_SIGN:\n          this._leaveAttrValue(), this.state = P.DATA, this.emitCurrentTagToken();\n          break;\n        case a.EOF:\n          this._err(T.eofInTag), this._emitEOFToken();\n          break;\n        default:\n          this._err(T.missingWhitespaceBetweenAttributes), this.state = P.BEFORE_ATTRIBUTE_NAME, this._stateBeforeAttributeName(e3);\n      }\n    }\n    _stateSelfClosingStartTag(e3) {\n      switch (e3) {\n        case a.GREATER_THAN_SIGN:\n          this.currentToken.selfClosing = true, this.state = P.DATA, this.emitCurrentTagToken();\n          break;\n        case a.EOF:\n          this._err(T.eofInTag), this._emitEOFToken();\n          break;\n        default:\n          this._err(T.unexpectedSolidusInTag), this.state = P.BEFORE_ATTRIBUTE_NAME, this._stateBeforeAttributeName(e3);\n      }\n    }\n    _stateBogusComment(e3) {\n      const t2 = this.currentToken;\n      switch (e3) {\n        case a.GREATER_THAN_SIGN:\n          this.state = P.DATA, this.emitCurrentComment(t2);\n          break;\n        case a.EOF:\n          this.emitCurrentComment(t2), this._emitEOFToken();\n          break;\n        case a.NULL:\n          this._err(T.unexpectedNullCharacter), t2.data += s;\n          break;\n        default:\n          t2.data += String.fromCodePoint(e3);\n      }\n    }\n    _stateMarkupDeclarationOpen(e3) {\n      this._consumeSequenceIfMatch(\"--\", true) ? (this._createCommentToken(3), this.state = P.COMMENT_START) : this._consumeSequenceIfMatch(n, false) ? (this.currentLocation = this.getCurrentLocation(8), this.state = P.DOCTYPE) : this._consumeSequenceIfMatch(r, true) ? this.inForeignNode ? this.state = P.CDATA_SECTION : (this._err(T.cdataInHtmlContent), this._createCommentToken(8), this.currentToken.data = \"[CDATA[\", this.state = P.BOGUS_COMMENT) : this._ensureHibernation() || (this._err(T.incorrectlyOpenedComment), this._createCommentToken(2), this.state = P.BOGUS_COMMENT, this._stateBogusComment(e3));\n    }\n    _stateCommentStart(e3) {\n      switch (e3) {\n        case a.HYPHEN_MINUS:\n          this.state = P.COMMENT_START_DASH;\n          break;\n        case a.GREATER_THAN_SIGN:\n          {\n            this._err(T.abruptClosingOfEmptyComment), this.state = P.DATA;\n            const e4 = this.currentToken;\n            this.emitCurrentComment(e4);\n            break;\n          }\n        default:\n          this.state = P.COMMENT, this._stateComment(e3);\n      }\n    }\n    _stateCommentStartDash(e3) {\n      const t2 = this.currentToken;\n      switch (e3) {\n        case a.HYPHEN_MINUS:\n          this.state = P.COMMENT_END;\n          break;\n        case a.GREATER_THAN_SIGN:\n          this._err(T.abruptClosingOfEmptyComment), this.state = P.DATA, this.emitCurrentComment(t2);\n          break;\n        case a.EOF:\n          this._err(T.eofInComment), this.emitCurrentComment(t2), this._emitEOFToken();\n          break;\n        default:\n          t2.data += \"-\", this.state = P.COMMENT, this._stateComment(e3);\n      }\n    }\n    _stateComment(e3) {\n      const t2 = this.currentToken;\n      switch (e3) {\n        case a.HYPHEN_MINUS:\n          this.state = P.COMMENT_END_DASH;\n          break;\n        case a.LESS_THAN_SIGN:\n          t2.data += \"<\", this.state = P.COMMENT_LESS_THAN_SIGN;\n          break;\n        case a.NULL:\n          this._err(T.unexpectedNullCharacter), t2.data += s;\n          break;\n        case a.EOF:\n          this._err(T.eofInComment), this.emitCurrentComment(t2), this._emitEOFToken();\n          break;\n        default:\n          t2.data += String.fromCodePoint(e3);\n      }\n    }\n    _stateCommentLessThanSign(e3) {\n      const t2 = this.currentToken;\n      switch (e3) {\n        case a.EXCLAMATION_MARK:\n          t2.data += \"!\", this.state = P.COMMENT_LESS_THAN_SIGN_BANG;\n          break;\n        case a.LESS_THAN_SIGN:\n          t2.data += \"<\";\n          break;\n        default:\n          this.state = P.COMMENT, this._stateComment(e3);\n      }\n    }\n    _stateCommentLessThanSignBang(e3) {\n      e3 === a.HYPHEN_MINUS ? this.state = P.COMMENT_LESS_THAN_SIGN_BANG_DASH : (this.state = P.COMMENT, this._stateComment(e3));\n    }\n    _stateCommentLessThanSignBangDash(e3) {\n      e3 === a.HYPHEN_MINUS ? this.state = P.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH : (this.state = P.COMMENT_END_DASH, this._stateCommentEndDash(e3));\n    }\n    _stateCommentLessThanSignBangDashDash(e3) {\n      e3 !== a.GREATER_THAN_SIGN && e3 !== a.EOF && this._err(T.nestedComment), this.state = P.COMMENT_END, this._stateCommentEnd(e3);\n    }\n    _stateCommentEndDash(e3) {\n      const t2 = this.currentToken;\n      switch (e3) {\n        case a.HYPHEN_MINUS:\n          this.state = P.COMMENT_END;\n          break;\n        case a.EOF:\n          this._err(T.eofInComment), this.emitCurrentComment(t2), this._emitEOFToken();\n          break;\n        default:\n          t2.data += \"-\", this.state = P.COMMENT, this._stateComment(e3);\n      }\n    }\n    _stateCommentEnd(e3) {\n      const t2 = this.currentToken;\n      switch (e3) {\n        case a.GREATER_THAN_SIGN:\n          this.state = P.DATA, this.emitCurrentComment(t2);\n          break;\n        case a.EXCLAMATION_MARK:\n          this.state = P.COMMENT_END_BANG;\n          break;\n        case a.HYPHEN_MINUS:\n          t2.data += \"-\";\n          break;\n        case a.EOF:\n          this._err(T.eofInComment), this.emitCurrentComment(t2), this._emitEOFToken();\n          break;\n        default:\n          t2.data += \"--\", this.state = P.COMMENT, this._stateComment(e3);\n      }\n    }\n    _stateCommentEndBang(e3) {\n      const t2 = this.currentToken;\n      switch (e3) {\n        case a.HYPHEN_MINUS:\n          t2.data += \"--!\", this.state = P.COMMENT_END_DASH;\n          break;\n        case a.GREATER_THAN_SIGN:\n          this._err(T.incorrectlyClosedComment), this.state = P.DATA, this.emitCurrentComment(t2);\n          break;\n        case a.EOF:\n          this._err(T.eofInComment), this.emitCurrentComment(t2), this._emitEOFToken();\n          break;\n        default:\n          t2.data += \"--!\", this.state = P.COMMENT, this._stateComment(e3);\n      }\n    }\n    _stateDoctype(e3) {\n      switch (e3) {\n        case a.SPACE:\n        case a.LINE_FEED:\n        case a.TABULATION:\n        case a.FORM_FEED:\n          this.state = P.BEFORE_DOCTYPE_NAME;\n          break;\n        case a.GREATER_THAN_SIGN:\n          this.state = P.BEFORE_DOCTYPE_NAME, this._stateBeforeDoctypeName(e3);\n          break;\n        case a.EOF:\n          {\n            this._err(T.eofInDoctype), this._createDoctypeToken(null);\n            const e4 = this.currentToken;\n            e4.forceQuirks = true, this.emitCurrentDoctype(e4), this._emitEOFToken();\n            break;\n          }\n        default:\n          this._err(T.missingWhitespaceBeforeDoctypeName), this.state = P.BEFORE_DOCTYPE_NAME, this._stateBeforeDoctypeName(e3);\n      }\n    }\n    _stateBeforeDoctypeName(e3) {\n      if (B(e3)) this._createDoctypeToken(String.fromCharCode(G(e3))), this.state = P.DOCTYPE_NAME;else switch (e3) {\n        case a.SPACE:\n        case a.LINE_FEED:\n        case a.TABULATION:\n        case a.FORM_FEED:\n          break;\n        case a.NULL:\n          this._err(T.unexpectedNullCharacter), this._createDoctypeToken(s), this.state = P.DOCTYPE_NAME;\n          break;\n        case a.GREATER_THAN_SIGN:\n          {\n            this._err(T.missingDoctypeName), this._createDoctypeToken(null);\n            const e4 = this.currentToken;\n            e4.forceQuirks = true, this.emitCurrentDoctype(e4), this.state = P.DATA;\n            break;\n          }\n        case a.EOF:\n          {\n            this._err(T.eofInDoctype), this._createDoctypeToken(null);\n            const e4 = this.currentToken;\n            e4.forceQuirks = true, this.emitCurrentDoctype(e4), this._emitEOFToken();\n            break;\n          }\n        default:\n          this._createDoctypeToken(String.fromCodePoint(e3)), this.state = P.DOCTYPE_NAME;\n      }\n    }\n    _stateDoctypeName(e3) {\n      const t2 = this.currentToken;\n      switch (e3) {\n        case a.SPACE:\n        case a.LINE_FEED:\n        case a.TABULATION:\n        case a.FORM_FEED:\n          this.state = P.AFTER_DOCTYPE_NAME;\n          break;\n        case a.GREATER_THAN_SIGN:\n          this.state = P.DATA, this.emitCurrentDoctype(t2);\n          break;\n        case a.NULL:\n          this._err(T.unexpectedNullCharacter), t2.name += s;\n          break;\n        case a.EOF:\n          this._err(T.eofInDoctype), t2.forceQuirks = true, this.emitCurrentDoctype(t2), this._emitEOFToken();\n          break;\n        default:\n          t2.name += String.fromCodePoint(B(e3) ? G(e3) : e3);\n      }\n    }\n    _stateAfterDoctypeName(e3) {\n      const t2 = this.currentToken;\n      switch (e3) {\n        case a.SPACE:\n        case a.LINE_FEED:\n        case a.TABULATION:\n        case a.FORM_FEED:\n          break;\n        case a.GREATER_THAN_SIGN:\n          this.state = P.DATA, this.emitCurrentDoctype(t2);\n          break;\n        case a.EOF:\n          this._err(T.eofInDoctype), t2.forceQuirks = true, this.emitCurrentDoctype(t2), this._emitEOFToken();\n          break;\n        default:\n          this._consumeSequenceIfMatch(\"public\", false) ? this.state = P.AFTER_DOCTYPE_PUBLIC_KEYWORD : this._consumeSequenceIfMatch(\"system\", false) ? this.state = P.AFTER_DOCTYPE_SYSTEM_KEYWORD : this._ensureHibernation() || (this._err(T.invalidCharacterSequenceAfterDoctypeName), t2.forceQuirks = true, this.state = P.BOGUS_DOCTYPE, this._stateBogusDoctype(e3));\n      }\n    }\n    _stateAfterDoctypePublicKeyword(e3) {\n      const t2 = this.currentToken;\n      switch (e3) {\n        case a.SPACE:\n        case a.LINE_FEED:\n        case a.TABULATION:\n        case a.FORM_FEED:\n          this.state = P.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;\n          break;\n        case a.QUOTATION_MARK:\n          this._err(T.missingWhitespaceAfterDoctypePublicKeyword), t2.publicId = \"\", this.state = P.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n          break;\n        case a.APOSTROPHE:\n          this._err(T.missingWhitespaceAfterDoctypePublicKeyword), t2.publicId = \"\", this.state = P.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n          break;\n        case a.GREATER_THAN_SIGN:\n          this._err(T.missingDoctypePublicIdentifier), t2.forceQuirks = true, this.state = P.DATA, this.emitCurrentDoctype(t2);\n          break;\n        case a.EOF:\n          this._err(T.eofInDoctype), t2.forceQuirks = true, this.emitCurrentDoctype(t2), this._emitEOFToken();\n          break;\n        default:\n          this._err(T.missingQuoteBeforeDoctypePublicIdentifier), t2.forceQuirks = true, this.state = P.BOGUS_DOCTYPE, this._stateBogusDoctype(e3);\n      }\n    }\n    _stateBeforeDoctypePublicIdentifier(e3) {\n      const t2 = this.currentToken;\n      switch (e3) {\n        case a.SPACE:\n        case a.LINE_FEED:\n        case a.TABULATION:\n        case a.FORM_FEED:\n          break;\n        case a.QUOTATION_MARK:\n          t2.publicId = \"\", this.state = P.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n          break;\n        case a.APOSTROPHE:\n          t2.publicId = \"\", this.state = P.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n          break;\n        case a.GREATER_THAN_SIGN:\n          this._err(T.missingDoctypePublicIdentifier), t2.forceQuirks = true, this.state = P.DATA, this.emitCurrentDoctype(t2);\n          break;\n        case a.EOF:\n          this._err(T.eofInDoctype), t2.forceQuirks = true, this.emitCurrentDoctype(t2), this._emitEOFToken();\n          break;\n        default:\n          this._err(T.missingQuoteBeforeDoctypePublicIdentifier), t2.forceQuirks = true, this.state = P.BOGUS_DOCTYPE, this._stateBogusDoctype(e3);\n      }\n    }\n    _stateDoctypePublicIdentifierDoubleQuoted(e3) {\n      const t2 = this.currentToken;\n      switch (e3) {\n        case a.QUOTATION_MARK:\n          this.state = P.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n          break;\n        case a.NULL:\n          this._err(T.unexpectedNullCharacter), t2.publicId += s;\n          break;\n        case a.GREATER_THAN_SIGN:\n          this._err(T.abruptDoctypePublicIdentifier), t2.forceQuirks = true, this.emitCurrentDoctype(t2), this.state = P.DATA;\n          break;\n        case a.EOF:\n          this._err(T.eofInDoctype), t2.forceQuirks = true, this.emitCurrentDoctype(t2), this._emitEOFToken();\n          break;\n        default:\n          t2.publicId += String.fromCodePoint(e3);\n      }\n    }\n    _stateDoctypePublicIdentifierSingleQuoted(e3) {\n      const t2 = this.currentToken;\n      switch (e3) {\n        case a.APOSTROPHE:\n          this.state = P.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n          break;\n        case a.NULL:\n          this._err(T.unexpectedNullCharacter), t2.publicId += s;\n          break;\n        case a.GREATER_THAN_SIGN:\n          this._err(T.abruptDoctypePublicIdentifier), t2.forceQuirks = true, this.emitCurrentDoctype(t2), this.state = P.DATA;\n          break;\n        case a.EOF:\n          this._err(T.eofInDoctype), t2.forceQuirks = true, this.emitCurrentDoctype(t2), this._emitEOFToken();\n          break;\n        default:\n          t2.publicId += String.fromCodePoint(e3);\n      }\n    }\n    _stateAfterDoctypePublicIdentifier(e3) {\n      const t2 = this.currentToken;\n      switch (e3) {\n        case a.SPACE:\n        case a.LINE_FEED:\n        case a.TABULATION:\n        case a.FORM_FEED:\n          this.state = P.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;\n          break;\n        case a.GREATER_THAN_SIGN:\n          this.state = P.DATA, this.emitCurrentDoctype(t2);\n          break;\n        case a.QUOTATION_MARK:\n          this._err(T.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers), t2.systemId = \"\", this.state = P.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n          break;\n        case a.APOSTROPHE:\n          this._err(T.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers), t2.systemId = \"\", this.state = P.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n          break;\n        case a.EOF:\n          this._err(T.eofInDoctype), t2.forceQuirks = true, this.emitCurrentDoctype(t2), this._emitEOFToken();\n          break;\n        default:\n          this._err(T.missingQuoteBeforeDoctypeSystemIdentifier), t2.forceQuirks = true, this.state = P.BOGUS_DOCTYPE, this._stateBogusDoctype(e3);\n      }\n    }\n    _stateBetweenDoctypePublicAndSystemIdentifiers(e3) {\n      const t2 = this.currentToken;\n      switch (e3) {\n        case a.SPACE:\n        case a.LINE_FEED:\n        case a.TABULATION:\n        case a.FORM_FEED:\n          break;\n        case a.GREATER_THAN_SIGN:\n          this.emitCurrentDoctype(t2), this.state = P.DATA;\n          break;\n        case a.QUOTATION_MARK:\n          t2.systemId = \"\", this.state = P.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n          break;\n        case a.APOSTROPHE:\n          t2.systemId = \"\", this.state = P.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n          break;\n        case a.EOF:\n          this._err(T.eofInDoctype), t2.forceQuirks = true, this.emitCurrentDoctype(t2), this._emitEOFToken();\n          break;\n        default:\n          this._err(T.missingQuoteBeforeDoctypeSystemIdentifier), t2.forceQuirks = true, this.state = P.BOGUS_DOCTYPE, this._stateBogusDoctype(e3);\n      }\n    }\n    _stateAfterDoctypeSystemKeyword(e3) {\n      const t2 = this.currentToken;\n      switch (e3) {\n        case a.SPACE:\n        case a.LINE_FEED:\n        case a.TABULATION:\n        case a.FORM_FEED:\n          this.state = P.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;\n          break;\n        case a.QUOTATION_MARK:\n          this._err(T.missingWhitespaceAfterDoctypeSystemKeyword), t2.systemId = \"\", this.state = P.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n          break;\n        case a.APOSTROPHE:\n          this._err(T.missingWhitespaceAfterDoctypeSystemKeyword), t2.systemId = \"\", this.state = P.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n          break;\n        case a.GREATER_THAN_SIGN:\n          this._err(T.missingDoctypeSystemIdentifier), t2.forceQuirks = true, this.state = P.DATA, this.emitCurrentDoctype(t2);\n          break;\n        case a.EOF:\n          this._err(T.eofInDoctype), t2.forceQuirks = true, this.emitCurrentDoctype(t2), this._emitEOFToken();\n          break;\n        default:\n          this._err(T.missingQuoteBeforeDoctypeSystemIdentifier), t2.forceQuirks = true, this.state = P.BOGUS_DOCTYPE, this._stateBogusDoctype(e3);\n      }\n    }\n    _stateBeforeDoctypeSystemIdentifier(e3) {\n      const t2 = this.currentToken;\n      switch (e3) {\n        case a.SPACE:\n        case a.LINE_FEED:\n        case a.TABULATION:\n        case a.FORM_FEED:\n          break;\n        case a.QUOTATION_MARK:\n          t2.systemId = \"\", this.state = P.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n          break;\n        case a.APOSTROPHE:\n          t2.systemId = \"\", this.state = P.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n          break;\n        case a.GREATER_THAN_SIGN:\n          this._err(T.missingDoctypeSystemIdentifier), t2.forceQuirks = true, this.state = P.DATA, this.emitCurrentDoctype(t2);\n          break;\n        case a.EOF:\n          this._err(T.eofInDoctype), t2.forceQuirks = true, this.emitCurrentDoctype(t2), this._emitEOFToken();\n          break;\n        default:\n          this._err(T.missingQuoteBeforeDoctypeSystemIdentifier), t2.forceQuirks = true, this.state = P.BOGUS_DOCTYPE, this._stateBogusDoctype(e3);\n      }\n    }\n    _stateDoctypeSystemIdentifierDoubleQuoted(e3) {\n      const t2 = this.currentToken;\n      switch (e3) {\n        case a.QUOTATION_MARK:\n          this.state = P.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n          break;\n        case a.NULL:\n          this._err(T.unexpectedNullCharacter), t2.systemId += s;\n          break;\n        case a.GREATER_THAN_SIGN:\n          this._err(T.abruptDoctypeSystemIdentifier), t2.forceQuirks = true, this.emitCurrentDoctype(t2), this.state = P.DATA;\n          break;\n        case a.EOF:\n          this._err(T.eofInDoctype), t2.forceQuirks = true, this.emitCurrentDoctype(t2), this._emitEOFToken();\n          break;\n        default:\n          t2.systemId += String.fromCodePoint(e3);\n      }\n    }\n    _stateDoctypeSystemIdentifierSingleQuoted(e3) {\n      const t2 = this.currentToken;\n      switch (e3) {\n        case a.APOSTROPHE:\n          this.state = P.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n          break;\n        case a.NULL:\n          this._err(T.unexpectedNullCharacter), t2.systemId += s;\n          break;\n        case a.GREATER_THAN_SIGN:\n          this._err(T.abruptDoctypeSystemIdentifier), t2.forceQuirks = true, this.emitCurrentDoctype(t2), this.state = P.DATA;\n          break;\n        case a.EOF:\n          this._err(T.eofInDoctype), t2.forceQuirks = true, this.emitCurrentDoctype(t2), this._emitEOFToken();\n          break;\n        default:\n          t2.systemId += String.fromCodePoint(e3);\n      }\n    }\n    _stateAfterDoctypeSystemIdentifier(e3) {\n      const t2 = this.currentToken;\n      switch (e3) {\n        case a.SPACE:\n        case a.LINE_FEED:\n        case a.TABULATION:\n        case a.FORM_FEED:\n          break;\n        case a.GREATER_THAN_SIGN:\n          this.emitCurrentDoctype(t2), this.state = P.DATA;\n          break;\n        case a.EOF:\n          this._err(T.eofInDoctype), t2.forceQuirks = true, this.emitCurrentDoctype(t2), this._emitEOFToken();\n          break;\n        default:\n          this._err(T.unexpectedCharacterAfterDoctypeSystemIdentifier), this.state = P.BOGUS_DOCTYPE, this._stateBogusDoctype(e3);\n      }\n    }\n    _stateBogusDoctype(e3) {\n      const t2 = this.currentToken;\n      switch (e3) {\n        case a.GREATER_THAN_SIGN:\n          this.emitCurrentDoctype(t2), this.state = P.DATA;\n          break;\n        case a.NULL:\n          this._err(T.unexpectedNullCharacter);\n          break;\n        case a.EOF:\n          this.emitCurrentDoctype(t2), this._emitEOFToken();\n      }\n    }\n    _stateCdataSection(e3) {\n      switch (e3) {\n        case a.RIGHT_SQUARE_BRACKET:\n          this.state = P.CDATA_SECTION_BRACKET;\n          break;\n        case a.EOF:\n          this._err(T.eofInCdata), this._emitEOFToken();\n          break;\n        default:\n          this._emitCodePoint(e3);\n      }\n    }\n    _stateCdataSectionBracket(e3) {\n      e3 === a.RIGHT_SQUARE_BRACKET ? this.state = P.CDATA_SECTION_END : (this._emitChars(\"]\"), this.state = P.CDATA_SECTION, this._stateCdataSection(e3));\n    }\n    _stateCdataSectionEnd(e3) {\n      switch (e3) {\n        case a.GREATER_THAN_SIGN:\n          this.state = P.DATA;\n          break;\n        case a.RIGHT_SQUARE_BRACKET:\n          this._emitChars(\"]\");\n          break;\n        default:\n          this._emitChars(\"]]\"), this.state = P.CDATA_SECTION, this._stateCdataSection(e3);\n      }\n    }\n    _stateCharacterReference(e3) {\n      e3 === a.NUMBER_SIGN ? this.state = P.NUMERIC_CHARACTER_REFERENCE : F(e3) ? (this.state = P.NAMED_CHARACTER_REFERENCE, this._stateNamedCharacterReference(e3)) : (this._flushCodePointConsumedAsCharacterReference(a.AMPERSAND), this._reconsumeInState(this.returnState, e3));\n    }\n    _stateNamedCharacterReference(e3) {\n      const t2 = this._matchNamedCharacterReference(e3);\n      if (this._ensureHibernation()) ;else if (t2) {\n        for (let e4 = 0; e4 < t2.length; e4++) this._flushCodePointConsumedAsCharacterReference(t2[e4]);\n        this.state = this.returnState;\n      } else this._flushCodePointConsumedAsCharacterReference(a.AMPERSAND), this.state = P.AMBIGUOUS_AMPERSAND;\n    }\n    _stateAmbiguousAmpersand(e3) {\n      F(e3) ? this._flushCodePointConsumedAsCharacterReference(e3) : (e3 === a.SEMICOLON && this._err(T.unknownNamedCharacterReference), this._reconsumeInState(this.returnState, e3));\n    }\n    _stateNumericCharacterReference(e3) {\n      this.charRefCode = 0, e3 === a.LATIN_SMALL_X || e3 === a.LATIN_CAPITAL_X ? this.state = P.HEXADEMICAL_CHARACTER_REFERENCE_START : b(e3) ? (this.state = P.DECIMAL_CHARACTER_REFERENCE, this._stateDecimalCharacterReference(e3)) : (this._err(T.absenceOfDigitsInNumericCharacterReference), this._flushCodePointConsumedAsCharacterReference(a.AMPERSAND), this._flushCodePointConsumedAsCharacterReference(a.NUMBER_SIGN), this._reconsumeInState(this.returnState, e3));\n    }\n    _stateHexademicalCharacterReferenceStart(e3) {\n      !function (e4) {\n        return b(e4) || U(e4) || y(e4);\n      }(e3) ? (this._err(T.absenceOfDigitsInNumericCharacterReference), this._flushCodePointConsumedAsCharacterReference(a.AMPERSAND), this._flushCodePointConsumedAsCharacterReference(a.NUMBER_SIGN), this._unconsume(2), this.state = this.returnState) : (this.state = P.HEXADEMICAL_CHARACTER_REFERENCE, this._stateHexademicalCharacterReference(e3));\n    }\n    _stateHexademicalCharacterReference(e3) {\n      U(e3) ? this.charRefCode = 16 * this.charRefCode + e3 - 55 : y(e3) ? this.charRefCode = 16 * this.charRefCode + e3 - 87 : b(e3) ? this.charRefCode = 16 * this.charRefCode + e3 - 48 : e3 === a.SEMICOLON ? this.state = P.NUMERIC_CHARACTER_REFERENCE_END : (this._err(T.missingSemicolonAfterCharacterReference), this.state = P.NUMERIC_CHARACTER_REFERENCE_END, this._stateNumericCharacterReferenceEnd(e3));\n    }\n    _stateDecimalCharacterReference(e3) {\n      b(e3) ? this.charRefCode = 10 * this.charRefCode + e3 - 48 : e3 === a.SEMICOLON ? this.state = P.NUMERIC_CHARACTER_REFERENCE_END : (this._err(T.missingSemicolonAfterCharacterReference), this.state = P.NUMERIC_CHARACTER_REFERENCE_END, this._stateNumericCharacterReferenceEnd(e3));\n    }\n    _stateNumericCharacterReferenceEnd(e3) {\n      if (this.charRefCode === a.NULL) this._err(T.nullCharacterReference), this.charRefCode = a.REPLACEMENT_CHARACTER;else if (this.charRefCode > 1114111) this._err(T.characterReferenceOutsideUnicodeRange), this.charRefCode = a.REPLACEMENT_CHARACTER;else if (o(this.charRefCode)) this._err(T.surrogateCharacterReference), this.charRefCode = a.REPLACEMENT_CHARACTER;else if (E(this.charRefCode)) this._err(T.noncharacterCharacterReference);else if (c(this.charRefCode) || this.charRefCode === a.CARRIAGE_RETURN) {\n        this._err(T.controlCharacterReference);\n        const e4 = g.get(this.charRefCode);\n        void 0 !== e4 && (this.charRefCode = e4);\n      }\n      this._flushCodePointConsumedAsCharacterReference(this.charRefCode), this._reconsumeInState(this.returnState, e3);\n    }\n  }\n  const v = /* @__PURE__ */new Set([S.DD, S.DT, S.LI, S.OPTGROUP, S.OPTION, S.P, S.RB, S.RP, S.RT, S.RTC]),\n    Q = /* @__PURE__ */new Set([...v, S.CAPTION, S.COLGROUP, S.TBODY, S.TD, S.TFOOT, S.TH, S.THEAD, S.TR]),\n    q = /* @__PURE__ */new Map([[S.APPLET, u.HTML], [S.CAPTION, u.HTML], [S.HTML, u.HTML], [S.MARQUEE, u.HTML], [S.OBJECT, u.HTML], [S.TABLE, u.HTML], [S.TD, u.HTML], [S.TEMPLATE, u.HTML], [S.TH, u.HTML], [S.ANNOTATION_XML, u.MATHML], [S.MI, u.MATHML], [S.MN, u.MATHML], [S.MO, u.MATHML], [S.MS, u.MATHML], [S.MTEXT, u.MATHML], [S.DESC, u.SVG], [S.FOREIGN_OBJECT, u.SVG], [S.TITLE, u.SVG]]),\n    W = [S.H1, S.H2, S.H3, S.H4, S.H5, S.H6],\n    X = [S.TR, S.TEMPLATE, S.HTML],\n    K = [S.TBODY, S.TFOOT, S.THEAD, S.TEMPLATE, S.HTML],\n    V = [S.TABLE, S.TEMPLATE, S.HTML],\n    z = [S.TD, S.TH];\n  class j {\n    get currentTmplContentOrNode() {\n      return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\n    }\n    constructor(e3, t2, s2) {\n      this.treeAdapter = t2, this.handler = s2, this.items = [], this.tagIDs = [], this.stackTop = -1, this.tmplCount = 0, this.currentTagId = S.UNKNOWN, this.current = e3;\n    }\n    _indexOf(e3) {\n      return this.items.lastIndexOf(e3, this.stackTop);\n    }\n    _isInTemplate() {\n      return this.currentTagId === S.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === u.HTML;\n    }\n    _updateCurrentElement() {\n      this.current = this.items[this.stackTop], this.currentTagId = this.tagIDs[this.stackTop];\n    }\n    push(e3, t2) {\n      this.stackTop++, this.items[this.stackTop] = e3, this.current = e3, this.tagIDs[this.stackTop] = t2, this.currentTagId = t2, this._isInTemplate() && this.tmplCount++, this.handler.onItemPush(e3, t2, true);\n    }\n    pop() {\n      const e3 = this.current;\n      this.tmplCount > 0 && this._isInTemplate() && this.tmplCount--, this.stackTop--, this._updateCurrentElement(), this.handler.onItemPop(e3, true);\n    }\n    replace(e3, t2) {\n      const s2 = this._indexOf(e3);\n      this.items[s2] = t2, s2 === this.stackTop && (this.current = t2);\n    }\n    insertAfter(e3, t2, s2) {\n      const a2 = this._indexOf(e3) + 1;\n      this.items.splice(a2, 0, t2), this.tagIDs.splice(a2, 0, s2), this.stackTop++, a2 === this.stackTop && this._updateCurrentElement(), this.handler.onItemPush(this.current, this.currentTagId, a2 === this.stackTop);\n    }\n    popUntilTagNamePopped(e3) {\n      let t2 = this.stackTop + 1;\n      do {\n        t2 = this.tagIDs.lastIndexOf(e3, t2 - 1);\n      } while (t2 > 0 && this.treeAdapter.getNamespaceURI(this.items[t2]) !== u.HTML);\n      this.shortenToLength(t2 < 0 ? 0 : t2);\n    }\n    shortenToLength(e3) {\n      for (; this.stackTop >= e3;) {\n        const t2 = this.current;\n        this.tmplCount > 0 && this._isInTemplate() && (this.tmplCount -= 1), this.stackTop--, this._updateCurrentElement(), this.handler.onItemPop(t2, this.stackTop < e3);\n      }\n    }\n    popUntilElementPopped(e3) {\n      const t2 = this._indexOf(e3);\n      this.shortenToLength(t2 < 0 ? 0 : t2);\n    }\n    popUntilPopped(e3, t2) {\n      const s2 = this._indexOfTagNames(e3, t2);\n      this.shortenToLength(s2 < 0 ? 0 : s2);\n    }\n    popUntilNumberedHeaderPopped() {\n      this.popUntilPopped(W, u.HTML);\n    }\n    popUntilTableCellPopped() {\n      this.popUntilPopped(z, u.HTML);\n    }\n    popAllUpToHtmlElement() {\n      this.tmplCount = 0, this.shortenToLength(1);\n    }\n    _indexOfTagNames(e3, t2) {\n      for (let s2 = this.stackTop; s2 >= 0; s2--) if (e3.includes(this.tagIDs[s2]) && this.treeAdapter.getNamespaceURI(this.items[s2]) === t2) return s2;\n      return -1;\n    }\n    clearBackTo(e3, t2) {\n      const s2 = this._indexOfTagNames(e3, t2);\n      this.shortenToLength(s2 + 1);\n    }\n    clearBackToTableContext() {\n      this.clearBackTo(V, u.HTML);\n    }\n    clearBackToTableBodyContext() {\n      this.clearBackTo(K, u.HTML);\n    }\n    clearBackToTableRowContext() {\n      this.clearBackTo(X, u.HTML);\n    }\n    remove(e3) {\n      const t2 = this._indexOf(e3);\n      t2 >= 0 && (t2 === this.stackTop ? this.pop() : (this.items.splice(t2, 1), this.tagIDs.splice(t2, 1), this.stackTop--, this._updateCurrentElement(), this.handler.onItemPop(e3, false)));\n    }\n    tryPeekProperlyNestedBodyElement() {\n      return this.stackTop >= 1 && this.tagIDs[1] === S.BODY ? this.items[1] : null;\n    }\n    contains(e3) {\n      return this._indexOf(e3) > -1;\n    }\n    getCommonAncestor(e3) {\n      const t2 = this._indexOf(e3) - 1;\n      return t2 >= 0 ? this.items[t2] : null;\n    }\n    isRootHtmlElementCurrent() {\n      return 0 === this.stackTop && this.tagIDs[0] === S.HTML;\n    }\n    hasInScope(e3) {\n      for (let t2 = this.stackTop; t2 >= 0; t2--) {\n        const s2 = this.tagIDs[t2],\n          a2 = this.treeAdapter.getNamespaceURI(this.items[t2]);\n        if (s2 === e3 && a2 === u.HTML) return true;\n        if (q.get(s2) === a2) return false;\n      }\n      return true;\n    }\n    hasNumberedHeaderInScope() {\n      for (let e3 = this.stackTop; e3 >= 0; e3--) {\n        const t2 = this.tagIDs[e3],\n          s2 = this.treeAdapter.getNamespaceURI(this.items[e3]);\n        if (M(t2) && s2 === u.HTML) return true;\n        if (q.get(t2) === s2) return false;\n      }\n      return true;\n    }\n    hasInListItemScope(e3) {\n      for (let t2 = this.stackTop; t2 >= 0; t2--) {\n        const s2 = this.tagIDs[t2],\n          a2 = this.treeAdapter.getNamespaceURI(this.items[t2]);\n        if (s2 === e3 && a2 === u.HTML) return true;\n        if ((s2 === S.UL || s2 === S.OL) && a2 === u.HTML || q.get(s2) === a2) return false;\n      }\n      return true;\n    }\n    hasInButtonScope(e3) {\n      for (let t2 = this.stackTop; t2 >= 0; t2--) {\n        const s2 = this.tagIDs[t2],\n          a2 = this.treeAdapter.getNamespaceURI(this.items[t2]);\n        if (s2 === e3 && a2 === u.HTML) return true;\n        if (s2 === S.BUTTON && a2 === u.HTML || q.get(s2) === a2) return false;\n      }\n      return true;\n    }\n    hasInTableScope(e3) {\n      for (let t2 = this.stackTop; t2 >= 0; t2--) {\n        const s2 = this.tagIDs[t2];\n        if (this.treeAdapter.getNamespaceURI(this.items[t2]) === u.HTML) {\n          if (s2 === e3) return true;\n          if (s2 === S.TABLE || s2 === S.TEMPLATE || s2 === S.HTML) return false;\n        }\n      }\n      return true;\n    }\n    hasTableBodyContextInTableScope() {\n      for (let e3 = this.stackTop; e3 >= 0; e3--) {\n        const t2 = this.tagIDs[e3];\n        if (this.treeAdapter.getNamespaceURI(this.items[e3]) === u.HTML) {\n          if (t2 === S.TBODY || t2 === S.THEAD || t2 === S.TFOOT) return true;\n          if (t2 === S.TABLE || t2 === S.HTML) return false;\n        }\n      }\n      return true;\n    }\n    hasInSelectScope(e3) {\n      for (let t2 = this.stackTop; t2 >= 0; t2--) {\n        const s2 = this.tagIDs[t2];\n        if (this.treeAdapter.getNamespaceURI(this.items[t2]) === u.HTML) {\n          if (s2 === e3) return true;\n          if (s2 !== S.OPTION && s2 !== S.OPTGROUP) return false;\n        }\n      }\n      return true;\n    }\n    generateImpliedEndTags() {\n      for (; v.has(this.currentTagId);) this.pop();\n    }\n    generateImpliedEndTagsThoroughly() {\n      for (; Q.has(this.currentTagId);) this.pop();\n    }\n    generateImpliedEndTagsWithExclusion(e3) {\n      for (; this.currentTagId !== e3 && Q.has(this.currentTagId);) this.pop();\n    }\n  }\n  var J;\n  !function (e3) {\n    e3[e3.Marker = 0] = \"Marker\", e3[e3.Element = 1] = \"Element\";\n  }(J = J || (J = {}));\n  const Z = {\n    type: J.Marker\n  };\n  class $ {\n    constructor(e3) {\n      this.treeAdapter = e3, this.entries = [], this.bookmark = null;\n    }\n    _getNoahArkConditionCandidates(e3, t2) {\n      const s2 = [],\n        a2 = t2.length,\n        r2 = this.treeAdapter.getTagName(e3),\n        n2 = this.treeAdapter.getNamespaceURI(e3);\n      for (let e4 = 0; e4 < this.entries.length; e4++) {\n        const t3 = this.entries[e4];\n        if (t3.type === J.Marker) break;\n        const {\n          element: i2\n        } = t3;\n        if (this.treeAdapter.getTagName(i2) === r2 && this.treeAdapter.getNamespaceURI(i2) === n2) {\n          const t4 = this.treeAdapter.getAttrList(i2);\n          t4.length === a2 && s2.push({\n            idx: e4,\n            attrs: t4\n          });\n        }\n      }\n      return s2;\n    }\n    _ensureNoahArkCondition(e3) {\n      if (this.entries.length < 3) return;\n      const t2 = this.treeAdapter.getAttrList(e3),\n        s2 = this._getNoahArkConditionCandidates(e3, t2);\n      if (s2.length < 3) return;\n      const a2 = new Map(t2.map(e4 => [e4.name, e4.value]));\n      let r2 = 0;\n      for (let e4 = 0; e4 < s2.length; e4++) {\n        const t3 = s2[e4];\n        t3.attrs.every(e5 => a2.get(e5.name) === e5.value) && (r2 += 1, r2 >= 3 && this.entries.splice(t3.idx, 1));\n      }\n    }\n    insertMarker() {\n      this.entries.unshift(Z);\n    }\n    pushElement(e3, t2) {\n      this._ensureNoahArkCondition(e3), this.entries.unshift({\n        type: J.Element,\n        element: e3,\n        token: t2\n      });\n    }\n    insertElementAfterBookmark(e3, t2) {\n      const s2 = this.entries.indexOf(this.bookmark);\n      this.entries.splice(s2, 0, {\n        type: J.Element,\n        element: e3,\n        token: t2\n      });\n    }\n    removeEntry(e3) {\n      const t2 = this.entries.indexOf(e3);\n      t2 >= 0 && this.entries.splice(t2, 1);\n    }\n    clearToLastMarker() {\n      const e3 = this.entries.indexOf(Z);\n      e3 >= 0 ? this.entries.splice(0, e3 + 1) : this.entries.length = 0;\n    }\n    getElementEntryInScopeWithTagName(e3) {\n      const t2 = this.entries.find(t3 => t3.type === J.Marker || this.treeAdapter.getTagName(t3.element) === e3);\n      return t2 && t2.type === J.Element ? t2 : null;\n    }\n    getElementEntry(e3) {\n      return this.entries.find(t2 => t2.type === J.Element && t2.element === e3);\n    }\n  }\n  function ee(e3) {\n    return {\n      nodeName: \"#text\",\n      value: e3,\n      parentNode: null\n    };\n  }\n  const te = {\n      createDocument: () => ({\n        nodeName: \"#document\",\n        mode: I.NO_QUIRKS,\n        childNodes: []\n      }),\n      createDocumentFragment: () => ({\n        nodeName: \"#document-fragment\",\n        childNodes: []\n      }),\n      createElement: (e3, t2, s2) => ({\n        nodeName: e3,\n        tagName: e3,\n        attrs: s2,\n        namespaceURI: t2,\n        childNodes: [],\n        parentNode: null\n      }),\n      createCommentNode: e3 => ({\n        nodeName: \"#comment\",\n        data: e3,\n        parentNode: null\n      }),\n      appendChild(e3, t2) {\n        e3.childNodes.push(t2), t2.parentNode = e3;\n      },\n      insertBefore(e3, t2, s2) {\n        const a2 = e3.childNodes.indexOf(s2);\n        e3.childNodes.splice(a2, 0, t2), t2.parentNode = e3;\n      },\n      setTemplateContent(e3, t2) {\n        e3.content = t2;\n      },\n      getTemplateContent: e3 => e3.content,\n      setDocumentType(e3, t2, s2, a2) {\n        const r2 = e3.childNodes.find(e4 => \"#documentType\" === e4.nodeName);\n        if (r2) r2.name = t2, r2.publicId = s2, r2.systemId = a2;else {\n          const r3 = {\n            nodeName: \"#documentType\",\n            name: t2,\n            publicId: s2,\n            systemId: a2,\n            parentNode: null\n          };\n          te.appendChild(e3, r3);\n        }\n      },\n      setDocumentMode(e3, t2) {\n        e3.mode = t2;\n      },\n      getDocumentMode: e3 => e3.mode,\n      detachNode(e3) {\n        if (e3.parentNode) {\n          const t2 = e3.parentNode.childNodes.indexOf(e3);\n          e3.parentNode.childNodes.splice(t2, 1), e3.parentNode = null;\n        }\n      },\n      insertText(e3, t2) {\n        if (e3.childNodes.length > 0) {\n          const s2 = e3.childNodes[e3.childNodes.length - 1];\n          if (te.isTextNode(s2)) return void (s2.value += t2);\n        }\n        te.appendChild(e3, ee(t2));\n      },\n      insertTextBefore(e3, t2, s2) {\n        const a2 = e3.childNodes[e3.childNodes.indexOf(s2) - 1];\n        a2 && te.isTextNode(a2) ? a2.value += t2 : te.insertBefore(e3, ee(t2), s2);\n      },\n      adoptAttributes(e3, t2) {\n        const s2 = new Set(e3.attrs.map(e4 => e4.name));\n        for (let a2 = 0; a2 < t2.length; a2++) s2.has(t2[a2].name) || e3.attrs.push(t2[a2]);\n      },\n      getFirstChild: e3 => e3.childNodes[0],\n      getChildNodes: e3 => e3.childNodes,\n      getParentNode: e3 => e3.parentNode,\n      getAttrList: e3 => e3.attrs,\n      getTagName: e3 => e3.tagName,\n      getNamespaceURI: e3 => e3.namespaceURI,\n      getTextNodeContent: e3 => e3.value,\n      getCommentNodeContent: e3 => e3.data,\n      getDocumentTypeNodeName: e3 => e3.name,\n      getDocumentTypeNodePublicId: e3 => e3.publicId,\n      getDocumentTypeNodeSystemId: e3 => e3.systemId,\n      isTextNode: e3 => \"#text\" === e3.nodeName,\n      isCommentNode: e3 => \"#comment\" === e3.nodeName,\n      isDocumentTypeNode: e3 => \"#documentType\" === e3.nodeName,\n      isElementNode: e3 => Object.prototype.hasOwnProperty.call(e3, \"tagName\"),\n      setNodeSourceCodeLocation(e3, t2) {\n        e3.sourceCodeLocation = t2;\n      },\n      getNodeSourceCodeLocation: e3 => e3.sourceCodeLocation,\n      updateNodeSourceCodeLocation(e3, t2) {\n        e3.sourceCodeLocation = {\n          ...e3.sourceCodeLocation,\n          ...t2\n        };\n      }\n    },\n    se = \"html\",\n    ae = [\"+//silmaril//dtd html pro v0r11 19970101//\", \"-//as//dtd html 3.0 aswedit + extensions//\", \"-//advasoft ltd//dtd html 3.0 aswedit + extensions//\", \"-//ietf//dtd html 2.0 level 1//\", \"-//ietf//dtd html 2.0 level 2//\", \"-//ietf//dtd html 2.0 strict level 1//\", \"-//ietf//dtd html 2.0 strict level 2//\", \"-//ietf//dtd html 2.0 strict//\", \"-//ietf//dtd html 2.0//\", \"-//ietf//dtd html 2.1e//\", \"-//ietf//dtd html 3.0//\", \"-//ietf//dtd html 3.2 final//\", \"-//ietf//dtd html 3.2//\", \"-//ietf//dtd html 3//\", \"-//ietf//dtd html level 0//\", \"-//ietf//dtd html level 1//\", \"-//ietf//dtd html level 2//\", \"-//ietf//dtd html level 3//\", \"-//ietf//dtd html strict level 0//\", \"-//ietf//dtd html strict level 1//\", \"-//ietf//dtd html strict level 2//\", \"-//ietf//dtd html strict level 3//\", \"-//ietf//dtd html strict//\", \"-//ietf//dtd html//\", \"-//metrius//dtd metrius presentational//\", \"-//microsoft//dtd internet explorer 2.0 html strict//\", \"-//microsoft//dtd internet explorer 2.0 html//\", \"-//microsoft//dtd internet explorer 2.0 tables//\", \"-//microsoft//dtd internet explorer 3.0 html strict//\", \"-//microsoft//dtd internet explorer 3.0 html//\", \"-//microsoft//dtd internet explorer 3.0 tables//\", \"-//netscape comm. corp.//dtd html//\", \"-//netscape comm. corp.//dtd strict html//\", \"-//o'reilly and associates//dtd html 2.0//\", \"-//o'reilly and associates//dtd html extended 1.0//\", \"-//o'reilly and associates//dtd html extended relaxed 1.0//\", \"-//sq//dtd html 2.0 hotmetal + extensions//\", \"-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//\", \"-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//\", \"-//spyglass//dtd html 2.0 extended//\", \"-//sun microsystems corp.//dtd hotjava html//\", \"-//sun microsystems corp.//dtd hotjava strict html//\", \"-//w3c//dtd html 3 1995-03-24//\", \"-//w3c//dtd html 3.2 draft//\", \"-//w3c//dtd html 3.2 final//\", \"-//w3c//dtd html 3.2//\", \"-//w3c//dtd html 3.2s draft//\", \"-//w3c//dtd html 4.0 frameset//\", \"-//w3c//dtd html 4.0 transitional//\", \"-//w3c//dtd html experimental 19960712//\", \"-//w3c//dtd html experimental 970421//\", \"-//w3c//dtd w3 html//\", \"-//w3o//dtd w3 html 3.0//\", \"-//webtechs//dtd mozilla html 2.0//\", \"-//webtechs//dtd mozilla html//\"],\n    re = [...ae, \"-//w3c//dtd html 4.01 frameset//\", \"-//w3c//dtd html 4.01 transitional//\"],\n    ne = /* @__PURE__ */new Set([\"-//w3o//dtd w3 html strict 3.0//en//\", \"-/w3c/dtd html 4.0 transitional/en\", \"html\"]),\n    ie = [\"-//w3c//dtd xhtml 1.0 frameset//\", \"-//w3c//dtd xhtml 1.0 transitional//\"],\n    oe = [...ie, \"-//w3c//dtd html 4.01 frameset//\", \"-//w3c//dtd html 4.01 transitional//\"];\n  function ce(e3, t2) {\n    return t2.some(t3 => e3.startsWith(t3));\n  }\n  const Ee = \"text/html\",\n    Te = \"application/xhtml+xml\",\n    he = \"definitionurl\",\n    _e = \"definitionURL\",\n    Ae = new Map([\"attributeName\", \"attributeType\", \"baseFrequency\", \"baseProfile\", \"calcMode\", \"clipPathUnits\", \"diffuseConstant\", \"edgeMode\", \"filterUnits\", \"glyphRef\", \"gradientTransform\", \"gradientUnits\", \"kernelMatrix\", \"kernelUnitLength\", \"keyPoints\", \"keySplines\", \"keyTimes\", \"lengthAdjust\", \"limitingConeAngle\", \"markerHeight\", \"markerUnits\", \"markerWidth\", \"maskContentUnits\", \"maskUnits\", \"numOctaves\", \"pathLength\", \"patternContentUnits\", \"patternTransform\", \"patternUnits\", \"pointsAtX\", \"pointsAtY\", \"pointsAtZ\", \"preserveAlpha\", \"preserveAspectRatio\", \"primitiveUnits\", \"refX\", \"refY\", \"repeatCount\", \"repeatDur\", \"requiredExtensions\", \"requiredFeatures\", \"specularConstant\", \"specularExponent\", \"spreadMethod\", \"startOffset\", \"stdDeviation\", \"stitchTiles\", \"surfaceScale\", \"systemLanguage\", \"tableValues\", \"targetX\", \"targetY\", \"textLength\", \"viewBox\", \"viewTarget\", \"xChannelSelector\", \"yChannelSelector\", \"zoomAndPan\"].map(e3 => [e3.toLowerCase(), e3])),\n    le = /* @__PURE__ */new Map([[\"xlink:actuate\", {\n      prefix: \"xlink\",\n      name: \"actuate\",\n      namespace: u.XLINK\n    }], [\"xlink:arcrole\", {\n      prefix: \"xlink\",\n      name: \"arcrole\",\n      namespace: u.XLINK\n    }], [\"xlink:href\", {\n      prefix: \"xlink\",\n      name: \"href\",\n      namespace: u.XLINK\n    }], [\"xlink:role\", {\n      prefix: \"xlink\",\n      name: \"role\",\n      namespace: u.XLINK\n    }], [\"xlink:show\", {\n      prefix: \"xlink\",\n      name: \"show\",\n      namespace: u.XLINK\n    }], [\"xlink:title\", {\n      prefix: \"xlink\",\n      name: \"title\",\n      namespace: u.XLINK\n    }], [\"xlink:type\", {\n      prefix: \"xlink\",\n      name: \"type\",\n      namespace: u.XLINK\n    }], [\"xml:base\", {\n      prefix: \"xml\",\n      name: \"base\",\n      namespace: u.XML\n    }], [\"xml:lang\", {\n      prefix: \"xml\",\n      name: \"lang\",\n      namespace: u.XML\n    }], [\"xml:space\", {\n      prefix: \"xml\",\n      name: \"space\",\n      namespace: u.XML\n    }], [\"xmlns\", {\n      prefix: \"\",\n      name: \"xmlns\",\n      namespace: u.XMLNS\n    }], [\"xmlns:xlink\", {\n      prefix: \"xmlns\",\n      name: \"xlink\",\n      namespace: u.XMLNS\n    }]]),\n    me = new Map([\"altGlyph\", \"altGlyphDef\", \"altGlyphItem\", \"animateColor\", \"animateMotion\", \"animateTransform\", \"clipPath\", \"feBlend\", \"feColorMatrix\", \"feComponentTransfer\", \"feComposite\", \"feConvolveMatrix\", \"feDiffuseLighting\", \"feDisplacementMap\", \"feDistantLight\", \"feFlood\", \"feFuncA\", \"feFuncB\", \"feFuncG\", \"feFuncR\", \"feGaussianBlur\", \"feImage\", \"feMerge\", \"feMergeNode\", \"feMorphology\", \"feOffset\", \"fePointLight\", \"feSpecularLighting\", \"feSpotLight\", \"feTile\", \"feTurbulence\", \"foreignObject\", \"glyphRef\", \"linearGradient\", \"radialGradient\", \"textPath\"].map(e3 => [e3.toLowerCase(), e3])),\n    de = /* @__PURE__ */new Set([S.B, S.BIG, S.BLOCKQUOTE, S.BODY, S.BR, S.CENTER, S.CODE, S.DD, S.DIV, S.DL, S.DT, S.EM, S.EMBED, S.H1, S.H2, S.H3, S.H4, S.H5, S.H6, S.HEAD, S.HR, S.I, S.IMG, S.LI, S.LISTING, S.MENU, S.META, S.NOBR, S.OL, S.P, S.PRE, S.RUBY, S.S, S.SMALL, S.SPAN, S.STRONG, S.STRIKE, S.SUB, S.SUP, S.TABLE, S.TT, S.U, S.UL, S.VAR]);\n  function pe(e3) {\n    for (let t2 = 0; t2 < e3.attrs.length; t2++) if (e3.attrs[t2].name === he) {\n      e3.attrs[t2].name = _e;\n      break;\n    }\n  }\n  function ue(e3) {\n    for (let t2 = 0; t2 < e3.attrs.length; t2++) {\n      const s2 = Ae.get(e3.attrs[t2].name);\n      null != s2 && (e3.attrs[t2].name = s2);\n    }\n  }\n  function Ne(e3) {\n    for (let t2 = 0; t2 < e3.attrs.length; t2++) {\n      const s2 = le.get(e3.attrs[t2].name);\n      s2 && (e3.attrs[t2].prefix = s2.prefix, e3.attrs[t2].name = s2.name, e3.attrs[t2].namespace = s2.namespace);\n    }\n  }\n  const Ie = \"hidden\",\n    Ce = 8,\n    Se = 3;\n  var De;\n  !function (e3) {\n    e3[e3.INITIAL = 0] = \"INITIAL\", e3[e3.BEFORE_HTML = 1] = \"BEFORE_HTML\", e3[e3.BEFORE_HEAD = 2] = \"BEFORE_HEAD\", e3[e3.IN_HEAD = 3] = \"IN_HEAD\", e3[e3.IN_HEAD_NO_SCRIPT = 4] = \"IN_HEAD_NO_SCRIPT\", e3[e3.AFTER_HEAD = 5] = \"AFTER_HEAD\", e3[e3.IN_BODY = 6] = \"IN_BODY\", e3[e3.TEXT = 7] = \"TEXT\", e3[e3.IN_TABLE = 8] = \"IN_TABLE\", e3[e3.IN_TABLE_TEXT = 9] = \"IN_TABLE_TEXT\", e3[e3.IN_CAPTION = 10] = \"IN_CAPTION\", e3[e3.IN_COLUMN_GROUP = 11] = \"IN_COLUMN_GROUP\", e3[e3.IN_TABLE_BODY = 12] = \"IN_TABLE_BODY\", e3[e3.IN_ROW = 13] = \"IN_ROW\", e3[e3.IN_CELL = 14] = \"IN_CELL\", e3[e3.IN_SELECT = 15] = \"IN_SELECT\", e3[e3.IN_SELECT_IN_TABLE = 16] = \"IN_SELECT_IN_TABLE\", e3[e3.IN_TEMPLATE = 17] = \"IN_TEMPLATE\", e3[e3.AFTER_BODY = 18] = \"AFTER_BODY\", e3[e3.IN_FRAMESET = 19] = \"IN_FRAMESET\", e3[e3.AFTER_FRAMESET = 20] = \"AFTER_FRAMESET\", e3[e3.AFTER_AFTER_BODY = 21] = \"AFTER_AFTER_BODY\", e3[e3.AFTER_AFTER_FRAMESET = 22] = \"AFTER_AFTER_FRAMESET\";\n  }(De || (De = {}));\n  const Re = {\n      startLine: -1,\n      startCol: -1,\n      startOffset: -1,\n      endLine: -1,\n      endCol: -1,\n      endOffset: -1\n    },\n    Oe = /* @__PURE__ */new Set([S.TABLE, S.TBODY, S.TFOOT, S.THEAD, S.TR]),\n    fe = {\n      scriptingEnabled: true,\n      sourceCodeLocationInfo: false,\n      treeAdapter: te,\n      onParseError: null\n    };\n  class Le {\n    constructor(e3, t2, s2 = null, a2 = null) {\n      this.fragmentContext = s2, this.scriptHandler = a2, this.currentToken = null, this.stopped = false, this.insertionMode = De.INITIAL, this.originalInsertionMode = De.INITIAL, this.headElement = null, this.formElement = null, this.currentNotInHTML = false, this.tmplInsertionModeStack = [], this.pendingCharacterTokens = [], this.hasNonWhitespacePendingCharacterToken = false, this.framesetOk = true, this.skipNextNewLine = false, this.fosterParentingEnabled = false, this.options = {\n        ...fe,\n        ...e3\n      }, this.treeAdapter = this.options.treeAdapter, this.onParseError = this.options.onParseError, this.onParseError && (this.options.sourceCodeLocationInfo = true), this.document = null != t2 ? t2 : this.treeAdapter.createDocument(), this.tokenizer = new Y(this.options, this), this.activeFormattingElements = new $(this.treeAdapter), this.fragmentContextID = s2 ? O(this.treeAdapter.getTagName(s2)) : S.UNKNOWN, this._setContextModes(null != s2 ? s2 : this.document, this.fragmentContextID), this.openElements = new j(this.document, this.treeAdapter, this);\n    }\n    static parse(e3, t2) {\n      const s2 = new this(t2);\n      return s2.tokenizer.write(e3, true), s2.document;\n    }\n    static getFragmentParser(e3, t2) {\n      const s2 = {\n        ...fe,\n        ...t2\n      };\n      null != e3 || (e3 = s2.treeAdapter.createElement(C.TEMPLATE, u.HTML, []));\n      const a2 = s2.treeAdapter.createElement(\"documentmock\", u.HTML, []),\n        r2 = new this(s2, a2, e3);\n      return r2.fragmentContextID === S.TEMPLATE && r2.tmplInsertionModeStack.unshift(De.IN_TEMPLATE), r2._initTokenizerForFragmentParsing(), r2._insertFakeRootElement(), r2._resetInsertionMode(), r2._findFormInFragmentContext(), r2;\n    }\n    getFragment() {\n      const e3 = this.treeAdapter.getFirstChild(this.document),\n        t2 = this.treeAdapter.createDocumentFragment();\n      return this._adoptNodes(e3, t2), t2;\n    }\n    _err(e3, t2, s2) {\n      var a2;\n      if (!this.onParseError) return;\n      const r2 = null !== (a2 = e3.location) && void 0 !== a2 ? a2 : Re,\n        n2 = {\n          code: t2,\n          startLine: r2.startLine,\n          startCol: r2.startCol,\n          startOffset: r2.startOffset,\n          endLine: s2 ? r2.startLine : r2.endLine,\n          endCol: s2 ? r2.startCol : r2.endCol,\n          endOffset: s2 ? r2.startOffset : r2.endOffset\n        };\n      this.onParseError(n2);\n    }\n    onItemPush(e3, t2, s2) {\n      var a2, r2;\n      null === (r2 = (a2 = this.treeAdapter).onItemPush) || void 0 === r2 || r2.call(a2, e3), s2 && this.openElements.stackTop > 0 && this._setContextModes(e3, t2);\n    }\n    onItemPop(e3, t2) {\n      var s2, a2;\n      if (this.options.sourceCodeLocationInfo && this._setEndLocation(e3, this.currentToken), null === (a2 = (s2 = this.treeAdapter).onItemPop) || void 0 === a2 || a2.call(s2, e3, this.openElements.current), t2) {\n        let e4, t3;\n        0 === this.openElements.stackTop && this.fragmentContext ? (e4 = this.fragmentContext, t3 = this.fragmentContextID) : ({\n          current: e4,\n          currentTagId: t3\n        } = this.openElements), this._setContextModes(e4, t3);\n      }\n    }\n    _setContextModes(e3, t2) {\n      const s2 = e3 === this.document || this.treeAdapter.getNamespaceURI(e3) === u.HTML;\n      this.currentNotInHTML = !s2, this.tokenizer.inForeignNode = !s2 && !this._isIntegrationPoint(t2, e3);\n    }\n    _switchToTextParsing(e3, t2) {\n      this._insertElement(e3, u.HTML), this.tokenizer.state = t2, this.originalInsertionMode = this.insertionMode, this.insertionMode = De.TEXT;\n    }\n    switchToPlaintextParsing() {\n      this.insertionMode = De.TEXT, this.originalInsertionMode = De.IN_BODY, this.tokenizer.state = k.PLAINTEXT;\n    }\n    _getAdjustedCurrentElement() {\n      return 0 === this.openElements.stackTop && this.fragmentContext ? this.fragmentContext : this.openElements.current;\n    }\n    _findFormInFragmentContext() {\n      let e3 = this.fragmentContext;\n      for (; e3;) {\n        if (this.treeAdapter.getTagName(e3) === C.FORM) {\n          this.formElement = e3;\n          break;\n        }\n        e3 = this.treeAdapter.getParentNode(e3);\n      }\n    }\n    _initTokenizerForFragmentParsing() {\n      if (this.fragmentContext && this.treeAdapter.getNamespaceURI(this.fragmentContext) === u.HTML) switch (this.fragmentContextID) {\n        case S.TITLE:\n        case S.TEXTAREA:\n          this.tokenizer.state = k.RCDATA;\n          break;\n        case S.STYLE:\n        case S.XMP:\n        case S.IFRAME:\n        case S.NOEMBED:\n        case S.NOFRAMES:\n        case S.NOSCRIPT:\n          this.tokenizer.state = k.RAWTEXT;\n          break;\n        case S.SCRIPT:\n          this.tokenizer.state = k.SCRIPT_DATA;\n          break;\n        case S.PLAINTEXT:\n          this.tokenizer.state = k.PLAINTEXT;\n      }\n    }\n    _setDocumentType(e3) {\n      const t2 = e3.name || \"\",\n        s2 = e3.publicId || \"\",\n        a2 = e3.systemId || \"\";\n      if (this.treeAdapter.setDocumentType(this.document, t2, s2, a2), e3.location) {\n        const t3 = this.treeAdapter.getChildNodes(this.document).find(e4 => this.treeAdapter.isDocumentTypeNode(e4));\n        t3 && this.treeAdapter.setNodeSourceCodeLocation(t3, e3.location);\n      }\n    }\n    _attachElementToTree(e3, t2) {\n      if (this.options.sourceCodeLocationInfo) {\n        const s2 = t2 && {\n          ...t2,\n          startTag: t2\n        };\n        this.treeAdapter.setNodeSourceCodeLocation(e3, s2);\n      }\n      if (this._shouldFosterParentOnInsertion()) this._fosterParentElement(e3);else {\n        const t3 = this.openElements.currentTmplContentOrNode;\n        this.treeAdapter.appendChild(t3, e3);\n      }\n    }\n    _appendElement(e3, t2) {\n      const s2 = this.treeAdapter.createElement(e3.tagName, t2, e3.attrs);\n      this._attachElementToTree(s2, e3.location);\n    }\n    _insertElement(e3, t2) {\n      const s2 = this.treeAdapter.createElement(e3.tagName, t2, e3.attrs);\n      this._attachElementToTree(s2, e3.location), this.openElements.push(s2, e3.tagID);\n    }\n    _insertFakeElement(e3, t2) {\n      const s2 = this.treeAdapter.createElement(e3, u.HTML, []);\n      this._attachElementToTree(s2, null), this.openElements.push(s2, t2);\n    }\n    _insertTemplate(e3) {\n      const t2 = this.treeAdapter.createElement(e3.tagName, u.HTML, e3.attrs),\n        s2 = this.treeAdapter.createDocumentFragment();\n      this.treeAdapter.setTemplateContent(t2, s2), this._attachElementToTree(t2, e3.location), this.openElements.push(t2, e3.tagID), this.options.sourceCodeLocationInfo && this.treeAdapter.setNodeSourceCodeLocation(s2, null);\n    }\n    _insertFakeRootElement() {\n      const e3 = this.treeAdapter.createElement(C.HTML, u.HTML, []);\n      this.options.sourceCodeLocationInfo && this.treeAdapter.setNodeSourceCodeLocation(e3, null), this.treeAdapter.appendChild(this.openElements.current, e3), this.openElements.push(e3, S.HTML);\n    }\n    _appendCommentNode(e3, t2) {\n      const s2 = this.treeAdapter.createCommentNode(e3.data);\n      this.treeAdapter.appendChild(t2, s2), this.options.sourceCodeLocationInfo && this.treeAdapter.setNodeSourceCodeLocation(s2, e3.location);\n    }\n    _insertCharacters(e3) {\n      let t2, s2;\n      if (this._shouldFosterParentOnInsertion() ? (({\n        parent: t2,\n        beforeElement: s2\n      } = this._findFosterParentingLocation()), s2 ? this.treeAdapter.insertTextBefore(t2, e3.chars, s2) : this.treeAdapter.insertText(t2, e3.chars)) : (t2 = this.openElements.currentTmplContentOrNode, this.treeAdapter.insertText(t2, e3.chars)), !e3.location) return;\n      const a2 = this.treeAdapter.getChildNodes(t2),\n        r2 = s2 ? a2.lastIndexOf(s2) : a2.length,\n        n2 = a2[r2 - 1];\n      if (this.treeAdapter.getNodeSourceCodeLocation(n2)) {\n        const {\n          endLine: t3,\n          endCol: s3,\n          endOffset: a3\n        } = e3.location;\n        this.treeAdapter.updateNodeSourceCodeLocation(n2, {\n          endLine: t3,\n          endCol: s3,\n          endOffset: a3\n        });\n      } else this.options.sourceCodeLocationInfo && this.treeAdapter.setNodeSourceCodeLocation(n2, e3.location);\n    }\n    _adoptNodes(e3, t2) {\n      for (let s2 = this.treeAdapter.getFirstChild(e3); s2; s2 = this.treeAdapter.getFirstChild(e3)) this.treeAdapter.detachNode(s2), this.treeAdapter.appendChild(t2, s2);\n    }\n    _setEndLocation(e3, t2) {\n      if (this.treeAdapter.getNodeSourceCodeLocation(e3) && t2.location) {\n        const s2 = t2.location,\n          a2 = this.treeAdapter.getTagName(e3),\n          r2 = t2.type === h.END_TAG && a2 === t2.tagName ? {\n            endTag: {\n              ...s2\n            },\n            endLine: s2.endLine,\n            endCol: s2.endCol,\n            endOffset: s2.endOffset\n          } : {\n            endLine: s2.startLine,\n            endCol: s2.startCol,\n            endOffset: s2.startOffset\n          };\n        this.treeAdapter.updateNodeSourceCodeLocation(e3, r2);\n      }\n    }\n    shouldProcessStartTagTokenInForeignContent(e3) {\n      if (!this.currentNotInHTML) return false;\n      let t2, s2;\n      return 0 === this.openElements.stackTop && this.fragmentContext ? (t2 = this.fragmentContext, s2 = this.fragmentContextID) : ({\n        current: t2,\n        currentTagId: s2\n      } = this.openElements), (e3.tagID !== S.SVG || this.treeAdapter.getTagName(t2) !== C.ANNOTATION_XML || this.treeAdapter.getNamespaceURI(t2) !== u.MATHML) && (this.tokenizer.inForeignNode || (e3.tagID === S.MGLYPH || e3.tagID === S.MALIGNMARK) && !this._isIntegrationPoint(s2, t2, u.HTML));\n    }\n    _processToken(e3) {\n      switch (e3.type) {\n        case h.CHARACTER:\n          this.onCharacter(e3);\n          break;\n        case h.NULL_CHARACTER:\n          this.onNullCharacter(e3);\n          break;\n        case h.COMMENT:\n          this.onComment(e3);\n          break;\n        case h.DOCTYPE:\n          this.onDoctype(e3);\n          break;\n        case h.START_TAG:\n          this._processStartTag(e3);\n          break;\n        case h.END_TAG:\n          this.onEndTag(e3);\n          break;\n        case h.EOF:\n          this.onEof(e3);\n          break;\n        case h.WHITESPACE_CHARACTER:\n          this.onWhitespaceCharacter(e3);\n      }\n    }\n    _isIntegrationPoint(e3, t2, s2) {\n      return function (e4, t3, s3, a2) {\n        return (!a2 || a2 === u.HTML) && function (e5, t4, s4) {\n          if (t4 === u.MATHML && e5 === S.ANNOTATION_XML) {\n            for (let e6 = 0; e6 < s4.length; e6++) if (s4[e6].name === N.ENCODING) {\n              const t5 = s4[e6].value.toLowerCase();\n              return t5 === Ee || t5 === Te;\n            }\n          }\n          return t4 === u.SVG && (e5 === S.FOREIGN_OBJECT || e5 === S.DESC || e5 === S.TITLE);\n        }(e4, t3, s3) || (!a2 || a2 === u.MATHML) && function (e5, t4) {\n          return t4 === u.MATHML && (e5 === S.MI || e5 === S.MO || e5 === S.MN || e5 === S.MS || e5 === S.MTEXT);\n        }(e4, t3);\n      }(e3, this.treeAdapter.getNamespaceURI(t2), this.treeAdapter.getAttrList(t2), s2);\n    }\n    _reconstructActiveFormattingElements() {\n      const e3 = this.activeFormattingElements.entries.length;\n      if (e3) {\n        const t2 = this.activeFormattingElements.entries.findIndex(e4 => e4.type === J.Marker || this.openElements.contains(e4.element));\n        for (let s2 = t2 < 0 ? e3 - 1 : t2 - 1; s2 >= 0; s2--) {\n          const e4 = this.activeFormattingElements.entries[s2];\n          this._insertElement(e4.token, this.treeAdapter.getNamespaceURI(e4.element)), e4.element = this.openElements.current;\n        }\n      }\n    }\n    _closeTableCell() {\n      this.openElements.generateImpliedEndTags(), this.openElements.popUntilTableCellPopped(), this.activeFormattingElements.clearToLastMarker(), this.insertionMode = De.IN_ROW;\n    }\n    _closePElement() {\n      this.openElements.generateImpliedEndTagsWithExclusion(S.P), this.openElements.popUntilTagNamePopped(S.P);\n    }\n    _resetInsertionMode() {\n      for (let e3 = this.openElements.stackTop; e3 >= 0; e3--) switch (0 === e3 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[e3]) {\n        case S.TR:\n          return void (this.insertionMode = De.IN_ROW);\n        case S.TBODY:\n        case S.THEAD:\n        case S.TFOOT:\n          return void (this.insertionMode = De.IN_TABLE_BODY);\n        case S.CAPTION:\n          return void (this.insertionMode = De.IN_CAPTION);\n        case S.COLGROUP:\n          return void (this.insertionMode = De.IN_COLUMN_GROUP);\n        case S.TABLE:\n          return void (this.insertionMode = De.IN_TABLE);\n        case S.BODY:\n          return void (this.insertionMode = De.IN_BODY);\n        case S.FRAMESET:\n          return void (this.insertionMode = De.IN_FRAMESET);\n        case S.SELECT:\n          return void this._resetInsertionModeForSelect(e3);\n        case S.TEMPLATE:\n          return void (this.insertionMode = this.tmplInsertionModeStack[0]);\n        case S.HTML:\n          return void (this.insertionMode = this.headElement ? De.AFTER_HEAD : De.BEFORE_HEAD);\n        case S.TD:\n        case S.TH:\n          if (e3 > 0) return void (this.insertionMode = De.IN_CELL);\n          break;\n        case S.HEAD:\n          if (e3 > 0) return void (this.insertionMode = De.IN_HEAD);\n      }\n      this.insertionMode = De.IN_BODY;\n    }\n    _resetInsertionModeForSelect(e3) {\n      if (e3 > 0) for (let t2 = e3 - 1; t2 > 0; t2--) {\n        const e4 = this.openElements.tagIDs[t2];\n        if (e4 === S.TEMPLATE) break;\n        if (e4 === S.TABLE) return void (this.insertionMode = De.IN_SELECT_IN_TABLE);\n      }\n      this.insertionMode = De.IN_SELECT;\n    }\n    _isElementCausesFosterParenting(e3) {\n      return Oe.has(e3);\n    }\n    _shouldFosterParentOnInsertion() {\n      return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);\n    }\n    _findFosterParentingLocation() {\n      for (let e3 = this.openElements.stackTop; e3 >= 0; e3--) {\n        const t2 = this.openElements.items[e3];\n        switch (this.openElements.tagIDs[e3]) {\n          case S.TEMPLATE:\n            if (this.treeAdapter.getNamespaceURI(t2) === u.HTML) return {\n              parent: this.treeAdapter.getTemplateContent(t2),\n              beforeElement: null\n            };\n            break;\n          case S.TABLE:\n            {\n              const s2 = this.treeAdapter.getParentNode(t2);\n              return s2 ? {\n                parent: s2,\n                beforeElement: t2\n              } : {\n                parent: this.openElements.items[e3 - 1],\n                beforeElement: null\n              };\n            }\n        }\n      }\n      return {\n        parent: this.openElements.items[0],\n        beforeElement: null\n      };\n    }\n    _fosterParentElement(e3) {\n      const t2 = this._findFosterParentingLocation();\n      t2.beforeElement ? this.treeAdapter.insertBefore(t2.parent, e3, t2.beforeElement) : this.treeAdapter.appendChild(t2.parent, e3);\n    }\n    _isSpecialElement(e3, t2) {\n      const s2 = this.treeAdapter.getNamespaceURI(e3);\n      return L[s2].has(t2);\n    }\n    onCharacter(e3) {\n      if (this.skipNextNewLine = false, this.tokenizer.inForeignNode) !function (e4, t2) {\n        e4._insertCharacters(t2), e4.framesetOk = false;\n      }(this, e3);else switch (this.insertionMode) {\n        case De.INITIAL:\n          ye(this, e3);\n          break;\n        case De.BEFORE_HTML:\n          Ge(this, e3);\n          break;\n        case De.BEFORE_HEAD:\n          we(this, e3);\n          break;\n        case De.IN_HEAD:\n          ve(this, e3);\n          break;\n        case De.IN_HEAD_NO_SCRIPT:\n          Qe(this, e3);\n          break;\n        case De.AFTER_HEAD:\n          qe(this, e3);\n          break;\n        case De.IN_BODY:\n        case De.IN_CAPTION:\n        case De.IN_CELL:\n        case De.IN_TEMPLATE:\n          Ke(this, e3);\n          break;\n        case De.TEXT:\n        case De.IN_SELECT:\n        case De.IN_SELECT_IN_TABLE:\n          this._insertCharacters(e3);\n          break;\n        case De.IN_TABLE:\n        case De.IN_TABLE_BODY:\n        case De.IN_ROW:\n          st(this, e3);\n          break;\n        case De.IN_TABLE_TEXT:\n          ot(this, e3);\n          break;\n        case De.IN_COLUMN_GROUP:\n          ht(this, e3);\n          break;\n        case De.AFTER_BODY:\n          It(this, e3);\n          break;\n        case De.AFTER_AFTER_BODY:\n          Ct(this, e3);\n      }\n    }\n    onNullCharacter(e3) {\n      if (this.skipNextNewLine = false, this.tokenizer.inForeignNode) !function (e4, t2) {\n        t2.chars = s, e4._insertCharacters(t2);\n      }(this, e3);else switch (this.insertionMode) {\n        case De.INITIAL:\n          ye(this, e3);\n          break;\n        case De.BEFORE_HTML:\n          Ge(this, e3);\n          break;\n        case De.BEFORE_HEAD:\n          we(this, e3);\n          break;\n        case De.IN_HEAD:\n          ve(this, e3);\n          break;\n        case De.IN_HEAD_NO_SCRIPT:\n          Qe(this, e3);\n          break;\n        case De.AFTER_HEAD:\n          qe(this, e3);\n          break;\n        case De.TEXT:\n          this._insertCharacters(e3);\n          break;\n        case De.IN_TABLE:\n        case De.IN_TABLE_BODY:\n        case De.IN_ROW:\n          st(this, e3);\n          break;\n        case De.IN_COLUMN_GROUP:\n          ht(this, e3);\n          break;\n        case De.AFTER_BODY:\n          It(this, e3);\n          break;\n        case De.AFTER_AFTER_BODY:\n          Ct(this, e3);\n      }\n    }\n    onComment(e3) {\n      if (this.skipNextNewLine = false, this.currentNotInHTML) Fe(this, e3);else switch (this.insertionMode) {\n        case De.INITIAL:\n        case De.BEFORE_HTML:\n        case De.BEFORE_HEAD:\n        case De.IN_HEAD:\n        case De.IN_HEAD_NO_SCRIPT:\n        case De.AFTER_HEAD:\n        case De.IN_BODY:\n        case De.IN_TABLE:\n        case De.IN_CAPTION:\n        case De.IN_COLUMN_GROUP:\n        case De.IN_TABLE_BODY:\n        case De.IN_ROW:\n        case De.IN_CELL:\n        case De.IN_SELECT:\n        case De.IN_SELECT_IN_TABLE:\n        case De.IN_TEMPLATE:\n        case De.IN_FRAMESET:\n        case De.AFTER_FRAMESET:\n          Fe(this, e3);\n          break;\n        case De.IN_TABLE_TEXT:\n          ct(this, e3);\n          break;\n        case De.AFTER_BODY:\n          !function (e4, t2) {\n            e4._appendCommentNode(t2, e4.openElements.items[0]);\n          }(this, e3);\n          break;\n        case De.AFTER_AFTER_BODY:\n        case De.AFTER_AFTER_FRAMESET:\n          !function (e4, t2) {\n            e4._appendCommentNode(t2, e4.document);\n          }(this, e3);\n      }\n    }\n    onDoctype(e3) {\n      switch (this.skipNextNewLine = false, this.insertionMode) {\n        case De.INITIAL:\n          !function (e4, t2) {\n            e4._setDocumentType(t2);\n            const s2 = t2.forceQuirks ? I.QUIRKS : function (e5) {\n              if (e5.name !== se) return I.QUIRKS;\n              const {\n                systemId: t3\n              } = e5;\n              if (t3 && \"http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd\" === t3.toLowerCase()) return I.QUIRKS;\n              let {\n                publicId: s3\n              } = e5;\n              if (null !== s3) {\n                if (s3 = s3.toLowerCase(), ne.has(s3)) return I.QUIRKS;\n                let e6 = null === t3 ? re : ae;\n                if (ce(s3, e6)) return I.QUIRKS;\n                if (e6 = null === t3 ? ie : oe, ce(s3, e6)) return I.LIMITED_QUIRKS;\n              }\n              return I.NO_QUIRKS;\n            }(t2);\n            (function (e5) {\n              return e5.name === se && null === e5.publicId && (null === e5.systemId || \"about:legacy-compat\" === e5.systemId);\n            })(t2) || e4._err(t2, T.nonConformingDoctype), e4.treeAdapter.setDocumentMode(e4.document, s2), e4.insertionMode = De.BEFORE_HTML;\n          }(this, e3);\n          break;\n        case De.BEFORE_HEAD:\n        case De.IN_HEAD:\n        case De.IN_HEAD_NO_SCRIPT:\n        case De.AFTER_HEAD:\n          this._err(e3, T.misplacedDoctype);\n          break;\n        case De.IN_TABLE_TEXT:\n          ct(this, e3);\n      }\n    }\n    onStartTag(e3) {\n      this.skipNextNewLine = false, this.currentToken = e3, this._processStartTag(e3), e3.selfClosing && !e3.ackSelfClosing && this._err(e3, T.nonVoidHtmlElementStartTagWithTrailingSolidus);\n    }\n    _processStartTag(e3) {\n      this.shouldProcessStartTagTokenInForeignContent(e3) ? function (e4, t2) {\n        if (function (e5) {\n          const t3 = e5.tagID;\n          return t3 === S.FONT && e5.attrs.some(({\n            name: e6\n          }) => e6 === N.COLOR || e6 === N.SIZE || e6 === N.FACE) || de.has(t3);\n        }(t2)) St(e4), e4._startTagOutsideForeignContent(t2);else {\n          const s2 = e4._getAdjustedCurrentElement(),\n            a2 = e4.treeAdapter.getNamespaceURI(s2);\n          a2 === u.MATHML ? pe(t2) : a2 === u.SVG && (function (e5) {\n            const t3 = me.get(e5.tagName);\n            null != t3 && (e5.tagName = t3, e5.tagID = O(e5.tagName));\n          }(t2), ue(t2)), Ne(t2), t2.selfClosing ? e4._appendElement(t2, a2) : e4._insertElement(t2, a2), t2.ackSelfClosing = true;\n        }\n      }(this, e3) : this._startTagOutsideForeignContent(e3);\n    }\n    _startTagOutsideForeignContent(e3) {\n      switch (this.insertionMode) {\n        case De.INITIAL:\n          ye(this, e3);\n          break;\n        case De.BEFORE_HTML:\n          !function (e4, t2) {\n            t2.tagID === S.HTML ? (e4._insertElement(t2, u.HTML), e4.insertionMode = De.BEFORE_HEAD) : Ge(e4, t2);\n          }(this, e3);\n          break;\n        case De.BEFORE_HEAD:\n          !function (e4, t2) {\n            switch (t2.tagID) {\n              case S.HTML:\n                Ze(e4, t2);\n                break;\n              case S.HEAD:\n                e4._insertElement(t2, u.HTML), e4.headElement = e4.openElements.current, e4.insertionMode = De.IN_HEAD;\n                break;\n              default:\n                we(e4, t2);\n            }\n          }(this, e3);\n          break;\n        case De.IN_HEAD:\n          xe(this, e3);\n          break;\n        case De.IN_HEAD_NO_SCRIPT:\n          !function (e4, t2) {\n            switch (t2.tagID) {\n              case S.HTML:\n                Ze(e4, t2);\n                break;\n              case S.BASEFONT:\n              case S.BGSOUND:\n              case S.HEAD:\n              case S.LINK:\n              case S.META:\n              case S.NOFRAMES:\n              case S.STYLE:\n                xe(e4, t2);\n                break;\n              case S.NOSCRIPT:\n                e4._err(t2, T.nestedNoscriptInHead);\n                break;\n              default:\n                Qe(e4, t2);\n            }\n          }(this, e3);\n          break;\n        case De.AFTER_HEAD:\n          !function (e4, t2) {\n            switch (t2.tagID) {\n              case S.HTML:\n                Ze(e4, t2);\n                break;\n              case S.BODY:\n                e4._insertElement(t2, u.HTML), e4.framesetOk = false, e4.insertionMode = De.IN_BODY;\n                break;\n              case S.FRAMESET:\n                e4._insertElement(t2, u.HTML), e4.insertionMode = De.IN_FRAMESET;\n                break;\n              case S.BASE:\n              case S.BASEFONT:\n              case S.BGSOUND:\n              case S.LINK:\n              case S.META:\n              case S.NOFRAMES:\n              case S.SCRIPT:\n              case S.STYLE:\n              case S.TEMPLATE:\n              case S.TITLE:\n                e4._err(t2, T.abandonedHeadElementChild), e4.openElements.push(e4.headElement, S.HEAD), xe(e4, t2), e4.openElements.remove(e4.headElement);\n                break;\n              case S.HEAD:\n                e4._err(t2, T.misplacedStartTagForHeadElement);\n                break;\n              default:\n                qe(e4, t2);\n            }\n          }(this, e3);\n          break;\n        case De.IN_BODY:\n          Ze(this, e3);\n          break;\n        case De.IN_TABLE:\n          at(this, e3);\n          break;\n        case De.IN_TABLE_TEXT:\n          ct(this, e3);\n          break;\n        case De.IN_CAPTION:\n          !function (e4, t2) {\n            const s2 = t2.tagID;\n            Et.has(s2) ? e4.openElements.hasInTableScope(S.CAPTION) && (e4.openElements.generateImpliedEndTags(), e4.openElements.popUntilTagNamePopped(S.CAPTION), e4.activeFormattingElements.clearToLastMarker(), e4.insertionMode = De.IN_TABLE, at(e4, t2)) : Ze(e4, t2);\n          }(this, e3);\n          break;\n        case De.IN_COLUMN_GROUP:\n          Tt(this, e3);\n          break;\n        case De.IN_TABLE_BODY:\n          _t(this, e3);\n          break;\n        case De.IN_ROW:\n          lt(this, e3);\n          break;\n        case De.IN_CELL:\n          !function (e4, t2) {\n            const s2 = t2.tagID;\n            Et.has(s2) ? (e4.openElements.hasInTableScope(S.TD) || e4.openElements.hasInTableScope(S.TH)) && (e4._closeTableCell(), lt(e4, t2)) : Ze(e4, t2);\n          }(this, e3);\n          break;\n        case De.IN_SELECT:\n          dt(this, e3);\n          break;\n        case De.IN_SELECT_IN_TABLE:\n          !function (e4, t2) {\n            const s2 = t2.tagID;\n            s2 === S.CAPTION || s2 === S.TABLE || s2 === S.TBODY || s2 === S.TFOOT || s2 === S.THEAD || s2 === S.TR || s2 === S.TD || s2 === S.TH ? (e4.openElements.popUntilTagNamePopped(S.SELECT), e4._resetInsertionMode(), e4._processStartTag(t2)) : dt(e4, t2);\n          }(this, e3);\n          break;\n        case De.IN_TEMPLATE:\n          !function (e4, t2) {\n            switch (t2.tagID) {\n              case S.BASE:\n              case S.BASEFONT:\n              case S.BGSOUND:\n              case S.LINK:\n              case S.META:\n              case S.NOFRAMES:\n              case S.SCRIPT:\n              case S.STYLE:\n              case S.TEMPLATE:\n              case S.TITLE:\n                xe(e4, t2);\n                break;\n              case S.CAPTION:\n              case S.COLGROUP:\n              case S.TBODY:\n              case S.TFOOT:\n              case S.THEAD:\n                e4.tmplInsertionModeStack[0] = De.IN_TABLE, e4.insertionMode = De.IN_TABLE, at(e4, t2);\n                break;\n              case S.COL:\n                e4.tmplInsertionModeStack[0] = De.IN_COLUMN_GROUP, e4.insertionMode = De.IN_COLUMN_GROUP, Tt(e4, t2);\n                break;\n              case S.TR:\n                e4.tmplInsertionModeStack[0] = De.IN_TABLE_BODY, e4.insertionMode = De.IN_TABLE_BODY, _t(e4, t2);\n                break;\n              case S.TD:\n              case S.TH:\n                e4.tmplInsertionModeStack[0] = De.IN_ROW, e4.insertionMode = De.IN_ROW, lt(e4, t2);\n                break;\n              default:\n                e4.tmplInsertionModeStack[0] = De.IN_BODY, e4.insertionMode = De.IN_BODY, Ze(e4, t2);\n            }\n          }(this, e3);\n          break;\n        case De.AFTER_BODY:\n          !function (e4, t2) {\n            t2.tagID === S.HTML ? Ze(e4, t2) : It(e4, t2);\n          }(this, e3);\n          break;\n        case De.IN_FRAMESET:\n          !function (e4, t2) {\n            switch (t2.tagID) {\n              case S.HTML:\n                Ze(e4, t2);\n                break;\n              case S.FRAMESET:\n                e4._insertElement(t2, u.HTML);\n                break;\n              case S.FRAME:\n                e4._appendElement(t2, u.HTML), t2.ackSelfClosing = true;\n                break;\n              case S.NOFRAMES:\n                xe(e4, t2);\n            }\n          }(this, e3);\n          break;\n        case De.AFTER_FRAMESET:\n          !function (e4, t2) {\n            switch (t2.tagID) {\n              case S.HTML:\n                Ze(e4, t2);\n                break;\n              case S.NOFRAMES:\n                xe(e4, t2);\n            }\n          }(this, e3);\n          break;\n        case De.AFTER_AFTER_BODY:\n          !function (e4, t2) {\n            t2.tagID === S.HTML ? Ze(e4, t2) : Ct(e4, t2);\n          }(this, e3);\n          break;\n        case De.AFTER_AFTER_FRAMESET:\n          !function (e4, t2) {\n            switch (t2.tagID) {\n              case S.HTML:\n                Ze(e4, t2);\n                break;\n              case S.NOFRAMES:\n                xe(e4, t2);\n            }\n          }(this, e3);\n      }\n    }\n    onEndTag(e3) {\n      this.skipNextNewLine = false, this.currentToken = e3, this.currentNotInHTML ? function (e4, t2) {\n        if (t2.tagID === S.P || t2.tagID === S.BR) return St(e4), void e4._endTagOutsideForeignContent(t2);\n        for (let s2 = e4.openElements.stackTop; s2 > 0; s2--) {\n          const a2 = e4.openElements.items[s2];\n          if (e4.treeAdapter.getNamespaceURI(a2) === u.HTML) {\n            e4._endTagOutsideForeignContent(t2);\n            break;\n          }\n          const r2 = e4.treeAdapter.getTagName(a2);\n          if (r2.toLowerCase() === t2.tagName) {\n            t2.tagName = r2, e4.openElements.shortenToLength(s2);\n            break;\n          }\n        }\n      }(this, e3) : this._endTagOutsideForeignContent(e3);\n    }\n    _endTagOutsideForeignContent(e3) {\n      switch (this.insertionMode) {\n        case De.INITIAL:\n          ye(this, e3);\n          break;\n        case De.BEFORE_HTML:\n          !function (e4, t2) {\n            const s2 = t2.tagID;\n            s2 !== S.HTML && s2 !== S.HEAD && s2 !== S.BODY && s2 !== S.BR || Ge(e4, t2);\n          }(this, e3);\n          break;\n        case De.BEFORE_HEAD:\n          !function (e4, t2) {\n            const s2 = t2.tagID;\n            s2 === S.HEAD || s2 === S.BODY || s2 === S.HTML || s2 === S.BR ? we(e4, t2) : e4._err(t2, T.endTagWithoutMatchingOpenElement);\n          }(this, e3);\n          break;\n        case De.IN_HEAD:\n          !function (e4, t2) {\n            switch (t2.tagID) {\n              case S.HEAD:\n                e4.openElements.pop(), e4.insertionMode = De.AFTER_HEAD;\n                break;\n              case S.BODY:\n              case S.BR:\n              case S.HTML:\n                ve(e4, t2);\n                break;\n              case S.TEMPLATE:\n                Ye(e4, t2);\n                break;\n              default:\n                e4._err(t2, T.endTagWithoutMatchingOpenElement);\n            }\n          }(this, e3);\n          break;\n        case De.IN_HEAD_NO_SCRIPT:\n          !function (e4, t2) {\n            switch (t2.tagID) {\n              case S.NOSCRIPT:\n                e4.openElements.pop(), e4.insertionMode = De.IN_HEAD;\n                break;\n              case S.BR:\n                Qe(e4, t2);\n                break;\n              default:\n                e4._err(t2, T.endTagWithoutMatchingOpenElement);\n            }\n          }(this, e3);\n          break;\n        case De.AFTER_HEAD:\n          !function (e4, t2) {\n            switch (t2.tagID) {\n              case S.BODY:\n              case S.HTML:\n              case S.BR:\n                qe(e4, t2);\n                break;\n              case S.TEMPLATE:\n                Ye(e4, t2);\n                break;\n              default:\n                e4._err(t2, T.endTagWithoutMatchingOpenElement);\n            }\n          }(this, e3);\n          break;\n        case De.IN_BODY:\n          et(this, e3);\n          break;\n        case De.TEXT:\n          !function (e4, t2) {\n            var s2;\n            t2.tagID === S.SCRIPT && (null === (s2 = e4.scriptHandler) || void 0 === s2 || s2.call(e4, e4.openElements.current)), e4.openElements.pop(), e4.insertionMode = e4.originalInsertionMode;\n          }(this, e3);\n          break;\n        case De.IN_TABLE:\n          rt(this, e3);\n          break;\n        case De.IN_TABLE_TEXT:\n          ct(this, e3);\n          break;\n        case De.IN_CAPTION:\n          !function (e4, t2) {\n            const s2 = t2.tagID;\n            switch (s2) {\n              case S.CAPTION:\n              case S.TABLE:\n                e4.openElements.hasInTableScope(S.CAPTION) && (e4.openElements.generateImpliedEndTags(), e4.openElements.popUntilTagNamePopped(S.CAPTION), e4.activeFormattingElements.clearToLastMarker(), e4.insertionMode = De.IN_TABLE, s2 === S.TABLE && rt(e4, t2));\n                break;\n              case S.BODY:\n              case S.COL:\n              case S.COLGROUP:\n              case S.HTML:\n              case S.TBODY:\n              case S.TD:\n              case S.TFOOT:\n              case S.TH:\n              case S.THEAD:\n              case S.TR:\n                break;\n              default:\n                et(e4, t2);\n            }\n          }(this, e3);\n          break;\n        case De.IN_COLUMN_GROUP:\n          !function (e4, t2) {\n            switch (t2.tagID) {\n              case S.COLGROUP:\n                e4.openElements.currentTagId === S.COLGROUP && (e4.openElements.pop(), e4.insertionMode = De.IN_TABLE);\n                break;\n              case S.TEMPLATE:\n                Ye(e4, t2);\n                break;\n              case S.COL:\n                break;\n              default:\n                ht(e4, t2);\n            }\n          }(this, e3);\n          break;\n        case De.IN_TABLE_BODY:\n          At(this, e3);\n          break;\n        case De.IN_ROW:\n          mt(this, e3);\n          break;\n        case De.IN_CELL:\n          !function (e4, t2) {\n            const s2 = t2.tagID;\n            switch (s2) {\n              case S.TD:\n              case S.TH:\n                e4.openElements.hasInTableScope(s2) && (e4.openElements.generateImpliedEndTags(), e4.openElements.popUntilTagNamePopped(s2), e4.activeFormattingElements.clearToLastMarker(), e4.insertionMode = De.IN_ROW);\n                break;\n              case S.TABLE:\n              case S.TBODY:\n              case S.TFOOT:\n              case S.THEAD:\n              case S.TR:\n                e4.openElements.hasInTableScope(s2) && (e4._closeTableCell(), mt(e4, t2));\n                break;\n              case S.BODY:\n              case S.CAPTION:\n              case S.COL:\n              case S.COLGROUP:\n              case S.HTML:\n                break;\n              default:\n                et(e4, t2);\n            }\n          }(this, e3);\n          break;\n        case De.IN_SELECT:\n          pt(this, e3);\n          break;\n        case De.IN_SELECT_IN_TABLE:\n          !function (e4, t2) {\n            const s2 = t2.tagID;\n            s2 === S.CAPTION || s2 === S.TABLE || s2 === S.TBODY || s2 === S.TFOOT || s2 === S.THEAD || s2 === S.TR || s2 === S.TD || s2 === S.TH ? e4.openElements.hasInTableScope(s2) && (e4.openElements.popUntilTagNamePopped(S.SELECT), e4._resetInsertionMode(), e4.onEndTag(t2)) : pt(e4, t2);\n          }(this, e3);\n          break;\n        case De.IN_TEMPLATE:\n          !function (e4, t2) {\n            t2.tagID === S.TEMPLATE && Ye(e4, t2);\n          }(this, e3);\n          break;\n        case De.AFTER_BODY:\n          Nt(this, e3);\n          break;\n        case De.IN_FRAMESET:\n          !function (e4, t2) {\n            t2.tagID !== S.FRAMESET || e4.openElements.isRootHtmlElementCurrent() || (e4.openElements.pop(), e4.fragmentContext || e4.openElements.currentTagId === S.FRAMESET || (e4.insertionMode = De.AFTER_FRAMESET));\n          }(this, e3);\n          break;\n        case De.AFTER_FRAMESET:\n          !function (e4, t2) {\n            t2.tagID === S.HTML && (e4.insertionMode = De.AFTER_AFTER_FRAMESET);\n          }(this, e3);\n          break;\n        case De.AFTER_AFTER_BODY:\n          Ct(this, e3);\n      }\n    }\n    onEof(e3) {\n      switch (this.insertionMode) {\n        case De.INITIAL:\n          ye(this, e3);\n          break;\n        case De.BEFORE_HTML:\n          Ge(this, e3);\n          break;\n        case De.BEFORE_HEAD:\n          we(this, e3);\n          break;\n        case De.IN_HEAD:\n          ve(this, e3);\n          break;\n        case De.IN_HEAD_NO_SCRIPT:\n          Qe(this, e3);\n          break;\n        case De.AFTER_HEAD:\n          qe(this, e3);\n          break;\n        case De.IN_BODY:\n        case De.IN_TABLE:\n        case De.IN_CAPTION:\n        case De.IN_COLUMN_GROUP:\n        case De.IN_TABLE_BODY:\n        case De.IN_ROW:\n        case De.IN_CELL:\n        case De.IN_SELECT:\n        case De.IN_SELECT_IN_TABLE:\n          tt(this, e3);\n          break;\n        case De.TEXT:\n          !function (e4, t2) {\n            e4._err(t2, T.eofInElementThatCanContainOnlyText), e4.openElements.pop(), e4.insertionMode = e4.originalInsertionMode, e4.onEof(t2);\n          }(this, e3);\n          break;\n        case De.IN_TABLE_TEXT:\n          ct(this, e3);\n          break;\n        case De.IN_TEMPLATE:\n          ut(this, e3);\n          break;\n        case De.AFTER_BODY:\n        case De.IN_FRAMESET:\n        case De.AFTER_FRAMESET:\n        case De.AFTER_AFTER_BODY:\n        case De.AFTER_AFTER_FRAMESET:\n          Ue(this, e3);\n      }\n    }\n    onWhitespaceCharacter(e3) {\n      if (this.skipNextNewLine && (this.skipNextNewLine = false, e3.chars.charCodeAt(0) === a.LINE_FEED)) {\n        if (1 === e3.chars.length) return;\n        e3.chars = e3.chars.substr(1);\n      }\n      if (this.tokenizer.inForeignNode) this._insertCharacters(e3);else switch (this.insertionMode) {\n        case De.IN_HEAD:\n        case De.IN_HEAD_NO_SCRIPT:\n        case De.AFTER_HEAD:\n        case De.TEXT:\n        case De.IN_COLUMN_GROUP:\n        case De.IN_SELECT:\n        case De.IN_SELECT_IN_TABLE:\n        case De.IN_FRAMESET:\n        case De.AFTER_FRAMESET:\n          this._insertCharacters(e3);\n          break;\n        case De.IN_BODY:\n        case De.IN_CAPTION:\n        case De.IN_CELL:\n        case De.IN_TEMPLATE:\n        case De.AFTER_BODY:\n        case De.AFTER_AFTER_BODY:\n        case De.AFTER_AFTER_FRAMESET:\n          Xe(this, e3);\n          break;\n        case De.IN_TABLE:\n        case De.IN_TABLE_BODY:\n        case De.IN_ROW:\n          st(this, e3);\n          break;\n        case De.IN_TABLE_TEXT:\n          it(this, e3);\n      }\n    }\n  }\n  function Me(e3, t2) {\n    let s2 = e3.activeFormattingElements.getElementEntryInScopeWithTagName(t2.tagName);\n    return s2 ? e3.openElements.contains(s2.element) ? e3.openElements.hasInScope(t2.tagID) || (s2 = null) : (e3.activeFormattingElements.removeEntry(s2), s2 = null) : $e(e3, t2), s2;\n  }\n  function ge(e3, t2) {\n    let s2 = null,\n      a2 = e3.openElements.stackTop;\n    for (; a2 >= 0; a2--) {\n      const r2 = e3.openElements.items[a2];\n      if (r2 === t2.element) break;\n      e3._isSpecialElement(r2, e3.openElements.tagIDs[a2]) && (s2 = r2);\n    }\n    return s2 || (e3.openElements.shortenToLength(a2 < 0 ? 0 : a2), e3.activeFormattingElements.removeEntry(t2)), s2;\n  }\n  function Pe(e3, t2, s2) {\n    let a2 = t2,\n      r2 = e3.openElements.getCommonAncestor(t2);\n    for (let n2 = 0, i2 = r2; i2 !== s2; n2++, i2 = r2) {\n      r2 = e3.openElements.getCommonAncestor(i2);\n      const s3 = e3.activeFormattingElements.getElementEntry(i2),\n        o2 = s3 && n2 >= Se;\n      !s3 || o2 ? (o2 && e3.activeFormattingElements.removeEntry(s3), e3.openElements.remove(i2)) : (i2 = ke(e3, s3), a2 === t2 && (e3.activeFormattingElements.bookmark = s3), e3.treeAdapter.detachNode(a2), e3.treeAdapter.appendChild(i2, a2), a2 = i2);\n    }\n    return a2;\n  }\n  function ke(e3, t2) {\n    const s2 = e3.treeAdapter.getNamespaceURI(t2.element),\n      a2 = e3.treeAdapter.createElement(t2.token.tagName, s2, t2.token.attrs);\n    return e3.openElements.replace(t2.element, a2), t2.element = a2, a2;\n  }\n  function be(e3, t2, s2) {\n    const a2 = O(e3.treeAdapter.getTagName(t2));\n    if (e3._isElementCausesFosterParenting(a2)) e3._fosterParentElement(s2);else {\n      const r2 = e3.treeAdapter.getNamespaceURI(t2);\n      a2 === S.TEMPLATE && r2 === u.HTML && (t2 = e3.treeAdapter.getTemplateContent(t2)), e3.treeAdapter.appendChild(t2, s2);\n    }\n  }\n  function Be(e3, t2, s2) {\n    const a2 = e3.treeAdapter.getNamespaceURI(s2.element),\n      {\n        token: r2\n      } = s2,\n      n2 = e3.treeAdapter.createElement(r2.tagName, a2, r2.attrs);\n    e3._adoptNodes(t2, n2), e3.treeAdapter.appendChild(t2, n2), e3.activeFormattingElements.insertElementAfterBookmark(n2, r2), e3.activeFormattingElements.removeEntry(s2), e3.openElements.remove(s2.element), e3.openElements.insertAfter(t2, n2, r2.tagID);\n  }\n  function He(e3, t2) {\n    for (let s2 = 0; s2 < Ce; s2++) {\n      const s3 = Me(e3, t2);\n      if (!s3) break;\n      const a2 = ge(e3, s3);\n      if (!a2) break;\n      e3.activeFormattingElements.bookmark = s3;\n      const r2 = Pe(e3, a2, s3.element),\n        n2 = e3.openElements.getCommonAncestor(s3.element);\n      e3.treeAdapter.detachNode(r2), n2 && be(e3, n2, r2), Be(e3, a2, s3);\n    }\n  }\n  function Fe(e3, t2) {\n    e3._appendCommentNode(t2, e3.openElements.currentTmplContentOrNode);\n  }\n  function Ue(e3, t2) {\n    if (e3.stopped = true, t2.location) {\n      const s2 = e3.fragmentContext ? 0 : 2;\n      for (let a2 = e3.openElements.stackTop; a2 >= s2; a2--) e3._setEndLocation(e3.openElements.items[a2], t2);\n      if (!e3.fragmentContext && e3.openElements.stackTop >= 0) {\n        const s3 = e3.openElements.items[0],\n          a2 = e3.treeAdapter.getNodeSourceCodeLocation(s3);\n        if (a2 && !a2.endTag && (e3._setEndLocation(s3, t2), e3.openElements.stackTop >= 1)) {\n          const s4 = e3.openElements.items[1],\n            a3 = e3.treeAdapter.getNodeSourceCodeLocation(s4);\n          a3 && !a3.endTag && e3._setEndLocation(s4, t2);\n        }\n      }\n    }\n  }\n  function ye(e3, t2) {\n    e3._err(t2, T.missingDoctype, true), e3.treeAdapter.setDocumentMode(e3.document, I.QUIRKS), e3.insertionMode = De.BEFORE_HTML, e3._processToken(t2);\n  }\n  function Ge(e3, t2) {\n    e3._insertFakeRootElement(), e3.insertionMode = De.BEFORE_HEAD, e3._processToken(t2);\n  }\n  function we(e3, t2) {\n    e3._insertFakeElement(C.HEAD, S.HEAD), e3.headElement = e3.openElements.current, e3.insertionMode = De.IN_HEAD, e3._processToken(t2);\n  }\n  function xe(e3, t2) {\n    switch (t2.tagID) {\n      case S.HTML:\n        Ze(e3, t2);\n        break;\n      case S.BASE:\n      case S.BASEFONT:\n      case S.BGSOUND:\n      case S.LINK:\n      case S.META:\n        e3._appendElement(t2, u.HTML), t2.ackSelfClosing = true;\n        break;\n      case S.TITLE:\n        e3._switchToTextParsing(t2, k.RCDATA);\n        break;\n      case S.NOSCRIPT:\n        e3.options.scriptingEnabled ? e3._switchToTextParsing(t2, k.RAWTEXT) : (e3._insertElement(t2, u.HTML), e3.insertionMode = De.IN_HEAD_NO_SCRIPT);\n        break;\n      case S.NOFRAMES:\n      case S.STYLE:\n        e3._switchToTextParsing(t2, k.RAWTEXT);\n        break;\n      case S.SCRIPT:\n        e3._switchToTextParsing(t2, k.SCRIPT_DATA);\n        break;\n      case S.TEMPLATE:\n        e3._insertTemplate(t2), e3.activeFormattingElements.insertMarker(), e3.framesetOk = false, e3.insertionMode = De.IN_TEMPLATE, e3.tmplInsertionModeStack.unshift(De.IN_TEMPLATE);\n        break;\n      case S.HEAD:\n        e3._err(t2, T.misplacedStartTagForHeadElement);\n        break;\n      default:\n        ve(e3, t2);\n    }\n  }\n  function Ye(e3, t2) {\n    e3.openElements.tmplCount > 0 ? (e3.openElements.generateImpliedEndTagsThoroughly(), e3.openElements.currentTagId !== S.TEMPLATE && e3._err(t2, T.closingOfElementWithOpenChildElements), e3.openElements.popUntilTagNamePopped(S.TEMPLATE), e3.activeFormattingElements.clearToLastMarker(), e3.tmplInsertionModeStack.shift(), e3._resetInsertionMode()) : e3._err(t2, T.endTagWithoutMatchingOpenElement);\n  }\n  function ve(e3, t2) {\n    e3.openElements.pop(), e3.insertionMode = De.AFTER_HEAD, e3._processToken(t2);\n  }\n  function Qe(e3, t2) {\n    const s2 = t2.type === h.EOF ? T.openElementsLeftAfterEof : T.disallowedContentInNoscriptInHead;\n    e3._err(t2, s2), e3.openElements.pop(), e3.insertionMode = De.IN_HEAD, e3._processToken(t2);\n  }\n  function qe(e3, t2) {\n    e3._insertFakeElement(C.BODY, S.BODY), e3.insertionMode = De.IN_BODY, We(e3, t2);\n  }\n  function We(e3, t2) {\n    switch (t2.type) {\n      case h.CHARACTER:\n        Ke(e3, t2);\n        break;\n      case h.WHITESPACE_CHARACTER:\n        Xe(e3, t2);\n        break;\n      case h.COMMENT:\n        Fe(e3, t2);\n        break;\n      case h.START_TAG:\n        Ze(e3, t2);\n        break;\n      case h.END_TAG:\n        et(e3, t2);\n        break;\n      case h.EOF:\n        tt(e3, t2);\n    }\n  }\n  function Xe(e3, t2) {\n    e3._reconstructActiveFormattingElements(), e3._insertCharacters(t2);\n  }\n  function Ke(e3, t2) {\n    e3._reconstructActiveFormattingElements(), e3._insertCharacters(t2), e3.framesetOk = false;\n  }\n  function Ve(e3, t2) {\n    e3._reconstructActiveFormattingElements(), e3._appendElement(t2, u.HTML), e3.framesetOk = false, t2.ackSelfClosing = true;\n  }\n  function ze(e3) {\n    const t2 = A(e3, N.TYPE);\n    return null != t2 && t2.toLowerCase() === Ie;\n  }\n  function je(e3, t2) {\n    e3._switchToTextParsing(t2, k.RAWTEXT);\n  }\n  function Je(e3, t2) {\n    e3._reconstructActiveFormattingElements(), e3._insertElement(t2, u.HTML);\n  }\n  function Ze(e3, t2) {\n    switch (t2.tagID) {\n      case S.I:\n      case S.S:\n      case S.B:\n      case S.U:\n      case S.EM:\n      case S.TT:\n      case S.BIG:\n      case S.CODE:\n      case S.FONT:\n      case S.SMALL:\n      case S.STRIKE:\n      case S.STRONG:\n        !function (e4, t3) {\n          e4._reconstructActiveFormattingElements(), e4._insertElement(t3, u.HTML), e4.activeFormattingElements.pushElement(e4.openElements.current, t3);\n        }(e3, t2);\n        break;\n      case S.A:\n        !function (e4, t3) {\n          const s2 = e4.activeFormattingElements.getElementEntryInScopeWithTagName(C.A);\n          s2 && (He(e4, t3), e4.openElements.remove(s2.element), e4.activeFormattingElements.removeEntry(s2)), e4._reconstructActiveFormattingElements(), e4._insertElement(t3, u.HTML), e4.activeFormattingElements.pushElement(e4.openElements.current, t3);\n        }(e3, t2);\n        break;\n      case S.H1:\n      case S.H2:\n      case S.H3:\n      case S.H4:\n      case S.H5:\n      case S.H6:\n        !function (e4, t3) {\n          e4.openElements.hasInButtonScope(S.P) && e4._closePElement(), M(e4.openElements.currentTagId) && e4.openElements.pop(), e4._insertElement(t3, u.HTML);\n        }(e3, t2);\n        break;\n      case S.P:\n      case S.DL:\n      case S.OL:\n      case S.UL:\n      case S.DIV:\n      case S.DIR:\n      case S.NAV:\n      case S.MAIN:\n      case S.MENU:\n      case S.ASIDE:\n      case S.CENTER:\n      case S.FIGURE:\n      case S.FOOTER:\n      case S.HEADER:\n      case S.HGROUP:\n      case S.DIALOG:\n      case S.DETAILS:\n      case S.ADDRESS:\n      case S.ARTICLE:\n      case S.SECTION:\n      case S.SUMMARY:\n      case S.FIELDSET:\n      case S.BLOCKQUOTE:\n      case S.FIGCAPTION:\n        !function (e4, t3) {\n          e4.openElements.hasInButtonScope(S.P) && e4._closePElement(), e4._insertElement(t3, u.HTML);\n        }(e3, t2);\n        break;\n      case S.LI:\n      case S.DD:\n      case S.DT:\n        !function (e4, t3) {\n          e4.framesetOk = false;\n          const s2 = t3.tagID;\n          for (let t4 = e4.openElements.stackTop; t4 >= 0; t4--) {\n            const a2 = e4.openElements.tagIDs[t4];\n            if (s2 === S.LI && a2 === S.LI || (s2 === S.DD || s2 === S.DT) && (a2 === S.DD || a2 === S.DT)) {\n              e4.openElements.generateImpliedEndTagsWithExclusion(a2), e4.openElements.popUntilTagNamePopped(a2);\n              break;\n            }\n            if (a2 !== S.ADDRESS && a2 !== S.DIV && a2 !== S.P && e4._isSpecialElement(e4.openElements.items[t4], a2)) break;\n          }\n          e4.openElements.hasInButtonScope(S.P) && e4._closePElement(), e4._insertElement(t3, u.HTML);\n        }(e3, t2);\n        break;\n      case S.BR:\n      case S.IMG:\n      case S.WBR:\n      case S.AREA:\n      case S.EMBED:\n      case S.KEYGEN:\n        Ve(e3, t2);\n        break;\n      case S.HR:\n        !function (e4, t3) {\n          e4.openElements.hasInButtonScope(S.P) && e4._closePElement(), e4._appendElement(t3, u.HTML), e4.framesetOk = false, t3.ackSelfClosing = true;\n        }(e3, t2);\n        break;\n      case S.RB:\n      case S.RTC:\n        !function (e4, t3) {\n          e4.openElements.hasInScope(S.RUBY) && e4.openElements.generateImpliedEndTags(), e4._insertElement(t3, u.HTML);\n        }(e3, t2);\n        break;\n      case S.RT:\n      case S.RP:\n        !function (e4, t3) {\n          e4.openElements.hasInScope(S.RUBY) && e4.openElements.generateImpliedEndTagsWithExclusion(S.RTC), e4._insertElement(t3, u.HTML);\n        }(e3, t2);\n        break;\n      case S.PRE:\n      case S.LISTING:\n        !function (e4, t3) {\n          e4.openElements.hasInButtonScope(S.P) && e4._closePElement(), e4._insertElement(t3, u.HTML), e4.skipNextNewLine = true, e4.framesetOk = false;\n        }(e3, t2);\n        break;\n      case S.XMP:\n        !function (e4, t3) {\n          e4.openElements.hasInButtonScope(S.P) && e4._closePElement(), e4._reconstructActiveFormattingElements(), e4.framesetOk = false, e4._switchToTextParsing(t3, k.RAWTEXT);\n        }(e3, t2);\n        break;\n      case S.SVG:\n        !function (e4, t3) {\n          e4._reconstructActiveFormattingElements(), ue(t3), Ne(t3), t3.selfClosing ? e4._appendElement(t3, u.SVG) : e4._insertElement(t3, u.SVG), t3.ackSelfClosing = true;\n        }(e3, t2);\n        break;\n      case S.HTML:\n        !function (e4, t3) {\n          0 === e4.openElements.tmplCount && e4.treeAdapter.adoptAttributes(e4.openElements.items[0], t3.attrs);\n        }(e3, t2);\n        break;\n      case S.BASE:\n      case S.LINK:\n      case S.META:\n      case S.STYLE:\n      case S.TITLE:\n      case S.SCRIPT:\n      case S.BGSOUND:\n      case S.BASEFONT:\n      case S.TEMPLATE:\n        xe(e3, t2);\n        break;\n      case S.BODY:\n        !function (e4, t3) {\n          const s2 = e4.openElements.tryPeekProperlyNestedBodyElement();\n          s2 && 0 === e4.openElements.tmplCount && (e4.framesetOk = false, e4.treeAdapter.adoptAttributes(s2, t3.attrs));\n        }(e3, t2);\n        break;\n      case S.FORM:\n        !function (e4, t3) {\n          const s2 = e4.openElements.tmplCount > 0;\n          e4.formElement && !s2 || (e4.openElements.hasInButtonScope(S.P) && e4._closePElement(), e4._insertElement(t3, u.HTML), s2 || (e4.formElement = e4.openElements.current));\n        }(e3, t2);\n        break;\n      case S.NOBR:\n        !function (e4, t3) {\n          e4._reconstructActiveFormattingElements(), e4.openElements.hasInScope(S.NOBR) && (He(e4, t3), e4._reconstructActiveFormattingElements()), e4._insertElement(t3, u.HTML), e4.activeFormattingElements.pushElement(e4.openElements.current, t3);\n        }(e3, t2);\n        break;\n      case S.MATH:\n        !function (e4, t3) {\n          e4._reconstructActiveFormattingElements(), pe(t3), Ne(t3), t3.selfClosing ? e4._appendElement(t3, u.MATHML) : e4._insertElement(t3, u.MATHML), t3.ackSelfClosing = true;\n        }(e3, t2);\n        break;\n      case S.TABLE:\n        !function (e4, t3) {\n          e4.treeAdapter.getDocumentMode(e4.document) !== I.QUIRKS && e4.openElements.hasInButtonScope(S.P) && e4._closePElement(), e4._insertElement(t3, u.HTML), e4.framesetOk = false, e4.insertionMode = De.IN_TABLE;\n        }(e3, t2);\n        break;\n      case S.INPUT:\n        !function (e4, t3) {\n          e4._reconstructActiveFormattingElements(), e4._appendElement(t3, u.HTML), ze(t3) || (e4.framesetOk = false), t3.ackSelfClosing = true;\n        }(e3, t2);\n        break;\n      case S.PARAM:\n      case S.TRACK:\n      case S.SOURCE:\n        !function (e4, t3) {\n          e4._appendElement(t3, u.HTML), t3.ackSelfClosing = true;\n        }(e3, t2);\n        break;\n      case S.IMAGE:\n        !function (e4, t3) {\n          t3.tagName = C.IMG, t3.tagID = S.IMG, Ve(e4, t3);\n        }(e3, t2);\n        break;\n      case S.BUTTON:\n        !function (e4, t3) {\n          e4.openElements.hasInScope(S.BUTTON) && (e4.openElements.generateImpliedEndTags(), e4.openElements.popUntilTagNamePopped(S.BUTTON)), e4._reconstructActiveFormattingElements(), e4._insertElement(t3, u.HTML), e4.framesetOk = false;\n        }(e3, t2);\n        break;\n      case S.APPLET:\n      case S.OBJECT:\n      case S.MARQUEE:\n        !function (e4, t3) {\n          e4._reconstructActiveFormattingElements(), e4._insertElement(t3, u.HTML), e4.activeFormattingElements.insertMarker(), e4.framesetOk = false;\n        }(e3, t2);\n        break;\n      case S.IFRAME:\n        !function (e4, t3) {\n          e4.framesetOk = false, e4._switchToTextParsing(t3, k.RAWTEXT);\n        }(e3, t2);\n        break;\n      case S.SELECT:\n        !function (e4, t3) {\n          e4._reconstructActiveFormattingElements(), e4._insertElement(t3, u.HTML), e4.framesetOk = false, e4.insertionMode = e4.insertionMode === De.IN_TABLE || e4.insertionMode === De.IN_CAPTION || e4.insertionMode === De.IN_TABLE_BODY || e4.insertionMode === De.IN_ROW || e4.insertionMode === De.IN_CELL ? De.IN_SELECT_IN_TABLE : De.IN_SELECT;\n        }(e3, t2);\n        break;\n      case S.OPTION:\n      case S.OPTGROUP:\n        !function (e4, t3) {\n          e4.openElements.currentTagId === S.OPTION && e4.openElements.pop(), e4._reconstructActiveFormattingElements(), e4._insertElement(t3, u.HTML);\n        }(e3, t2);\n        break;\n      case S.NOEMBED:\n        je(e3, t2);\n        break;\n      case S.FRAMESET:\n        !function (e4, t3) {\n          const s2 = e4.openElements.tryPeekProperlyNestedBodyElement();\n          e4.framesetOk && s2 && (e4.treeAdapter.detachNode(s2), e4.openElements.popAllUpToHtmlElement(), e4._insertElement(t3, u.HTML), e4.insertionMode = De.IN_FRAMESET);\n        }(e3, t2);\n        break;\n      case S.TEXTAREA:\n        !function (e4, t3) {\n          e4._insertElement(t3, u.HTML), e4.skipNextNewLine = true, e4.tokenizer.state = k.RCDATA, e4.originalInsertionMode = e4.insertionMode, e4.framesetOk = false, e4.insertionMode = De.TEXT;\n        }(e3, t2);\n        break;\n      case S.NOSCRIPT:\n        e3.options.scriptingEnabled ? je(e3, t2) : Je(e3, t2);\n        break;\n      case S.PLAINTEXT:\n        !function (e4, t3) {\n          e4.openElements.hasInButtonScope(S.P) && e4._closePElement(), e4._insertElement(t3, u.HTML), e4.tokenizer.state = k.PLAINTEXT;\n        }(e3, t2);\n        break;\n      case S.COL:\n      case S.TH:\n      case S.TD:\n      case S.TR:\n      case S.HEAD:\n      case S.FRAME:\n      case S.TBODY:\n      case S.TFOOT:\n      case S.THEAD:\n      case S.CAPTION:\n      case S.COLGROUP:\n        break;\n      default:\n        Je(e3, t2);\n    }\n  }\n  function $e(e3, t2) {\n    const s2 = t2.tagName,\n      a2 = t2.tagID;\n    for (let t3 = e3.openElements.stackTop; t3 > 0; t3--) {\n      const r2 = e3.openElements.items[t3],\n        n2 = e3.openElements.tagIDs[t3];\n      if (a2 === n2 && (a2 !== S.UNKNOWN || e3.treeAdapter.getTagName(r2) === s2)) {\n        e3.openElements.generateImpliedEndTagsWithExclusion(a2), e3.openElements.stackTop >= t3 && e3.openElements.shortenToLength(t3);\n        break;\n      }\n      if (e3._isSpecialElement(r2, n2)) break;\n    }\n  }\n  function et(e3, t2) {\n    switch (t2.tagID) {\n      case S.A:\n      case S.B:\n      case S.I:\n      case S.S:\n      case S.U:\n      case S.EM:\n      case S.TT:\n      case S.BIG:\n      case S.CODE:\n      case S.FONT:\n      case S.NOBR:\n      case S.SMALL:\n      case S.STRIKE:\n      case S.STRONG:\n        He(e3, t2);\n        break;\n      case S.P:\n        !function (e4) {\n          e4.openElements.hasInButtonScope(S.P) || e4._insertFakeElement(C.P, S.P), e4._closePElement();\n        }(e3);\n        break;\n      case S.DL:\n      case S.UL:\n      case S.OL:\n      case S.DIR:\n      case S.DIV:\n      case S.NAV:\n      case S.PRE:\n      case S.MAIN:\n      case S.MENU:\n      case S.ASIDE:\n      case S.BUTTON:\n      case S.CENTER:\n      case S.FIGURE:\n      case S.FOOTER:\n      case S.HEADER:\n      case S.HGROUP:\n      case S.DIALOG:\n      case S.ADDRESS:\n      case S.ARTICLE:\n      case S.DETAILS:\n      case S.SECTION:\n      case S.SUMMARY:\n      case S.LISTING:\n      case S.FIELDSET:\n      case S.BLOCKQUOTE:\n      case S.FIGCAPTION:\n        !function (e4, t3) {\n          const s2 = t3.tagID;\n          e4.openElements.hasInScope(s2) && (e4.openElements.generateImpliedEndTags(), e4.openElements.popUntilTagNamePopped(s2));\n        }(e3, t2);\n        break;\n      case S.LI:\n        !function (e4) {\n          e4.openElements.hasInListItemScope(S.LI) && (e4.openElements.generateImpliedEndTagsWithExclusion(S.LI), e4.openElements.popUntilTagNamePopped(S.LI));\n        }(e3);\n        break;\n      case S.DD:\n      case S.DT:\n        !function (e4, t3) {\n          const s2 = t3.tagID;\n          e4.openElements.hasInScope(s2) && (e4.openElements.generateImpliedEndTagsWithExclusion(s2), e4.openElements.popUntilTagNamePopped(s2));\n        }(e3, t2);\n        break;\n      case S.H1:\n      case S.H2:\n      case S.H3:\n      case S.H4:\n      case S.H5:\n      case S.H6:\n        !function (e4) {\n          e4.openElements.hasNumberedHeaderInScope() && (e4.openElements.generateImpliedEndTags(), e4.openElements.popUntilNumberedHeaderPopped());\n        }(e3);\n        break;\n      case S.BR:\n        !function (e4) {\n          e4._reconstructActiveFormattingElements(), e4._insertFakeElement(C.BR, S.BR), e4.openElements.pop(), e4.framesetOk = false;\n        }(e3);\n        break;\n      case S.BODY:\n        !function (e4, t3) {\n          if (e4.openElements.hasInScope(S.BODY) && (e4.insertionMode = De.AFTER_BODY, e4.options.sourceCodeLocationInfo)) {\n            const s2 = e4.openElements.tryPeekProperlyNestedBodyElement();\n            s2 && e4._setEndLocation(s2, t3);\n          }\n        }(e3, t2);\n        break;\n      case S.HTML:\n        !function (e4, t3) {\n          e4.openElements.hasInScope(S.BODY) && (e4.insertionMode = De.AFTER_BODY, Nt(e4, t3));\n        }(e3, t2);\n        break;\n      case S.FORM:\n        !function (e4) {\n          const t3 = e4.openElements.tmplCount > 0,\n            {\n              formElement: s2\n            } = e4;\n          t3 || (e4.formElement = null), (s2 || t3) && e4.openElements.hasInScope(S.FORM) && (e4.openElements.generateImpliedEndTags(), t3 ? e4.openElements.popUntilTagNamePopped(S.FORM) : s2 && e4.openElements.remove(s2));\n        }(e3);\n        break;\n      case S.APPLET:\n      case S.OBJECT:\n      case S.MARQUEE:\n        !function (e4, t3) {\n          const s2 = t3.tagID;\n          e4.openElements.hasInScope(s2) && (e4.openElements.generateImpliedEndTags(), e4.openElements.popUntilTagNamePopped(s2), e4.activeFormattingElements.clearToLastMarker());\n        }(e3, t2);\n        break;\n      case S.TEMPLATE:\n        Ye(e3, t2);\n        break;\n      default:\n        $e(e3, t2);\n    }\n  }\n  function tt(e3, t2) {\n    e3.tmplInsertionModeStack.length > 0 ? ut(e3, t2) : Ue(e3, t2);\n  }\n  function st(e3, t2) {\n    if (Oe.has(e3.openElements.currentTagId)) switch (e3.pendingCharacterTokens.length = 0, e3.hasNonWhitespacePendingCharacterToken = false, e3.originalInsertionMode = e3.insertionMode, e3.insertionMode = De.IN_TABLE_TEXT, t2.type) {\n      case h.CHARACTER:\n        ot(e3, t2);\n        break;\n      case h.WHITESPACE_CHARACTER:\n        it(e3, t2);\n    } else nt(e3, t2);\n  }\n  function at(e3, t2) {\n    switch (t2.tagID) {\n      case S.TD:\n      case S.TH:\n      case S.TR:\n        !function (e4, t3) {\n          e4.openElements.clearBackToTableContext(), e4._insertFakeElement(C.TBODY, S.TBODY), e4.insertionMode = De.IN_TABLE_BODY, _t(e4, t3);\n        }(e3, t2);\n        break;\n      case S.STYLE:\n      case S.SCRIPT:\n      case S.TEMPLATE:\n        xe(e3, t2);\n        break;\n      case S.COL:\n        !function (e4, t3) {\n          e4.openElements.clearBackToTableContext(), e4._insertFakeElement(C.COLGROUP, S.COLGROUP), e4.insertionMode = De.IN_COLUMN_GROUP, Tt(e4, t3);\n        }(e3, t2);\n        break;\n      case S.FORM:\n        !function (e4, t3) {\n          e4.formElement || 0 !== e4.openElements.tmplCount || (e4._insertElement(t3, u.HTML), e4.formElement = e4.openElements.current, e4.openElements.pop());\n        }(e3, t2);\n        break;\n      case S.TABLE:\n        !function (e4, t3) {\n          e4.openElements.hasInTableScope(S.TABLE) && (e4.openElements.popUntilTagNamePopped(S.TABLE), e4._resetInsertionMode(), e4._processStartTag(t3));\n        }(e3, t2);\n        break;\n      case S.TBODY:\n      case S.TFOOT:\n      case S.THEAD:\n        !function (e4, t3) {\n          e4.openElements.clearBackToTableContext(), e4._insertElement(t3, u.HTML), e4.insertionMode = De.IN_TABLE_BODY;\n        }(e3, t2);\n        break;\n      case S.INPUT:\n        !function (e4, t3) {\n          ze(t3) ? e4._appendElement(t3, u.HTML) : nt(e4, t3), t3.ackSelfClosing = true;\n        }(e3, t2);\n        break;\n      case S.CAPTION:\n        !function (e4, t3) {\n          e4.openElements.clearBackToTableContext(), e4.activeFormattingElements.insertMarker(), e4._insertElement(t3, u.HTML), e4.insertionMode = De.IN_CAPTION;\n        }(e3, t2);\n        break;\n      case S.COLGROUP:\n        !function (e4, t3) {\n          e4.openElements.clearBackToTableContext(), e4._insertElement(t3, u.HTML), e4.insertionMode = De.IN_COLUMN_GROUP;\n        }(e3, t2);\n        break;\n      default:\n        nt(e3, t2);\n    }\n  }\n  function rt(e3, t2) {\n    switch (t2.tagID) {\n      case S.TABLE:\n        e3.openElements.hasInTableScope(S.TABLE) && (e3.openElements.popUntilTagNamePopped(S.TABLE), e3._resetInsertionMode());\n        break;\n      case S.TEMPLATE:\n        Ye(e3, t2);\n        break;\n      case S.BODY:\n      case S.CAPTION:\n      case S.COL:\n      case S.COLGROUP:\n      case S.HTML:\n      case S.TBODY:\n      case S.TD:\n      case S.TFOOT:\n      case S.TH:\n      case S.THEAD:\n      case S.TR:\n        break;\n      default:\n        nt(e3, t2);\n    }\n  }\n  function nt(e3, t2) {\n    const s2 = e3.fosterParentingEnabled;\n    e3.fosterParentingEnabled = true, We(e3, t2), e3.fosterParentingEnabled = s2;\n  }\n  function it(e3, t2) {\n    e3.pendingCharacterTokens.push(t2);\n  }\n  function ot(e3, t2) {\n    e3.pendingCharacterTokens.push(t2), e3.hasNonWhitespacePendingCharacterToken = true;\n  }\n  function ct(e3, t2) {\n    let s2 = 0;\n    if (e3.hasNonWhitespacePendingCharacterToken) for (; s2 < e3.pendingCharacterTokens.length; s2++) nt(e3, e3.pendingCharacterTokens[s2]);else for (; s2 < e3.pendingCharacterTokens.length; s2++) e3._insertCharacters(e3.pendingCharacterTokens[s2]);\n    e3.insertionMode = e3.originalInsertionMode, e3._processToken(t2);\n  }\n  const Et = /* @__PURE__ */new Set([S.CAPTION, S.COL, S.COLGROUP, S.TBODY, S.TD, S.TFOOT, S.TH, S.THEAD, S.TR]);\n  function Tt(e3, t2) {\n    switch (t2.tagID) {\n      case S.HTML:\n        Ze(e3, t2);\n        break;\n      case S.COL:\n        e3._appendElement(t2, u.HTML), t2.ackSelfClosing = true;\n        break;\n      case S.TEMPLATE:\n        xe(e3, t2);\n        break;\n      default:\n        ht(e3, t2);\n    }\n  }\n  function ht(e3, t2) {\n    e3.openElements.currentTagId === S.COLGROUP && (e3.openElements.pop(), e3.insertionMode = De.IN_TABLE, e3._processToken(t2));\n  }\n  function _t(e3, t2) {\n    switch (t2.tagID) {\n      case S.TR:\n        e3.openElements.clearBackToTableBodyContext(), e3._insertElement(t2, u.HTML), e3.insertionMode = De.IN_ROW;\n        break;\n      case S.TH:\n      case S.TD:\n        e3.openElements.clearBackToTableBodyContext(), e3._insertFakeElement(C.TR, S.TR), e3.insertionMode = De.IN_ROW, lt(e3, t2);\n        break;\n      case S.CAPTION:\n      case S.COL:\n      case S.COLGROUP:\n      case S.TBODY:\n      case S.TFOOT:\n      case S.THEAD:\n        e3.openElements.hasTableBodyContextInTableScope() && (e3.openElements.clearBackToTableBodyContext(), e3.openElements.pop(), e3.insertionMode = De.IN_TABLE, at(e3, t2));\n        break;\n      default:\n        at(e3, t2);\n    }\n  }\n  function At(e3, t2) {\n    const s2 = t2.tagID;\n    switch (t2.tagID) {\n      case S.TBODY:\n      case S.TFOOT:\n      case S.THEAD:\n        e3.openElements.hasInTableScope(s2) && (e3.openElements.clearBackToTableBodyContext(), e3.openElements.pop(), e3.insertionMode = De.IN_TABLE);\n        break;\n      case S.TABLE:\n        e3.openElements.hasTableBodyContextInTableScope() && (e3.openElements.clearBackToTableBodyContext(), e3.openElements.pop(), e3.insertionMode = De.IN_TABLE, rt(e3, t2));\n        break;\n      case S.BODY:\n      case S.CAPTION:\n      case S.COL:\n      case S.COLGROUP:\n      case S.HTML:\n      case S.TD:\n      case S.TH:\n      case S.TR:\n        break;\n      default:\n        rt(e3, t2);\n    }\n  }\n  function lt(e3, t2) {\n    switch (t2.tagID) {\n      case S.TH:\n      case S.TD:\n        e3.openElements.clearBackToTableRowContext(), e3._insertElement(t2, u.HTML), e3.insertionMode = De.IN_CELL, e3.activeFormattingElements.insertMarker();\n        break;\n      case S.CAPTION:\n      case S.COL:\n      case S.COLGROUP:\n      case S.TBODY:\n      case S.TFOOT:\n      case S.THEAD:\n      case S.TR:\n        e3.openElements.hasInTableScope(S.TR) && (e3.openElements.clearBackToTableRowContext(), e3.openElements.pop(), e3.insertionMode = De.IN_TABLE_BODY, _t(e3, t2));\n        break;\n      default:\n        at(e3, t2);\n    }\n  }\n  function mt(e3, t2) {\n    switch (t2.tagID) {\n      case S.TR:\n        e3.openElements.hasInTableScope(S.TR) && (e3.openElements.clearBackToTableRowContext(), e3.openElements.pop(), e3.insertionMode = De.IN_TABLE_BODY);\n        break;\n      case S.TABLE:\n        e3.openElements.hasInTableScope(S.TR) && (e3.openElements.clearBackToTableRowContext(), e3.openElements.pop(), e3.insertionMode = De.IN_TABLE_BODY, At(e3, t2));\n        break;\n      case S.TBODY:\n      case S.TFOOT:\n      case S.THEAD:\n        (e3.openElements.hasInTableScope(t2.tagID) || e3.openElements.hasInTableScope(S.TR)) && (e3.openElements.clearBackToTableRowContext(), e3.openElements.pop(), e3.insertionMode = De.IN_TABLE_BODY, At(e3, t2));\n        break;\n      case S.BODY:\n      case S.CAPTION:\n      case S.COL:\n      case S.COLGROUP:\n      case S.HTML:\n      case S.TD:\n      case S.TH:\n        break;\n      default:\n        rt(e3, t2);\n    }\n  }\n  function dt(e3, t2) {\n    switch (t2.tagID) {\n      case S.HTML:\n        Ze(e3, t2);\n        break;\n      case S.OPTION:\n        e3.openElements.currentTagId === S.OPTION && e3.openElements.pop(), e3._insertElement(t2, u.HTML);\n        break;\n      case S.OPTGROUP:\n        e3.openElements.currentTagId === S.OPTION && e3.openElements.pop(), e3.openElements.currentTagId === S.OPTGROUP && e3.openElements.pop(), e3._insertElement(t2, u.HTML);\n        break;\n      case S.INPUT:\n      case S.KEYGEN:\n      case S.TEXTAREA:\n      case S.SELECT:\n        e3.openElements.hasInSelectScope(S.SELECT) && (e3.openElements.popUntilTagNamePopped(S.SELECT), e3._resetInsertionMode(), t2.tagID !== S.SELECT && e3._processStartTag(t2));\n        break;\n      case S.SCRIPT:\n      case S.TEMPLATE:\n        xe(e3, t2);\n    }\n  }\n  function pt(e3, t2) {\n    switch (t2.tagID) {\n      case S.OPTGROUP:\n        e3.openElements.stackTop > 0 && e3.openElements.currentTagId === S.OPTION && e3.openElements.tagIDs[e3.openElements.stackTop - 1] === S.OPTGROUP && e3.openElements.pop(), e3.openElements.currentTagId === S.OPTGROUP && e3.openElements.pop();\n        break;\n      case S.OPTION:\n        e3.openElements.currentTagId === S.OPTION && e3.openElements.pop();\n        break;\n      case S.SELECT:\n        e3.openElements.hasInSelectScope(S.SELECT) && (e3.openElements.popUntilTagNamePopped(S.SELECT), e3._resetInsertionMode());\n        break;\n      case S.TEMPLATE:\n        Ye(e3, t2);\n    }\n  }\n  function ut(e3, t2) {\n    e3.openElements.tmplCount > 0 ? (e3.openElements.popUntilTagNamePopped(S.TEMPLATE), e3.activeFormattingElements.clearToLastMarker(), e3.tmplInsertionModeStack.shift(), e3._resetInsertionMode(), e3.onEof(t2)) : Ue(e3, t2);\n  }\n  function Nt(e3, t2) {\n    var s2;\n    if (t2.tagID === S.HTML) {\n      if (e3.fragmentContext || (e3.insertionMode = De.AFTER_AFTER_BODY), e3.options.sourceCodeLocationInfo && e3.openElements.tagIDs[0] === S.HTML) {\n        e3._setEndLocation(e3.openElements.items[0], t2);\n        const a2 = e3.openElements.items[1];\n        a2 && !(null === (s2 = e3.treeAdapter.getNodeSourceCodeLocation(a2)) || void 0 === s2 ? void 0 : s2.endTag) && e3._setEndLocation(a2, t2);\n      }\n    } else It(e3, t2);\n  }\n  function It(e3, t2) {\n    e3.insertionMode = De.IN_BODY, We(e3, t2);\n  }\n  function Ct(e3, t2) {\n    e3.insertionMode = De.IN_BODY, We(e3, t2);\n  }\n  function St(e3) {\n    for (; e3.treeAdapter.getNamespaceURI(e3.openElements.current) !== u.HTML && !e3._isIntegrationPoint(e3.openElements.currentTagId, e3.openElements.current);) e3.openElements.pop();\n  }\n  return /* @__PURE__ */new Set([C.AREA, C.BASE, C.BASEFONT, C.BGSOUND, C.BR, C.COL, C.EMBED, C.FRAME, C.HR, C.IMG, C.INPUT, C.KEYGEN, C.LINK, C.META, C.PARAM, C.SOURCE, C.TRACK, C.WBR]), e2.parse = function (e3, t2) {\n    return Le.parse(e3, t2);\n  }, e2.parseFragment = function (e3, t2, s2) {\n    \"string\" == typeof e3 && (s2 = t2, t2 = e3, e3 = null);\n    const a2 = Le.getFragmentParser(e3, s2);\n    return a2.tokenizer.write(t2, true), a2.getFragment();\n  }, Object.defineProperty(e2, \"__esModule\", {\n    value: true\n  }), e2;\n}({});\nvar parse = e.parse;\nvar parseFragment = e.parseFragment;\n\n// src/mock-doc/parse-util.ts\nvar docParser = /* @__PURE__ */new WeakMap();\nfunction parseDocumentUtil(ownerDocument, html) {\n  const doc = parse(html.trim(), getParser(ownerDocument));\n  doc.documentElement = doc.firstElementChild;\n  doc.head = doc.documentElement.firstElementChild;\n  doc.body = doc.head.nextElementSibling;\n  return doc;\n}\nfunction parseFragmentUtil(ownerDocument, html) {\n  if (typeof html === \"string\") {\n    html = html.trim();\n  } else {\n    html = \"\";\n  }\n  const frag = parseFragment(html, getParser(ownerDocument));\n  return frag;\n}\nfunction getParser(ownerDocument) {\n  let parseOptions = docParser.get(ownerDocument);\n  if (parseOptions != null) {\n    return parseOptions;\n  }\n  const treeAdapter = {\n    createDocument() {\n      const doc = ownerDocument.createElement(\"#document\" /* DOCUMENT_NODE */);\n      doc[\"x-mode\"] = \"no-quirks\";\n      return doc;\n    },\n    setNodeSourceCodeLocation(node, location2) {\n      node.sourceCodeLocation = location2;\n    },\n    getNodeSourceCodeLocation(node) {\n      return node.sourceCodeLocation;\n    },\n    createDocumentFragment() {\n      return ownerDocument.createDocumentFragment();\n    },\n    createElement(tagName, namespaceURI, attrs) {\n      const elm = ownerDocument.createElementNS(namespaceURI, tagName);\n      for (let i = 0; i < attrs.length; i++) {\n        const attr = attrs[i];\n        if (attr.namespace == null || attr.namespace === \"http://www.w3.org/1999/xhtml\") {\n          elm.setAttribute(attr.name, attr.value);\n        } else {\n          elm.setAttributeNS(attr.namespace, attr.name, attr.value);\n        }\n      }\n      return elm;\n    },\n    createCommentNode(data) {\n      return ownerDocument.createComment(data);\n    },\n    appendChild(parentNode, newNode) {\n      parentNode.appendChild(newNode);\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n      parentNode.insertBefore(newNode, referenceNode);\n    },\n    setTemplateContent(templateElement, contentElement) {\n      templateElement.content = contentElement;\n    },\n    getTemplateContent(templateElement) {\n      return templateElement.content;\n    },\n    setDocumentType(doc, name, publicId, systemId) {\n      let doctypeNode = doc.childNodes.find(n => n.nodeType === 10 /* DOCUMENT_TYPE_NODE */);\n      if (doctypeNode == null) {\n        doctypeNode = ownerDocument.createDocumentTypeNode();\n        doc.insertBefore(doctypeNode, doc.firstChild);\n      }\n      doctypeNode.nodeValue = \"!DOCTYPE\";\n      doctypeNode[\"x-name\"] = name;\n      doctypeNode[\"x-publicId\"] = publicId;\n      doctypeNode[\"x-systemId\"] = systemId;\n    },\n    setDocumentMode(doc, mode) {\n      doc[\"x-mode\"] = mode;\n    },\n    getDocumentMode(doc) {\n      return doc[\"x-mode\"];\n    },\n    detachNode(node) {\n      node.remove();\n    },\n    insertText(parentNode, text) {\n      const lastChild = parentNode.lastChild;\n      if (lastChild != null && lastChild.nodeType === 3 /* TEXT_NODE */) {\n        lastChild.nodeValue += text;\n      } else {\n        parentNode.appendChild(ownerDocument.createTextNode(text));\n      }\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n      const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n      if (prevNode != null && prevNode.nodeType === 3 /* TEXT_NODE */) {\n        prevNode.nodeValue += text;\n      } else {\n        parentNode.insertBefore(ownerDocument.createTextNode(text), referenceNode);\n      }\n    },\n    adoptAttributes(recipient, attrs) {\n      for (let i = 0; i < attrs.length; i++) {\n        const attr = attrs[i];\n        if (recipient.hasAttributeNS(attr.namespace, attr.name) === false) {\n          recipient.setAttributeNS(attr.namespace, attr.name, attr.value);\n        }\n      }\n    },\n    getFirstChild(node) {\n      return node.childNodes[0];\n    },\n    getChildNodes(node) {\n      return node.childNodes;\n    },\n    getParentNode(node) {\n      return node.parentNode;\n    },\n    getAttrList(element) {\n      const attrs = element.attributes.__items.map(attr => {\n        return {\n          name: attr.name,\n          value: attr.value,\n          namespace: attr.namespaceURI,\n          prefix: null\n        };\n      });\n      return attrs;\n    },\n    getTagName(element) {\n      if (element.namespaceURI === \"http://www.w3.org/1999/xhtml\") {\n        return element.nodeName.toLowerCase();\n      } else {\n        return element.nodeName;\n      }\n    },\n    getNamespaceURI(element) {\n      return element.namespaceURI;\n    },\n    getTextNodeContent(textNode) {\n      return textNode.nodeValue;\n    },\n    getCommentNodeContent(commentNode) {\n      return commentNode.nodeValue;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n      return doctypeNode[\"x-name\"];\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n      return doctypeNode[\"x-publicId\"];\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n      return doctypeNode[\"x-systemId\"];\n    },\n    // @ts-ignore - a `MockNode` will never be assignable to a `TreeAdapterTypeMap['text']`. As a result, we cannot\n    // complete this function signature\n    isTextNode(node) {\n      return node.nodeType === 3 /* TEXT_NODE */;\n    },\n    // @ts-ignore - a `MockNode` will never be assignable to a `TreeAdapterTypeMap['comment']`. As a result, we cannot\n    // complete this function signature (which requires its return type to be a type predicate)\n    isCommentNode(node) {\n      return node.nodeType === 8 /* COMMENT_NODE */;\n    },\n    // @ts-ignore - a `MockNode` will never be assignable to a `TreeAdapterTypeMap['document']`. As a result, we cannot\n    // complete this function signature (which requires its return type to be a type predicate)\n    isDocumentTypeNode(node) {\n      return node.nodeType === 10 /* DOCUMENT_TYPE_NODE */;\n    },\n    // @ts-ignore - a `MockNode` will never be assignable to a `TreeAdapterTypeMap['element']`. As a result, we cannot\n    // complete this function signature (which requires its return type to be a type predicate)\n    isElementNode(node) {\n      return node.nodeType === 1 /* ELEMENT_NODE */;\n    }\n  };\n  parseOptions = {\n    treeAdapter\n  };\n  docParser.set(ownerDocument, parseOptions);\n  return parseOptions;\n}\n\n// src/mock-doc/third-party/jquery.ts\nvar jquery_default =\n/*!\n* jQuery JavaScript Library v4.0.0-pre+9352011a7.dirty +selector\n* https://jquery.com/\n*\n* Copyright OpenJS Foundation and other contributors\n* Released under the MIT license\n* https://jquery.org/license\n*\n* Date: 2023-12-11T17:55Z\n*/\nfunction (global2, factory) {\n  \"use strict\";\n\n  if (true) {\n    return factory(global2, true);\n  } else {\n    factory(global2);\n  }\n}({\n  document: {\n    createElement() {\n      return {};\n    },\n    nodeType: 9,\n    documentElement: {\n      nodeType: 1,\n      nodeName: \"HTML\"\n    }\n  }\n}, function (window2, noGlobal) {\n  \"use strict\";\n\n  if (!window2.document) {\n    throw new Error(\"jQuery requires a window with a document\");\n  }\n  var arr = [];\n  var getProto = Object.getPrototypeOf;\n  var slice = arr.slice;\n  var flat = arr.flat ? function (array) {\n    return arr.flat.call(array);\n  } : function (array) {\n    return arr.concat.apply([], array);\n  };\n  var push = arr.push;\n  var indexOf = arr.indexOf;\n  var class2type = {};\n  var toString = class2type.toString;\n  var hasOwn = class2type.hasOwnProperty;\n  var fnToString = hasOwn.toString;\n  var ObjectFunctionString = fnToString.call(Object);\n  var support = {};\n  function toType(obj) {\n    if (obj == null) {\n      return obj + \"\";\n    }\n    return typeof obj === \"object\" ? class2type[toString.call(obj)] || \"object\" : typeof obj;\n  }\n  function isWindow(obj) {\n    return obj != null && obj === obj.window;\n  }\n  function isArrayLike(obj) {\n    var length = !!obj && obj.length,\n      type = toType(obj);\n    if (typeof obj === \"function\" || isWindow(obj)) {\n      return false;\n    }\n    return type === \"array\" || length === 0 || typeof length === \"number\" && length > 0 && length - 1 in obj;\n  }\n  var document = window2.document;\n  var preservedScriptAttributes = {\n    type: true,\n    src: true,\n    nonce: true,\n    noModule: true\n  };\n  function DOMEval(code, node, doc) {\n    doc = doc || document;\n    var i2,\n      script = doc.createElement(\"script\");\n    script.text = code;\n    if (node) {\n      for (i2 in preservedScriptAttributes) {\n        if (node[i2]) {\n          script[i2] = node[i2];\n        }\n      }\n    }\n    doc.head.appendChild(script).parentNode.removeChild(script);\n  }\n  const jQuery = {};\n  var version = \"4.0.0-pre+9352011a7.dirty +selector\",\n    rhtmlSuffix = /HTML$/i,\n    jQueryOrig = function (selector, context) {\n      return new jQuery.fn.init(selector, context);\n    };\n  jQuery.fn = jQuery.prototype = {\n    // The current version of jQuery being used\n    jquery: version,\n    constructor: jQuery,\n    // The default length of a jQuery object is 0\n    length: 0,\n    toArray: function () {\n      return slice.call(this);\n    },\n    // Get the Nth element in the matched element set OR\n    // Get the whole matched element set as a clean array\n    get: function (num) {\n      if (num == null) {\n        return slice.call(this);\n      }\n      return num < 0 ? this[num + this.length] : this[num];\n    },\n    // Take an array of elements and push it onto the stack\n    // (returning the new matched element set)\n    pushStack: function (elems) {\n      var ret = jQuery.merge(this.constructor(), elems);\n      ret.prevObject = this;\n      return ret;\n    },\n    // Execute a callback for every element in the matched set.\n    each: function (callback) {\n      return jQuery.each(this, callback);\n    },\n    map: function (callback) {\n      return this.pushStack(jQuery.map(this, function (elem, i2) {\n        return callback.call(elem, i2, elem);\n      }));\n    },\n    slice: function () {\n      return this.pushStack(slice.apply(this, arguments));\n    },\n    first: function () {\n      return this.eq(0);\n    },\n    last: function () {\n      return this.eq(-1);\n    },\n    even: function () {\n      return this.pushStack(jQuery.grep(this, function (_elem, i2) {\n        return (i2 + 1) % 2;\n      }));\n    },\n    odd: function () {\n      return this.pushStack(jQuery.grep(this, function (_elem, i2) {\n        return i2 % 2;\n      }));\n    },\n    eq: function (i2) {\n      var len = this.length,\n        j = +i2 + (i2 < 0 ? len : 0);\n      return this.pushStack(j >= 0 && j < len ? [this[j]] : []);\n    },\n    end: function () {\n      return this.prevObject || this.constructor();\n    }\n  };\n  jQuery.extend = jQuery.fn.extend = function () {\n    var options,\n      name,\n      src,\n      copy,\n      copyIsArray,\n      clone,\n      target = arguments[0] || {},\n      i2 = 1,\n      length = arguments.length,\n      deep = false;\n    if (typeof target === \"boolean\") {\n      deep = target;\n      target = arguments[i2] || {};\n      i2++;\n    }\n    if (typeof target !== \"object\" && typeof target !== \"function\") {\n      target = {};\n    }\n    if (i2 === length) {\n      target = this;\n      i2--;\n    }\n    for (; i2 < length; i2++) {\n      if ((options = arguments[i2]) != null) {\n        for (name in options) {\n          copy = options[name];\n          if (name === \"__proto__\" || target === copy) {\n            continue;\n          }\n          if (deep && copy && (jQuery.isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {\n            src = target[name];\n            if (copyIsArray && !Array.isArray(src)) {\n              clone = [];\n            } else if (!copyIsArray && !jQuery.isPlainObject(src)) {\n              clone = {};\n            } else {\n              clone = src;\n            }\n            copyIsArray = false;\n            target[name] = jQuery.extend(deep, clone, copy);\n          } else if (copy !== void 0) {\n            target[name] = copy;\n          }\n        }\n      }\n    }\n    return target;\n  };\n  jQuery.extend({\n    // Unique for each copy of jQuery on the page\n    expando: \"jQuery\" + (version + Math.random()).replace(/\\D/g, \"\"),\n    // Assume jQuery is ready without the ready module\n    isReady: true,\n    error: function (msg) {\n      throw new Error(msg);\n    },\n    noop: function () {},\n    isPlainObject: function (obj) {\n      var proto, Ctor;\n      if (!obj || toString.call(obj) !== \"[object Object]\") {\n        return false;\n      }\n      proto = getProto(obj);\n      if (!proto) {\n        return true;\n      }\n      Ctor = hasOwn.call(proto, \"constructor\") && proto.constructor;\n      return typeof Ctor === \"function\" && fnToString.call(Ctor) === ObjectFunctionString;\n    },\n    isEmptyObject: function (obj) {\n      var name;\n      for (name in obj) {\n        return false;\n      }\n      return true;\n    },\n    // Evaluates a script in a provided context; falls back to the global one\n    // if not specified.\n    globalEval: function (code, options, doc) {\n      DOMEval(code, {\n        nonce: options && options.nonce\n      }, doc);\n    },\n    each: function (obj, callback) {\n      var length,\n        i2 = 0;\n      if (isArrayLike(obj)) {\n        length = obj.length;\n        for (; i2 < length; i2++) {\n          if (callback.call(obj[i2], i2, obj[i2]) === false) {\n            break;\n          }\n        }\n      } else {\n        for (i2 in obj) {\n          if (callback.call(obj[i2], i2, obj[i2]) === false) {\n            break;\n          }\n        }\n      }\n      return obj;\n    },\n    // Retrieve the text value of an array of DOM nodes\n    text: function (elem) {\n      var node,\n        ret = \"\",\n        i2 = 0,\n        nodeType = elem.nodeType;\n      if (!nodeType) {\n        while (node = elem[i2++]) {\n          ret += jQuery.text(node);\n        }\n      }\n      if (nodeType === 1 || nodeType === 11) {\n        return elem.textContent;\n      }\n      if (nodeType === 9) {\n        return elem.documentElement.textContent;\n      }\n      if (nodeType === 3 || nodeType === 4) {\n        return elem.nodeValue;\n      }\n      return ret;\n    },\n    // results is for internal usage only\n    makeArray: function (arr2, results) {\n      var ret = results || [];\n      if (arr2 != null) {\n        if (isArrayLike(Object(arr2))) {\n          jQuery.merge(ret, typeof arr2 === \"string\" ? [arr2] : arr2);\n        } else {\n          push.call(ret, arr2);\n        }\n      }\n      return ret;\n    },\n    inArray: function (elem, arr2, i2) {\n      return arr2 == null ? -1 : indexOf.call(arr2, elem, i2);\n    },\n    isXMLDoc: function (elem) {\n      var namespace = elem && elem.namespaceURI,\n        docElem = elem && (elem.ownerDocument || elem).documentElement;\n      return !rhtmlSuffix.test(namespace || docElem && docElem.nodeName || \"HTML\");\n    },\n    // Note: an element does not contain itself\n    contains: function (a, b) {\n      var bup = b && b.parentNode;\n      return a === bup || !!(bup && bup.nodeType === 1 && (\n      // Support: IE 9 - 11+\n      // IE doesn't have `contains` on SVG.\n      a.contains ? a.contains(bup) : a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16));\n    },\n    merge: function (first, second) {\n      var len = +second.length,\n        j = 0,\n        i2 = first.length;\n      for (; j < len; j++) {\n        first[i2++] = second[j];\n      }\n      first.length = i2;\n      return first;\n    },\n    grep: function (elems, callback, invert) {\n      var callbackInverse,\n        matches3 = [],\n        i2 = 0,\n        length = elems.length,\n        callbackExpect = !invert;\n      for (; i2 < length; i2++) {\n        callbackInverse = !callback(elems[i2], i2);\n        if (callbackInverse !== callbackExpect) {\n          matches3.push(elems[i2]);\n        }\n      }\n      return matches3;\n    },\n    // arg is for internal usage only\n    map: function (elems, callback, arg) {\n      var length,\n        value,\n        i2 = 0,\n        ret = [];\n      if (isArrayLike(elems)) {\n        length = elems.length;\n        for (; i2 < length; i2++) {\n          value = callback(elems[i2], i2, arg);\n          if (value != null) {\n            ret.push(value);\n          }\n        }\n      } else {\n        for (i2 in elems) {\n          value = callback(elems[i2], i2, arg);\n          if (value != null) {\n            ret.push(value);\n          }\n        }\n      }\n      return flat(ret);\n    },\n    // A global GUID counter for objects\n    guid: 1,\n    // jQuery.support is not used in Core but other projects attach their\n    // properties to it so it needs to exist.\n    support\n  });\n  if (typeof Symbol === \"function\") {\n    jQuery.fn[Symbol.iterator] = arr[Symbol.iterator];\n  }\n  jQuery.each(\"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \"), function (_i, name) {\n    class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\n  });\n  function nodeName(elem, name) {\n    return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n  }\n  var pop = arr.pop;\n  var whitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\";\n  var isIE = document.documentMode;\n  try {\n    document.querySelector(\":has(*,:jqfake)\");\n    support.cssHas = false;\n  } catch (e2) {\n    support.cssHas = true;\n  }\n  var rbuggyQSA = [];\n  if (isIE) {\n    rbuggyQSA.push(\n    // Support: IE 9 - 11+\n    // IE's :disabled selector does not pick up the children of disabled fieldsets\n    \":enabled\", \":disabled\",\n    // Support: IE 11+\n    // IE 11 doesn't find elements on a `[name='']` query in some cases.\n    // Adding a temporary attribute to the document before the selection works\n    // around the issue.\n    \"\\\\[\" + whitespace + \"*name\" + whitespace + \"*=\" + whitespace + `*(?:''|\"\")`);\n  }\n  if (!support.cssHas) {\n    rbuggyQSA.push(\":has\");\n  }\n  rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join(\"|\"));\n  var rtrimCSS = new RegExp(\"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\");\n  var identifier = \"(?:\\\\\\\\[\\\\da-fA-F]{1,6}\" + whitespace + \"?|\\\\\\\\[^\\\\r\\\\n\\\\f]|[\\\\w-]|[^\\0-\\\\x7f])+\";\n  var booleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\";\n  var rleadingCombinator = new RegExp(\"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\");\n  var rdescend = new RegExp(whitespace + \"|>\");\n  var rsibling = /[+~]/;\n  var documentElement = document.documentElement;\n  var matches2 = documentElement.matches || documentElement.msMatchesSelector;\n  function createCache() {\n    var keys = [];\n    function cache(key, value) {\n      if (keys.push(key + \" \") > jQuery.expr.cacheLength) {\n        delete cache[keys.shift()];\n      }\n      return cache[key + \" \"] = value;\n    }\n    return cache;\n  }\n  function testContext(context) {\n    return context && typeof context.getElementsByTagName !== \"undefined\" && context;\n  }\n  var attributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace +\n  // Operator (capture 2)\n  \"*([*^$|!~]?=)\" + whitespace +\n  // \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\n  `*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\"((?:\\\\\\\\.|[^\\\\\\\\\"])*)\"|(` + identifier + \"))|)\" + whitespace + \"*\\\\]\";\n  var pseudos = \":(\" + identifier + `)(?:\\\\((('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\"((?:\\\\\\\\.|[^\\\\\\\\\"])*)\")|((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|` + attributes + \")*)|.*)\\\\)|)\";\n  var filterMatchExpr = {\n    ID: new RegExp(\"^#(\" + identifier + \")\"),\n    CLASS: new RegExp(\"^\\\\.(\" + identifier + \")\"),\n    TAG: new RegExp(\"^(\" + identifier + \"|[*])\"),\n    ATTR: new RegExp(\"^\" + attributes),\n    PSEUDO: new RegExp(\"^\" + pseudos),\n    CHILD: new RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace + \"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace + \"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\")\n  };\n  var rpseudo = new RegExp(pseudos);\n  var runescape = new RegExp(\"\\\\\\\\[\\\\da-fA-F]{1,6}\" + whitespace + \"?|\\\\\\\\([^\\\\r\\\\n\\\\f])\", \"g\"),\n    funescape = function (escape, nonHex) {\n      var high = \"0x\" + escape.slice(1) - 65536;\n      if (nonHex) {\n        return nonHex;\n      }\n      return high < 0 ? String.fromCharCode(high + 65536) : String.fromCharCode(high >> 10 | 55296, high & 1023 | 56320);\n    };\n  function unescapeSelector(sel) {\n    return sel.replace(runescape, funescape);\n  }\n  function selectorError(msg) {\n    jQuery.error(\"Syntax error, unrecognized expression: \" + msg);\n  }\n  var rcomma = new RegExp(\"^\" + whitespace + \"*,\" + whitespace + \"*\");\n  var tokenCache = createCache();\n  function tokenize(selector, parseOnly) {\n    var matched,\n      match,\n      tokens,\n      type,\n      soFar,\n      groups,\n      preFilters,\n      cached = tokenCache[selector + \" \"];\n    if (cached) {\n      return parseOnly ? 0 : cached.slice(0);\n    }\n    soFar = selector;\n    groups = [];\n    preFilters = jQuery.expr.preFilter;\n    while (soFar) {\n      if (!matched || (match = rcomma.exec(soFar))) {\n        if (match) {\n          soFar = soFar.slice(match[0].length) || soFar;\n        }\n        groups.push(tokens = []);\n      }\n      matched = false;\n      if (match = rleadingCombinator.exec(soFar)) {\n        matched = match.shift();\n        tokens.push({\n          value: matched,\n          // Cast descendant combinators to space\n          type: match[0].replace(rtrimCSS, \" \")\n        });\n        soFar = soFar.slice(matched.length);\n      }\n      for (type in filterMatchExpr) {\n        if ((match = jQuery.expr.match[type].exec(soFar)) && (!preFilters[type] || (match = preFilters[type](match)))) {\n          matched = match.shift();\n          tokens.push({\n            value: matched,\n            type,\n            matches: match\n          });\n          soFar = soFar.slice(matched.length);\n        }\n      }\n      if (!matched) {\n        break;\n      }\n    }\n    if (parseOnly) {\n      return soFar.length;\n    }\n    return soFar ? selectorError(selector) :\n    // Cache the tokens\n    tokenCache(selector, groups).slice(0);\n  }\n  var preFilter = {\n    ATTR: function (match) {\n      match[1] = unescapeSelector(match[1]);\n      match[3] = unescapeSelector(match[3] || match[4] || match[5] || \"\");\n      if (match[2] === \"~=\") {\n        match[3] = \" \" + match[3] + \" \";\n      }\n      return match.slice(0, 4);\n    },\n    CHILD: function (match) {\n      match[1] = match[1].toLowerCase();\n      if (match[1].slice(0, 3) === \"nth\") {\n        if (!match[3]) {\n          selectorError(match[0]);\n        }\n        match[4] = +(match[4] ? match[5] + (match[6] || 1) : 2 * (match[3] === \"even\" || match[3] === \"odd\"));\n        match[5] = +(match[7] + match[8] || match[3] === \"odd\");\n      } else if (match[3]) {\n        selectorError(match[0]);\n      }\n      return match;\n    },\n    PSEUDO: function (match) {\n      var excess,\n        unquoted = !match[6] && match[2];\n      if (filterMatchExpr.CHILD.test(match[0])) {\n        return null;\n      }\n      if (match[3]) {\n        match[2] = match[4] || match[5] || \"\";\n      } else if (unquoted && rpseudo.test(unquoted) && (\n      // Get excess from tokenize (recursively)\n      excess = tokenize(unquoted, true)) && (\n      // advance to the next closing parenthesis\n      excess = unquoted.indexOf(\")\", unquoted.length - excess) - unquoted.length)) {\n        match[0] = match[0].slice(0, excess);\n        match[2] = unquoted.slice(0, excess);\n      }\n      return match.slice(0, 3);\n    }\n  };\n  function toSelector(tokens) {\n    var i2 = 0,\n      len = tokens.length,\n      selector = \"\";\n    for (; i2 < len; i2++) {\n      selector += tokens[i2].value;\n    }\n    return selector;\n  }\n  var rcssescape = /([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\x80-\\uFFFF\\w-]/g;\n  function fcssescape(ch, asCodePoint) {\n    if (asCodePoint) {\n      if (ch === \"\\0\") {\n        return \"\\uFFFD\";\n      }\n      return ch.slice(0, -1) + \"\\\\\" + ch.charCodeAt(ch.length - 1).toString(16) + \" \";\n    }\n    return \"\\\\\" + ch;\n  }\n  jQuery.escapeSelector = function (sel) {\n    return (sel + \"\").replace(rcssescape, fcssescape);\n  };\n  var sort = arr.sort;\n  var splice = arr.splice;\n  var hasDuplicate;\n  function sortOrder(a, b) {\n    if (a === b) {\n      hasDuplicate = true;\n      return 0;\n    }\n    var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n    if (compare) {\n      return compare;\n    }\n    compare = (a.ownerDocument || a) == (b.ownerDocument || b) ? a.compareDocumentPosition(b) :\n    // Otherwise we know they are disconnected\n    1;\n    if (compare & 1) {\n      if (a == document || a.ownerDocument == document && jQuery.contains(document, a)) {\n        return -1;\n      }\n      if (b == document || b.ownerDocument == document && jQuery.contains(document, b)) {\n        return 1;\n      }\n      return 0;\n    }\n    return compare & 4 ? -1 : 1;\n  }\n  jQuery.uniqueSort = function (results) {\n    var elem,\n      duplicates = [],\n      j = 0,\n      i2 = 0;\n    hasDuplicate = false;\n    sort.call(results, sortOrder);\n    if (hasDuplicate) {\n      while (elem = results[i2++]) {\n        if (elem === results[i2]) {\n          j = duplicates.push(i2);\n        }\n      }\n      while (j--) {\n        splice.call(results, duplicates[j], 1);\n      }\n    }\n    return results;\n  };\n  jQuery.fn.uniqueSort = function () {\n    return this.pushStack(jQuery.uniqueSort(slice.apply(this)));\n  };\n  var i,\n    outermostContext,\n    document$1,\n    documentElement$1,\n    documentIsHTML,\n    dirruns = 0,\n    done = 0,\n    classCache = createCache(),\n    compilerCache = createCache(),\n    nonnativeSelectorCache = createCache(),\n    rwhitespace = new RegExp(whitespace + \"+\", \"g\"),\n    ridentifier = new RegExp(\"^\" + identifier + \"$\"),\n    matchExpr = jQuery.extend({\n      bool: new RegExp(\"^(?:\" + booleans + \")$\", \"i\"),\n      // For use in libraries implementing .is()\n      // We use this for POS matching in `select`\n      needsContext: new RegExp(\"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" + whitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\")\n    }, filterMatchExpr),\n    rinputs = /^(?:input|select|textarea|button)$/i,\n    rheader = /^h\\d$/i,\n    rquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n    unloadHandler = function () {\n      setDocument();\n    },\n    inDisabledFieldset = addCombinator(function (elem) {\n      return elem.disabled === true && nodeName(elem, \"fieldset\");\n    }, {\n      dir: \"parentNode\",\n      next: \"legend\"\n    });\n  function find(selector, context, results, seed) {\n    var m,\n      i2,\n      elem,\n      nid,\n      match,\n      groups,\n      newSelector,\n      newContext = context && context.ownerDocument,\n      nodeType = context ? context.nodeType : 9;\n    results = results || [];\n    if (typeof selector !== \"string\" || !selector || nodeType !== 1 && nodeType !== 9 && nodeType !== 11) {\n      return results;\n    }\n    if (false) {\n      setDocument(context);\n      context = context || document$1;\n      if (documentIsHTML) {\n        if (nodeType !== 11 && (match = rquickExpr.exec(selector))) {\n          if (m = match[1]) {\n            if (nodeType === 9) {\n              if (elem = context.getElementById(m)) {\n                push.call(results, elem);\n              }\n              return results;\n            } else {\n              if (newContext && (elem = newContext.getElementById(m)) && jQuery.contains(context, elem)) {\n                push.call(results, elem);\n                return results;\n              }\n            }\n          } else if (match[2]) {\n            push.apply(results, context.getElementsByTagName(selector));\n            return results;\n          } else if ((m = match[3]) && context.getElementsByClassName) {\n            push.apply(results, context.getElementsByClassName(m));\n            return results;\n          }\n        }\n        if (!nonnativeSelectorCache[selector + \" \"] && (!rbuggyQSA || !rbuggyQSA.test(selector))) {\n          newSelector = selector;\n          newContext = context;\n          if (nodeType === 1 && (rdescend.test(selector) || rleadingCombinator.test(selector))) {\n            newContext = rsibling.test(selector) && testContext(context.parentNode) || context;\n            if (newContext != context || isIE) {\n              if (nid = context.getAttribute(\"id\")) {\n                nid = jQuery.escapeSelector(nid);\n              } else {\n                context.setAttribute(\"id\", nid = jQuery.expando);\n              }\n            }\n            groups = tokenize(selector);\n            i2 = groups.length;\n            while (i2--) {\n              groups[i2] = (nid ? \"#\" + nid : \":scope\") + \" \" + toSelector(groups[i2]);\n            }\n            newSelector = groups.join(\",\");\n          }\n          try {\n            push.apply(results, newContext.querySelectorAll(newSelector));\n            return results;\n          } catch (qsaError) {\n            nonnativeSelectorCache(selector, true);\n          } finally {\n            if (nid === jQuery.expando) {\n              context.removeAttribute(\"id\");\n            }\n          }\n        }\n      }\n    }\n    return select(selector.replace(rtrimCSS, \"$1\"), context, results, seed);\n  }\n  function markFunction(fn) {\n    fn[jQuery.expando] = true;\n    return fn;\n  }\n  function createInputPseudo(type) {\n    return function (elem) {\n      return nodeName(elem, \"input\") && elem.type === type;\n    };\n  }\n  function createButtonPseudo(type) {\n    return function (elem) {\n      return (nodeName(elem, \"input\") || nodeName(elem, \"button\")) && elem.type === type;\n    };\n  }\n  function createDisabledPseudo(disabled) {\n    return function (elem) {\n      if (\"form\" in elem) {\n        if (elem.parentNode && elem.disabled === false) {\n          if (\"label\" in elem) {\n            if (\"label\" in elem.parentNode) {\n              return elem.parentNode.disabled === disabled;\n            } else {\n              return elem.disabled === disabled;\n            }\n          }\n          return elem.isDisabled === disabled ||\n          // Where there is no isDisabled, check manually\n          elem.isDisabled !== !disabled && inDisabledFieldset(elem) === disabled;\n        }\n        return elem.disabled === disabled;\n      } else if (\"label\" in elem) {\n        return elem.disabled === disabled;\n      }\n      return false;\n    };\n  }\n  function createPositionalPseudo(fn) {\n    return markFunction(function (argument) {\n      argument = +argument;\n      return markFunction(function (seed, matches3) {\n        var j,\n          matchIndexes = fn([], seed.length, argument),\n          i2 = matchIndexes.length;\n        while (i2--) {\n          if (seed[j = matchIndexes[i2]]) {\n            seed[j] = !(matches3[j] = seed[j]);\n          }\n        }\n      });\n    });\n  }\n  function setDocument(node) {\n    var subWindow,\n      doc = node ? node.ownerDocument || node : document;\n    if (doc == document$1 || doc.nodeType !== 9) {\n      return;\n    }\n    document$1 = doc;\n    documentElement$1 = document$1.documentElement;\n    documentIsHTML = !jQuery.isXMLDoc(document$1);\n    if (isIE && document != document$1 && (subWindow = document$1.defaultView) && subWindow.top !== subWindow) {\n      subWindow.addEventListener(\"unload\", unloadHandler);\n    }\n  }\n  find.matches = function (expr, elements) {\n    return find(expr, null, null, elements);\n  };\n  find.matchesSelector = function (elem, expr) {\n    setDocument(elem);\n    if (documentIsHTML && !nonnativeSelectorCache[expr + \" \"] && (!rbuggyQSA || !rbuggyQSA.test(expr))) {\n      try {\n        return matches2.call(elem, expr);\n      } catch (e2) {\n        nonnativeSelectorCache(expr, true);\n      }\n    }\n    return find(expr, document$1, null, [elem]).length > 0;\n  };\n  jQuery.expr = {\n    // Can be adjusted by the user\n    cacheLength: 50,\n    createPseudo: markFunction,\n    match: matchExpr,\n    find: {\n      ID: function (id, context) {\n        if (typeof context.getElementById !== \"undefined\" && documentIsHTML) {\n          var elem = context.getElementById(id);\n          return elem ? [elem] : [];\n        }\n      },\n      TAG: function (tag, context) {\n        if (typeof context.getElementsByTagName !== \"undefined\") {\n          return context.getElementsByTagName(tag);\n        } else {\n          return context.querySelectorAll(tag);\n        }\n      },\n      CLASS: function (className, context) {\n        if (typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML) {\n          return context.getElementsByClassName(className);\n        }\n      }\n    },\n    relative: {\n      \">\": {\n        dir: \"parentNode\",\n        first: true\n      },\n      \" \": {\n        dir: \"parentNode\"\n      },\n      \"+\": {\n        dir: \"previousSibling\",\n        first: true\n      },\n      \"~\": {\n        dir: \"previousSibling\"\n      }\n    },\n    preFilter,\n    filter: {\n      ID: function (id) {\n        var attrId = unescapeSelector(id);\n        return function (elem) {\n          return elem.getAttribute(\"id\") === attrId;\n        };\n      },\n      TAG: function (nodeNameSelector) {\n        var expectedNodeName = unescapeSelector(nodeNameSelector).toLowerCase();\n        return nodeNameSelector === \"*\" ? function () {\n          return true;\n        } : function (elem) {\n          return nodeName(elem, expectedNodeName);\n        };\n      },\n      CLASS: function (className) {\n        var pattern = classCache[className + \" \"];\n        return pattern || (pattern = new RegExp(\"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\")) && classCache(className, function (elem) {\n          return pattern.test(typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== \"undefined\" && elem.getAttribute(\"class\") || \"\");\n        });\n      },\n      ATTR: function (name, operator, check) {\n        return function (elem) {\n          var result = elem.getAttribute(name);\n          if (result == null) {\n            return operator === \"!=\";\n          }\n          if (!operator) {\n            return true;\n          }\n          result += \"\";\n          if (operator === \"=\") {\n            return result === check;\n          }\n          if (operator === \"!=\") {\n            return result !== check;\n          }\n          if (operator === \"^=\") {\n            return check && result.indexOf(check) === 0;\n          }\n          if (operator === \"*=\") {\n            return check && result.indexOf(check) > -1;\n          }\n          if (operator === \"$=\") {\n            return check && result.slice(-check.length) === check;\n          }\n          if (operator === \"~=\") {\n            return (\" \" + result.replace(rwhitespace, \" \") + \" \").indexOf(check) > -1;\n          }\n          if (operator === \"|=\") {\n            return result === check || result.slice(0, check.length + 1) === check + \"-\";\n          }\n          return false;\n        };\n      },\n      CHILD: function (type, what, _argument, first, last) {\n        var simple = type.slice(0, 3) !== \"nth\",\n          forward = type.slice(-4) !== \"last\",\n          ofType = what === \"of-type\";\n        return first === 1 && last === 0 ?\n        // Shortcut for :nth-*(n)\n        function (elem) {\n          return !!elem.parentNode;\n        } : function (elem, _context, xml) {\n          var cache,\n            outerCache,\n            node,\n            nodeIndex,\n            start,\n            dir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n            parent = elem.parentNode,\n            name = ofType && elem.nodeName.toLowerCase(),\n            useCache = !xml && !ofType,\n            diff = false;\n          if (parent) {\n            if (simple) {\n              while (dir) {\n                node = elem;\n                while (node = node[dir]) {\n                  if (ofType ? nodeName(node, name) : node.nodeType === 1) {\n                    return false;\n                  }\n                }\n                start = dir = type === \"only\" && !start && \"nextSibling\";\n              }\n              return true;\n            }\n            start = [forward ? parent.firstChild : parent.lastChild];\n            if (forward && useCache) {\n              outerCache = parent[jQuery.expando] || (parent[jQuery.expando] = {});\n              cache = outerCache[type] || [];\n              nodeIndex = cache[0] === dirruns && cache[1];\n              diff = nodeIndex && cache[2];\n              node = nodeIndex && parent.childNodes[nodeIndex];\n              while (node = ++nodeIndex && node && node[dir] || (\n              // Fallback to seeking `elem` from the start\n              diff = nodeIndex = 0) || start.pop()) {\n                if (node.nodeType === 1 && ++diff && node === elem) {\n                  outerCache[type] = [dirruns, nodeIndex, diff];\n                  break;\n                }\n              }\n            } else {\n              if (useCache) {\n                outerCache = elem[jQuery.expando] || (elem[jQuery.expando] = {});\n                cache = outerCache[type] || [];\n                nodeIndex = cache[0] === dirruns && cache[1];\n                diff = nodeIndex;\n              }\n              if (diff === false) {\n                while (node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop()) {\n                  if ((ofType ? nodeName(node, name) : node.nodeType === 1) && ++diff) {\n                    if (useCache) {\n                      outerCache = node[jQuery.expando] || (node[jQuery.expando] = {});\n                      outerCache[type] = [dirruns, diff];\n                    }\n                    if (node === elem) {\n                      break;\n                    }\n                  }\n                }\n              }\n            }\n            diff -= last;\n            return diff === first || diff % first === 0 && diff / first >= 0;\n          }\n        };\n      },\n      PSEUDO: function (pseudo, argument) {\n        var fn = jQuery.expr.pseudos[pseudo] || jQuery.expr.setFilters[pseudo.toLowerCase()] || selectorError(\"unsupported pseudo: \" + pseudo);\n        if (fn[jQuery.expando]) {\n          return fn(argument);\n        }\n        return fn;\n      }\n    },\n    pseudos: {\n      // Potentially complex pseudos\n      not: markFunction(function (selector) {\n        var input = [],\n          results = [],\n          matcher = compile(selector.replace(rtrimCSS, \"$1\"));\n        return matcher[jQuery.expando] ? markFunction(function (seed, matches3, _context, xml) {\n          var elem,\n            unmatched = matcher(seed, null, xml, []),\n            i2 = seed.length;\n          while (i2--) {\n            if (elem = unmatched[i2]) {\n              seed[i2] = !(matches3[i2] = elem);\n            }\n          }\n        }) : function (elem, _context, xml) {\n          input[0] = elem;\n          matcher(input, null, xml, results);\n          input[0] = null;\n          return !results.pop();\n        };\n      }),\n      has: markFunction(function (selector) {\n        return function (elem) {\n          return find(selector, elem).length > 0;\n        };\n      }),\n      contains: markFunction(function (text) {\n        text = unescapeSelector(text);\n        return function (elem) {\n          return (elem.textContent || jQuery.text(elem)).indexOf(text) > -1;\n        };\n      }),\n      // \"Whether an element is represented by a :lang() selector\n      // is based solely on the element's language value\n      // being equal to the identifier C,\n      // or beginning with the identifier C immediately followed by \"-\".\n      // The matching of C against the element's language value is performed case-insensitively.\n      // The identifier C does not have to be a valid language name.\"\n      // https://www.w3.org/TR/selectors/#lang-pseudo\n      lang: markFunction(function (lang) {\n        if (!ridentifier.test(lang || \"\")) {\n          selectorError(\"unsupported lang: \" + lang);\n        }\n        lang = unescapeSelector(lang).toLowerCase();\n        return function (elem) {\n          var elemLang;\n          do {\n            if (elemLang = documentIsHTML ? elem.lang : elem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) {\n              elemLang = elemLang.toLowerCase();\n              return elemLang === lang || elemLang.indexOf(lang + \"-\") === 0;\n            }\n          } while ((elem = elem.parentNode) && elem.nodeType === 1);\n          return false;\n        };\n      }),\n      // Miscellaneous\n      target: function (elem) {\n        var hash = window2.location && window2.location.hash;\n        return hash && hash.slice(1) === elem.id;\n      },\n      root: function (elem) {\n        return elem === documentElement$1;\n      },\n      focus: function (elem) {\n        return elem === document$1.activeElement && document$1.hasFocus() && !!(elem.type || elem.href || ~elem.tabIndex);\n      },\n      // Boolean properties\n      enabled: createDisabledPseudo(false),\n      disabled: createDisabledPseudo(true),\n      checked: function (elem) {\n        return nodeName(elem, \"input\") && !!elem.checked || nodeName(elem, \"option\") && !!elem.selected;\n      },\n      selected: function (elem) {\n        if (isIE && elem.parentNode) {\n          elem.parentNode.selectedIndex;\n        }\n        return elem.selected === true;\n      },\n      // Contents\n      empty: function (elem) {\n        for (elem = elem.firstChild; elem; elem = elem.nextSibling) {\n          if (elem.nodeType < 6) {\n            return false;\n          }\n        }\n        return true;\n      },\n      parent: function (elem) {\n        return !jQuery.expr.pseudos.empty(elem);\n      },\n      // Element/input types\n      header: function (elem) {\n        return rheader.test(elem.nodeName);\n      },\n      input: function (elem) {\n        return rinputs.test(elem.nodeName);\n      },\n      button: function (elem) {\n        return nodeName(elem, \"input\") && elem.type === \"button\" || nodeName(elem, \"button\");\n      },\n      text: function (elem) {\n        return nodeName(elem, \"input\") && elem.type === \"text\";\n      },\n      // Position-in-collection\n      first: createPositionalPseudo(function () {\n        return [0];\n      }),\n      last: createPositionalPseudo(function (_matchIndexes, length) {\n        return [length - 1];\n      }),\n      eq: createPositionalPseudo(function (_matchIndexes, length, argument) {\n        return [argument < 0 ? argument + length : argument];\n      }),\n      even: createPositionalPseudo(function (matchIndexes, length) {\n        var i2 = 0;\n        for (; i2 < length; i2 += 2) {\n          matchIndexes.push(i2);\n        }\n        return matchIndexes;\n      }),\n      odd: createPositionalPseudo(function (matchIndexes, length) {\n        var i2 = 1;\n        for (; i2 < length; i2 += 2) {\n          matchIndexes.push(i2);\n        }\n        return matchIndexes;\n      }),\n      lt: createPositionalPseudo(function (matchIndexes, length, argument) {\n        var i2;\n        if (argument < 0) {\n          i2 = argument + length;\n        } else if (argument > length) {\n          i2 = length;\n        } else {\n          i2 = argument;\n        }\n        for (; --i2 >= 0;) {\n          matchIndexes.push(i2);\n        }\n        return matchIndexes;\n      }),\n      gt: createPositionalPseudo(function (matchIndexes, length, argument) {\n        var i2 = argument < 0 ? argument + length : argument;\n        for (; ++i2 < length;) {\n          matchIndexes.push(i2);\n        }\n        return matchIndexes;\n      })\n    }\n  };\n  jQuery.expr.pseudos.nth = jQuery.expr.pseudos.eq;\n  for (i in {\n    radio: true,\n    checkbox: true,\n    file: true,\n    password: true,\n    image: true\n  }) {\n    jQuery.expr.pseudos[i] = createInputPseudo(i);\n  }\n  for (i in {\n    submit: true,\n    reset: true\n  }) {\n    jQuery.expr.pseudos[i] = createButtonPseudo(i);\n  }\n  function setFilters() {}\n  setFilters.prototype = jQuery.expr.filters = jQuery.expr.pseudos;\n  jQuery.expr.setFilters = new setFilters();\n  function addCombinator(matcher, combinator, base) {\n    var dir = combinator.dir,\n      skip = combinator.next,\n      key = skip || dir,\n      checkNonElements = base && key === \"parentNode\",\n      doneName = done++;\n    return combinator.first ?\n    // Check against closest ancestor/preceding element\n    function (elem, context, xml) {\n      while (elem = elem[dir]) {\n        if (elem.nodeType === 1 || checkNonElements) {\n          return matcher(elem, context, xml);\n        }\n      }\n      return false;\n    } :\n    // Check against all ancestor/preceding elements\n    function (elem, context, xml) {\n      var oldCache,\n        outerCache,\n        newCache = [dirruns, doneName];\n      if (xml) {\n        while (elem = elem[dir]) {\n          if (elem.nodeType === 1 || checkNonElements) {\n            if (matcher(elem, context, xml)) {\n              return true;\n            }\n          }\n        }\n      } else {\n        while (elem = elem[dir]) {\n          if (elem.nodeType === 1 || checkNonElements) {\n            outerCache = elem[jQuery.expando] || (elem[jQuery.expando] = {});\n            if (skip && nodeName(elem, skip)) {\n              elem = elem[dir] || elem;\n            } else if ((oldCache = outerCache[key]) && oldCache[0] === dirruns && oldCache[1] === doneName) {\n              return newCache[2] = oldCache[2];\n            } else {\n              outerCache[key] = newCache;\n              if (newCache[2] = matcher(elem, context, xml)) {\n                return true;\n              }\n            }\n          }\n        }\n      }\n      return false;\n    };\n  }\n  function elementMatcher(matchers) {\n    return matchers.length > 1 ? function (elem, context, xml) {\n      var i2 = matchers.length;\n      while (i2--) {\n        if (!matchers[i2](elem, context, xml)) {\n          return false;\n        }\n      }\n      return true;\n    } : matchers[0];\n  }\n  function multipleContexts(selector, contexts, results) {\n    var i2 = 0,\n      len = contexts.length;\n    for (; i2 < len; i2++) {\n      find(selector, contexts[i2], results);\n    }\n    return results;\n  }\n  function condense(unmatched, map, filter, context, xml) {\n    var elem,\n      newUnmatched = [],\n      i2 = 0,\n      len = unmatched.length,\n      mapped = map != null;\n    for (; i2 < len; i2++) {\n      if (elem = unmatched[i2]) {\n        if (!filter || filter(elem, context, xml)) {\n          newUnmatched.push(elem);\n          if (mapped) {\n            map.push(i2);\n          }\n        }\n      }\n    }\n    return newUnmatched;\n  }\n  function setMatcher(preFilter2, selector, matcher, postFilter, postFinder, postSelector) {\n    if (postFilter && !postFilter[jQuery.expando]) {\n      postFilter = setMatcher(postFilter);\n    }\n    if (postFinder && !postFinder[jQuery.expando]) {\n      postFinder = setMatcher(postFinder, postSelector);\n    }\n    return markFunction(function (seed, results, context, xml) {\n      var temp,\n        i2,\n        elem,\n        matcherOut,\n        preMap = [],\n        postMap = [],\n        preexisting = results.length,\n        elems = seed || multipleContexts(selector || \"*\", context.nodeType ? [context] : context, []),\n        matcherIn = preFilter2 && (seed || !selector) ? condense(elems, preMap, preFilter2, context, xml) : elems;\n      if (matcher) {\n        matcherOut = postFinder || (seed ? preFilter2 : preexisting || postFilter) ?\n        // ...intermediate processing is necessary\n        [] :\n        // ...otherwise use results directly\n        results;\n        matcher(matcherIn, matcherOut, context, xml);\n      } else {\n        matcherOut = matcherIn;\n      }\n      if (postFilter) {\n        temp = condense(matcherOut, postMap);\n        postFilter(temp, [], context, xml);\n        i2 = temp.length;\n        while (i2--) {\n          if (elem = temp[i2]) {\n            matcherOut[postMap[i2]] = !(matcherIn[postMap[i2]] = elem);\n          }\n        }\n      }\n      if (seed) {\n        if (postFinder || preFilter2) {\n          if (postFinder) {\n            temp = [];\n            i2 = matcherOut.length;\n            while (i2--) {\n              if (elem = matcherOut[i2]) {\n                temp.push(matcherIn[i2] = elem);\n              }\n            }\n            postFinder(null, matcherOut = [], temp, xml);\n          }\n          i2 = matcherOut.length;\n          while (i2--) {\n            if ((elem = matcherOut[i2]) && (temp = postFinder ? indexOf.call(seed, elem) : preMap[i2]) > -1) {\n              seed[temp] = !(results[temp] = elem);\n            }\n          }\n        }\n      } else {\n        matcherOut = condense(matcherOut === results ? matcherOut.splice(preexisting, matcherOut.length) : matcherOut);\n        if (postFinder) {\n          postFinder(null, results, matcherOut, xml);\n        } else {\n          push.apply(results, matcherOut);\n        }\n      }\n    });\n  }\n  function matcherFromTokens(tokens) {\n    var checkContext,\n      matcher,\n      j,\n      len = tokens.length,\n      leadingRelative = jQuery.expr.relative[tokens[0].type],\n      implicitRelative = leadingRelative || jQuery.expr.relative[\" \"],\n      i2 = leadingRelative ? 1 : 0,\n      matchContext = addCombinator(function (elem) {\n        return elem === checkContext;\n      }, implicitRelative, true),\n      matchAnyContext = addCombinator(function (elem) {\n        return indexOf.call(checkContext, elem) > -1;\n      }, implicitRelative, true),\n      matchers = [function (elem, context, xml) {\n        var ret = !leadingRelative && (xml || context != outermostContext) || ((checkContext = context).nodeType ? matchContext(elem, context, xml) : matchAnyContext(elem, context, xml));\n        checkContext = null;\n        return ret;\n      }];\n    for (; i2 < len; i2++) {\n      if (matcher = jQuery.expr.relative[tokens[i2].type]) {\n        matchers = [addCombinator(elementMatcher(matchers), matcher)];\n      } else {\n        matcher = jQuery.expr.filter[tokens[i2].type].apply(null, tokens[i2].matches);\n        if (matcher[jQuery.expando]) {\n          j = ++i2;\n          for (; j < len; j++) {\n            if (jQuery.expr.relative[tokens[j].type]) {\n              break;\n            }\n          }\n          return setMatcher(i2 > 1 && elementMatcher(matchers), i2 > 1 && toSelector(\n          // If the preceding token was a descendant combinator, insert an implicit any-element `*`\n          tokens.slice(0, i2 - 1).concat({\n            value: tokens[i2 - 2].type === \" \" ? \"*\" : \"\"\n          })).replace(rtrimCSS, \"$1\"), matcher, i2 < j && matcherFromTokens(tokens.slice(i2, j)), j < len && matcherFromTokens(tokens = tokens.slice(j)), j < len && toSelector(tokens));\n        }\n        matchers.push(matcher);\n      }\n    }\n    return elementMatcher(matchers);\n  }\n  function matcherFromGroupMatchers(elementMatchers, setMatchers) {\n    var bySet = setMatchers.length > 0,\n      byElement = elementMatchers.length > 0,\n      superMatcher = function (seed, context, xml, results, outermost) {\n        var elem,\n          j,\n          matcher,\n          matchedCount = 0,\n          i2 = \"0\",\n          unmatched = seed && [],\n          setMatched = [],\n          contextBackup = outermostContext,\n          elems = seed || byElement && jQuery.expr.find.TAG(\"*\", outermost),\n          dirrunsUnique = dirruns += contextBackup == null ? 1 : Math.random() || 0.1;\n        if (outermost) {\n          outermostContext = context == document$1 || context || outermost;\n        }\n        for (; (elem = elems[i2]) != null; i2++) {\n          if (byElement && elem) {\n            j = 0;\n            if (!context && elem.ownerDocument != document$1) {\n              setDocument(elem);\n              xml = !documentIsHTML;\n            }\n            while (matcher = elementMatchers[j++]) {\n              if (matcher(elem, context || document$1, xml)) {\n                push.call(results, elem);\n                break;\n              }\n            }\n            if (outermost) {\n              dirruns = dirrunsUnique;\n            }\n          }\n          if (bySet) {\n            if (elem = !matcher && elem) {\n              matchedCount--;\n            }\n            if (seed) {\n              unmatched.push(elem);\n            }\n          }\n        }\n        matchedCount += i2;\n        if (bySet && i2 !== matchedCount) {\n          j = 0;\n          while (matcher = setMatchers[j++]) {\n            matcher(unmatched, setMatched, context, xml);\n          }\n          if (seed) {\n            if (matchedCount > 0) {\n              while (i2--) {\n                if (!(unmatched[i2] || setMatched[i2])) {\n                  setMatched[i2] = pop.call(results);\n                }\n              }\n            }\n            setMatched = condense(setMatched);\n          }\n          push.apply(results, setMatched);\n          if (outermost && !seed && setMatched.length > 0 && matchedCount + setMatchers.length > 1) {\n            jQuery.uniqueSort(results);\n          }\n        }\n        if (outermost) {\n          dirruns = dirrunsUnique;\n          outermostContext = contextBackup;\n        }\n        return unmatched;\n      };\n    return bySet ? markFunction(superMatcher) : superMatcher;\n  }\n  function compile(selector, match) {\n    var i2,\n      setMatchers = [],\n      elementMatchers = [],\n      cached = compilerCache[selector + \" \"];\n    if (!cached) {\n      if (!match) {\n        match = tokenize(selector);\n      }\n      i2 = match.length;\n      while (i2--) {\n        cached = matcherFromTokens(match[i2]);\n        if (cached[jQuery.expando]) {\n          setMatchers.push(cached);\n        } else {\n          elementMatchers.push(cached);\n        }\n      }\n      cached = compilerCache(selector, matcherFromGroupMatchers(elementMatchers, setMatchers));\n      cached.selector = selector;\n    }\n    return cached;\n  }\n  function select(selector, context, results, seed) {\n    var i2,\n      tokens,\n      token,\n      type,\n      find2,\n      compiled = typeof selector === \"function\" && selector,\n      match = !seed && tokenize(selector = compiled.selector || selector);\n    results = results || [];\n    if (match.length === 1) {\n      tokens = match[0] = match[0].slice(0);\n      if (tokens.length > 2 && (token = tokens[0]).type === \"ID\" && context.nodeType === 9 && documentIsHTML && jQuery.expr.relative[tokens[1].type]) {\n        context = (jQuery.expr.find.ID(unescapeSelector(token.matches[0]), context) || [])[0];\n        if (!context) {\n          return results;\n        } else if (compiled) {\n          context = context.parentNode;\n        }\n        selector = selector.slice(tokens.shift().value.length);\n      }\n      i2 = matchExpr.needsContext.test(selector) ? 0 : tokens.length;\n      while (i2--) {\n        token = tokens[i2];\n        if (jQuery.expr.relative[type = token.type]) {\n          break;\n        }\n        if (find2 = jQuery.expr.find[type]) {\n          if (seed = find2(unescapeSelector(token.matches[0]), rsibling.test(tokens[0].type) && testContext(context.parentNode) || context)) {\n            tokens.splice(i2, 1);\n            selector = seed.length && toSelector(tokens);\n            if (!selector) {\n              push.apply(results, seed);\n              return results;\n            }\n            break;\n          }\n        }\n      }\n    }\n    (compiled || compile(selector, match))(seed, context, !documentIsHTML, results, !context || rsibling.test(selector) && testContext(context.parentNode) || context);\n    return results;\n  }\n  setDocument();\n  jQuery.find = find;\n  find.compile = compile;\n  find.select = select;\n  find.setDocument = setDocument;\n  find.tokenize = tokenize;\n  return jQuery;\n});\n\n// src/mock-doc/selector.ts\nfunction matches(selector, elm) {\n  try {\n    const r = jquery_default.find(selector, void 0, void 0, [elm]);\n    return r.length > 0;\n  } catch (e2) {\n    updateSelectorError(selector, e2);\n    throw e2;\n  }\n}\nfunction selectOne(selector, elm) {\n  try {\n    const r = jquery_default.find(selector, elm, void 0, void 0);\n    return r[0] || null;\n  } catch (e2) {\n    updateSelectorError(selector, e2);\n    throw e2;\n  }\n}\nfunction selectAll(selector, elm) {\n  try {\n    return jquery_default.find(selector, elm, void 0, void 0);\n  } catch (e2) {\n    updateSelectorError(selector, e2);\n    throw e2;\n  }\n}\nvar PROBLEMATIC_SELECTORS = [\":scope\", \":where\", \":is\"];\nfunction updateSelectorError(selector, e2) {\n  const selectorsPresent = PROBLEMATIC_SELECTORS.filter(s => selector.includes(s));\n  if (selectorsPresent.length > 0 && e2.message) {\n    e2.message = `At present jQuery does not support the ${humanReadableList(selectorsPresent)} ${selectorsPresent.length === 1 ? \"selector\" : \"selectors\"}.\nIf you need this in your test, consider writing an end-to-end test instead.\n` + e2.message;\n  }\n}\nfunction humanReadableList(items) {\n  if (items.length <= 1) {\n    return items.join(\"\");\n  }\n  return `${items.slice(0, items.length - 1).join(\", \")} and ${items[items.length - 1]}`;\n}\n\n// src/mock-doc/serialize-node.ts\nfunction serializeNodeToHtml(elm, opts = {}) {\n  const output = {\n    currentLineWidth: 0,\n    indent: 0,\n    isWithinBody: false,\n    text: []\n  };\n  if (opts.prettyHtml) {\n    if (typeof opts.indentSpaces !== \"number\") {\n      opts.indentSpaces = 2;\n    }\n    if (typeof opts.newLines !== \"boolean\") {\n      opts.newLines = true;\n    }\n    opts.approximateLineWidth = -1;\n  } else {\n    opts.prettyHtml = false;\n    if (typeof opts.newLines !== \"boolean\") {\n      opts.newLines = false;\n    }\n    if (typeof opts.indentSpaces !== \"number\") {\n      opts.indentSpaces = 0;\n    }\n  }\n  if (typeof opts.approximateLineWidth !== \"number\") {\n    opts.approximateLineWidth = -1;\n  }\n  if (typeof opts.removeEmptyAttributes !== \"boolean\") {\n    opts.removeEmptyAttributes = true;\n  }\n  if (typeof opts.removeAttributeQuotes !== \"boolean\") {\n    opts.removeAttributeQuotes = false;\n  }\n  if (typeof opts.removeBooleanAttributeQuotes !== \"boolean\") {\n    opts.removeBooleanAttributeQuotes = false;\n  }\n  if (typeof opts.removeHtmlComments !== \"boolean\") {\n    opts.removeHtmlComments = false;\n  }\n  if (typeof opts.serializeShadowRoot !== \"boolean\") {\n    opts.serializeShadowRoot = false;\n  }\n  if (opts.outerHtml) {\n    serializeToHtml(elm, opts, output, false);\n  } else {\n    for (let i = 0, ii = elm.childNodes.length; i < ii; i++) {\n      serializeToHtml(elm.childNodes[i], opts, output, false);\n    }\n  }\n  if (output.text[0] === \"\\n\") {\n    output.text.shift();\n  }\n  if (output.text[output.text.length - 1] === \"\\n\") {\n    output.text.pop();\n  }\n  return output.text.join(\"\");\n}\nfunction serializeToHtml(node, opts, output, isShadowRoot) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n, _o, _p;\n  if (node.nodeType === 1 /* ELEMENT_NODE */ || isShadowRoot) {\n    const tagName = isShadowRoot ? \"mock:shadow-root\" : getTagName(node);\n    if (tagName === \"body\") {\n      output.isWithinBody = true;\n    }\n    const ignoreTag = opts.excludeTags != null && opts.excludeTags.includes(tagName);\n    if (ignoreTag === false) {\n      const isWithinWhitespaceSensitiveNode = opts.newLines || ((_a = opts.indentSpaces) != null ? _a : 0) > 0 ? isWithinWhitespaceSensitive(node) : false;\n      if (opts.newLines && !isWithinWhitespaceSensitiveNode) {\n        output.text.push(\"\\n\");\n        output.currentLineWidth = 0;\n      }\n      if (((_b = opts.indentSpaces) != null ? _b : 0) > 0 && !isWithinWhitespaceSensitiveNode) {\n        for (let i = 0; i < output.indent; i++) {\n          output.text.push(\" \");\n        }\n        output.currentLineWidth += output.indent;\n      }\n      output.text.push(\"<\" + tagName);\n      output.currentLineWidth += tagName.length + 1;\n      const attrsLength = node.attributes.length;\n      const attributes = opts.prettyHtml && attrsLength > 1 ? cloneAttributes(node.attributes, true) : node.attributes;\n      for (let i = 0; i < attrsLength; i++) {\n        const attr = attributes.item(i);\n        const attrName = attr.name;\n        if (attrName === \"style\") {\n          continue;\n        }\n        let attrValue = attr.value;\n        if (opts.removeEmptyAttributes && attrValue === \"\" && REMOVE_EMPTY_ATTR.has(attrName)) {\n          continue;\n        }\n        const attrNamespaceURI = attr.namespaceURI;\n        if (attrNamespaceURI == null) {\n          output.currentLineWidth += attrName.length + 1;\n          if (opts.approximateLineWidth && opts.approximateLineWidth > 0 && output.currentLineWidth > opts.approximateLineWidth) {\n            output.text.push(\"\\n\" + attrName);\n            output.currentLineWidth = 0;\n          } else {\n            output.text.push(\" \" + attrName);\n          }\n        } else if (attrNamespaceURI === \"http://www.w3.org/XML/1998/namespace\") {\n          output.text.push(\" xml:\" + attrName);\n          output.currentLineWidth += attrName.length + 5;\n        } else if (attrNamespaceURI === \"http://www.w3.org/2000/xmlns/\") {\n          if (attrName !== \"xmlns\") {\n            output.text.push(\" xmlns:\" + attrName);\n            output.currentLineWidth += attrName.length + 7;\n          } else {\n            output.text.push(\" \" + attrName);\n            output.currentLineWidth += attrName.length + 1;\n          }\n        } else if (attrNamespaceURI === XLINK_NS) {\n          output.text.push(\" xlink:\" + attrName);\n          output.currentLineWidth += attrName.length + 7;\n        } else {\n          output.text.push(\" \" + attrNamespaceURI + \":\" + attrName);\n          output.currentLineWidth += attrNamespaceURI.length + attrName.length + 2;\n        }\n        if (opts.prettyHtml && attrName === \"class\") {\n          attrValue = attr.value = attrValue.split(\" \").filter(t => t !== \"\").sort().join(\" \").trim();\n        }\n        if (attrValue === \"\") {\n          if (opts.removeBooleanAttributeQuotes && BOOLEAN_ATTR.has(attrName)) {\n            continue;\n          }\n          if (opts.removeEmptyAttributes && attrName.startsWith(\"data-\")) {\n            continue;\n          }\n        }\n        if (opts.removeAttributeQuotes && CAN_REMOVE_ATTR_QUOTES.test(attrValue)) {\n          output.text.push(\"=\" + escapeString(attrValue, true));\n          output.currentLineWidth += attrValue.length + 1;\n        } else {\n          output.text.push('=\"' + escapeString(attrValue, true) + '\"');\n          output.currentLineWidth += attrValue.length + 3;\n        }\n      }\n      if (node.hasAttribute(\"style\")) {\n        const cssText = node.style.cssText;\n        if (opts.approximateLineWidth && opts.approximateLineWidth > 0 && output.currentLineWidth + cssText.length + 10 > opts.approximateLineWidth) {\n          output.text.push(`\nstyle=\"${cssText}\">`);\n          output.currentLineWidth = 0;\n        } else {\n          output.text.push(` style=\"${cssText}\">`);\n          output.currentLineWidth += cssText.length + 10;\n        }\n      } else {\n        output.text.push(\">\");\n        output.currentLineWidth += 1;\n      }\n    }\n    if (EMPTY_ELEMENTS.has(tagName) === false) {\n      if (opts.serializeShadowRoot && node.shadowRoot != null) {\n        output.indent = output.indent + ((_c = opts.indentSpaces) != null ? _c : 0);\n        serializeToHtml(node.shadowRoot, opts, output, true);\n        output.indent = output.indent - ((_d = opts.indentSpaces) != null ? _d : 0);\n        if (opts.newLines && (node.childNodes.length === 0 || node.childNodes.length === 1 && node.childNodes[0].nodeType === 3 /* TEXT_NODE */ && ((_e = node.childNodes[0].nodeValue) == null ? void 0 : _e.trim()) === \"\")) {\n          output.text.push(\"\\n\");\n          output.currentLineWidth = 0;\n          for (let i = 0; i < output.indent; i++) {\n            output.text.push(\" \");\n          }\n          output.currentLineWidth += output.indent;\n        }\n      }\n      if (opts.excludeTagContent == null || opts.excludeTagContent.includes(tagName) === false) {\n        const childNodes = tagName === \"template\" ? node.content.childNodes : node.childNodes;\n        const childNodeLength = childNodes.length;\n        if (childNodeLength > 0) {\n          if (childNodeLength === 1 && childNodes[0].nodeType === 3 /* TEXT_NODE */ && (typeof childNodes[0].nodeValue !== \"string\" || childNodes[0].nodeValue.trim() === \"\")) {} else {\n            const isWithinWhitespaceSensitiveNode = opts.newLines || ((_f = opts.indentSpaces) != null ? _f : 0) > 0 ? isWithinWhitespaceSensitive(node) : false;\n            if (!isWithinWhitespaceSensitiveNode && ((_g = opts.indentSpaces) != null ? _g : 0) > 0 && ignoreTag === false) {\n              output.indent = output.indent + ((_h = opts.indentSpaces) != null ? _h : 0);\n            }\n            for (let i = 0; i < childNodeLength; i++) {\n              serializeToHtml(childNodes[i], opts, output, false);\n            }\n            if (ignoreTag === false) {\n              if (opts.newLines && !isWithinWhitespaceSensitiveNode) {\n                output.text.push(\"\\n\");\n                output.currentLineWidth = 0;\n              }\n              if (((_i = opts.indentSpaces) != null ? _i : 0) > 0 && !isWithinWhitespaceSensitiveNode) {\n                output.indent = output.indent - ((_j = opts.indentSpaces) != null ? _j : 0);\n                for (let i = 0; i < output.indent; i++) {\n                  output.text.push(\" \");\n                }\n                output.currentLineWidth += output.indent;\n              }\n            }\n          }\n        }\n        if (ignoreTag === false) {\n          output.text.push(\"</\" + tagName + \">\");\n          output.currentLineWidth += tagName.length + 3;\n        }\n      }\n    }\n    if (((_k = opts.approximateLineWidth) != null ? _k : 0) > 0 && STRUCTURE_ELEMENTS.has(tagName)) {\n      output.text.push(\"\\n\");\n      output.currentLineWidth = 0;\n    }\n    if (tagName === \"body\") {\n      output.isWithinBody = false;\n    }\n  } else if (node.nodeType === 3 /* TEXT_NODE */) {\n    let textContent = node.nodeValue;\n    if (typeof textContent === \"string\") {\n      const trimmedTextContent = textContent.trim();\n      if (trimmedTextContent === \"\") {\n        if (isWithinWhitespaceSensitive(node)) {\n          output.text.push(textContent);\n          output.currentLineWidth += textContent.length;\n        } else if (((_l = opts.approximateLineWidth) != null ? _l : 0) > 0 && !output.isWithinBody) {} else if (!opts.prettyHtml) {\n          output.currentLineWidth += 1;\n          if (opts.approximateLineWidth && opts.approximateLineWidth > 0 && output.currentLineWidth > opts.approximateLineWidth) {\n            output.text.push(\"\\n\");\n            output.currentLineWidth = 0;\n          } else {\n            output.text.push(\" \");\n          }\n        }\n      } else {\n        const isWithinWhitespaceSensitiveNode = opts.newLines || ((_m = opts.indentSpaces) != null ? _m : 0) > 0 || opts.prettyHtml ? isWithinWhitespaceSensitive(node) : false;\n        if (opts.newLines && !isWithinWhitespaceSensitiveNode) {\n          output.text.push(\"\\n\");\n          output.currentLineWidth = 0;\n        }\n        if (((_n = opts.indentSpaces) != null ? _n : 0) > 0 && !isWithinWhitespaceSensitiveNode) {\n          for (let i = 0; i < output.indent; i++) {\n            output.text.push(\" \");\n          }\n          output.currentLineWidth += output.indent;\n        }\n        let textContentLength = textContent.length;\n        if (textContentLength > 0) {\n          const parentTagName = node.parentNode != null && node.parentNode.nodeType === 1 /* ELEMENT_NODE */ ? node.parentNode.nodeName : null;\n          if (typeof parentTagName === \"string\" && NON_ESCAPABLE_CONTENT.has(parentTagName)) {\n            if (isWithinWhitespaceSensitive(node)) {\n              output.text.push(textContent);\n            } else {\n              output.text.push(trimmedTextContent);\n              textContentLength = trimmedTextContent.length;\n            }\n            output.currentLineWidth += textContentLength;\n          } else {\n            if (opts.prettyHtml && !isWithinWhitespaceSensitiveNode) {\n              output.text.push(escapeString(textContent.replace(/\\s\\s+/g, \" \").trim(), false));\n              output.currentLineWidth += textContentLength;\n            } else {\n              if (isWithinWhitespaceSensitive(node)) {\n                output.currentLineWidth += textContentLength;\n              } else {\n                if (/\\s/.test(textContent.charAt(0))) {\n                  textContent = \" \" + textContent.trimLeft();\n                }\n                textContentLength = textContent.length;\n                if (textContentLength > 1) {\n                  if (/\\s/.test(textContent.charAt(textContentLength - 1))) {\n                    if (opts.approximateLineWidth && opts.approximateLineWidth > 0 && output.currentLineWidth + textContentLength > opts.approximateLineWidth) {\n                      textContent = textContent.trimRight() + \"\\n\";\n                      output.currentLineWidth = 0;\n                    } else {\n                      textContent = textContent.trimRight() + \" \";\n                    }\n                  }\n                }\n                output.currentLineWidth += textContentLength;\n              }\n              output.text.push(escapeString(textContent, false));\n            }\n          }\n        }\n      }\n    }\n  } else if (node.nodeType === 8 /* COMMENT_NODE */) {\n    const nodeValue = node.nodeValue;\n    if (opts.removeHtmlComments) {\n      const isHydrateAnnotation = (nodeValue == null ? void 0 : nodeValue.startsWith(CONTENT_REF_ID + \".\")) || (nodeValue == null ? void 0 : nodeValue.startsWith(ORG_LOCATION_ID + \".\")) || (nodeValue == null ? void 0 : nodeValue.startsWith(SLOT_NODE_ID + \".\")) || (nodeValue == null ? void 0 : nodeValue.startsWith(TEXT_NODE_ID + \".\"));\n      if (!isHydrateAnnotation) {\n        return;\n      }\n    }\n    const isWithinWhitespaceSensitiveNode = opts.newLines || ((_o = opts.indentSpaces) != null ? _o : 0) > 0 ? isWithinWhitespaceSensitive(node) : false;\n    if (opts.newLines && !isWithinWhitespaceSensitiveNode) {\n      output.text.push(\"\\n\");\n      output.currentLineWidth = 0;\n    }\n    if (((_p = opts.indentSpaces) != null ? _p : 0) > 0 && !isWithinWhitespaceSensitiveNode) {\n      for (let i = 0; i < output.indent; i++) {\n        output.text.push(\" \");\n      }\n      output.currentLineWidth += output.indent;\n    }\n    output.text.push(\"<!--\" + nodeValue + \"-->\");\n    output.currentLineWidth += nodeValue.length + 7;\n  } else if (node.nodeType === 10 /* DOCUMENT_TYPE_NODE */) {\n    output.text.push(\"<!doctype html>\");\n  }\n}\nvar AMP_REGEX = /&/g;\nvar NBSP_REGEX = /\\u00a0/g;\nvar DOUBLE_QUOTE_REGEX = /\"/g;\nvar LT_REGEX = /</g;\nvar GT_REGEX = />/g;\nvar CAN_REMOVE_ATTR_QUOTES = /^[^ \\t\\n\\f\\r\"'`=<>\\/\\\\-]+$/;\nfunction getTagName(element) {\n  if (element.namespaceURI === \"http://www.w3.org/1999/xhtml\") {\n    return element.nodeName.toLowerCase();\n  } else {\n    return element.nodeName;\n  }\n}\nfunction escapeString(str, attrMode) {\n  str = str.replace(AMP_REGEX, \"&amp;\").replace(NBSP_REGEX, \"&nbsp;\");\n  if (attrMode) {\n    return str.replace(DOUBLE_QUOTE_REGEX, \"&quot;\");\n  }\n  return str.replace(LT_REGEX, \"&lt;\").replace(GT_REGEX, \"&gt;\");\n}\nfunction isWithinWhitespaceSensitive(node) {\n  let _node = node;\n  while (_node != null) {\n    if (WHITESPACE_SENSITIVE.has(_node.nodeName)) {\n      return true;\n    }\n    _node = _node.parentNode;\n  }\n  return false;\n}\nvar NON_ESCAPABLE_CONTENT = /* @__PURE__ */new Set([\"STYLE\", \"SCRIPT\", \"IFRAME\", \"NOSCRIPT\", \"XMP\", \"NOEMBED\", \"NOFRAMES\", \"PLAINTEXT\"]);\nvar WHITESPACE_SENSITIVE = /* @__PURE__ */new Set([\"CODE\", \"OUTPUT\", \"PLAINTEXT\", \"PRE\", \"SCRIPT\", \"TEMPLATE\", \"TEXTAREA\"]);\nvar EMPTY_ELEMENTS = /* @__PURE__ */new Set([\"area\", \"base\", \"basefont\", \"bgsound\", \"br\", \"col\", \"embed\", \"frame\", \"hr\", \"img\", \"input\", \"keygen\", \"link\", \"meta\", \"param\", \"source\", \"trace\", \"wbr\"]);\nvar REMOVE_EMPTY_ATTR = /* @__PURE__ */new Set([\"class\", \"dir\", \"id\", \"lang\", \"name\", \"title\"]);\nvar BOOLEAN_ATTR = /* @__PURE__ */new Set([\"allowfullscreen\", \"async\", \"autofocus\", \"autoplay\", \"checked\", \"compact\", \"controls\", \"declare\", \"default\", \"defaultchecked\", \"defaultmuted\", \"defaultselected\", \"defer\", \"disabled\", \"enabled\", \"formnovalidate\", \"hidden\", \"indeterminate\", \"inert\", \"ismap\", \"itemscope\", \"loop\", \"multiple\", \"muted\", \"nohref\", \"nomodule\", \"noresize\", \"noshade\", \"novalidate\", \"nowrap\", \"open\", \"pauseonexit\", \"readonly\", \"required\", \"reversed\", \"scoped\", \"seamless\", \"selected\", \"sortable\", \"truespeed\", \"typemustmatch\", \"visible\"]);\nvar STRUCTURE_ELEMENTS = /* @__PURE__ */new Set([\"html\", \"body\", \"head\", \"iframe\", \"meta\", \"link\", \"base\", \"title\", \"script\", \"style\"]);\n\n// src/mock-doc/node.ts\nvar MockNode2 = class {\n  constructor(ownerDocument, nodeType, nodeName, nodeValue) {\n    this.ownerDocument = ownerDocument;\n    this.nodeType = nodeType;\n    this.nodeName = nodeName;\n    this._nodeValue = nodeValue;\n    this.parentNode = null;\n    this.childNodes = [];\n  }\n  appendChild(newNode) {\n    if (newNode.nodeType === 11 /* DOCUMENT_FRAGMENT_NODE */) {\n      const nodes = newNode.childNodes.slice();\n      for (const child of nodes) {\n        this.appendChild(child);\n      }\n    } else {\n      newNode.remove();\n      newNode.parentNode = this;\n      this.childNodes.push(newNode);\n      connectNode(this.ownerDocument, newNode);\n    }\n    return newNode;\n  }\n  append(...items) {\n    items.forEach(item => {\n      const isNode = typeof item === \"object\" && item !== null && \"nodeType\" in item;\n      this.appendChild(isNode ? item : this.ownerDocument.createTextNode(String(item)));\n    });\n  }\n  prepend(...items) {\n    const firstChild = this.firstChild;\n    items.forEach(item => {\n      const isNode = typeof item === \"object\" && item !== null && \"nodeType\" in item;\n      if (firstChild) {\n        this.insertBefore(isNode ? item : this.ownerDocument.createTextNode(String(item)), firstChild);\n      }\n    });\n  }\n  cloneNode(deep) {\n    throw new Error(`invalid node type to clone: ${this.nodeType}, deep: ${deep}`);\n  }\n  compareDocumentPosition(_other) {\n    return -1;\n  }\n  get firstChild() {\n    return this.childNodes[0] || null;\n  }\n  insertBefore(newNode, referenceNode) {\n    if (newNode.nodeType === 11 /* DOCUMENT_FRAGMENT_NODE */) {\n      for (let i = 0, ii = newNode.childNodes.length; i < ii; i++) {\n        insertBefore(this, newNode.childNodes[i], referenceNode);\n      }\n    } else {\n      insertBefore(this, newNode, referenceNode);\n    }\n    return newNode;\n  }\n  get isConnected() {\n    let node = this;\n    while (node != null) {\n      if (node.nodeType === 9 /* DOCUMENT_NODE */) {\n        return true;\n      }\n      node = node.parentNode;\n      if (node != null && node.nodeType === 11 /* DOCUMENT_FRAGMENT_NODE */) {\n        node = node.host;\n      }\n    }\n    return false;\n  }\n  isSameNode(node) {\n    return this === node;\n  }\n  get lastChild() {\n    return this.childNodes[this.childNodes.length - 1] || null;\n  }\n  get nextSibling() {\n    if (this.parentNode != null) {\n      const index = this.parentNode.childNodes.indexOf(this) + 1;\n      return this.parentNode.childNodes[index] || null;\n    }\n    return null;\n  }\n  get nodeValue() {\n    var _a;\n    return (_a = this._nodeValue) != null ? _a : \"\";\n  }\n  set nodeValue(value) {\n    this._nodeValue = value;\n  }\n  get parentElement() {\n    return this.parentNode || null;\n  }\n  set parentElement(value) {\n    this.parentNode = value;\n  }\n  get previousSibling() {\n    if (this.parentNode != null) {\n      const index = this.parentNode.childNodes.indexOf(this) - 1;\n      return this.parentNode.childNodes[index] || null;\n    }\n    return null;\n  }\n  contains(otherNode) {\n    if (otherNode === this) {\n      return true;\n    }\n    const childNodes = Array.from(this.childNodes);\n    if (childNodes.includes(otherNode)) {\n      return true;\n    }\n    return childNodes.some(node => this.contains.bind(node)(otherNode));\n  }\n  removeChild(childNode) {\n    const index = this.childNodes.indexOf(childNode);\n    if (index > -1) {\n      this.childNodes.splice(index, 1);\n      if (this.nodeType === 1 /* ELEMENT_NODE */) {\n        const wasConnected = this.isConnected;\n        childNode.parentNode = null;\n        if (wasConnected === true) {\n          disconnectNode(childNode);\n        }\n      } else {\n        childNode.parentNode = null;\n      }\n    } else {\n      throw new Error(`node not found within childNodes during removeChild`);\n    }\n    return childNode;\n  }\n  remove() {\n    if (this.parentNode != null) {\n      this.parentNode.removeChild(this);\n    }\n  }\n  replaceChild(newChild, oldChild) {\n    if (oldChild.parentNode === this) {\n      this.insertBefore(newChild, oldChild);\n      oldChild.remove();\n      return newChild;\n    }\n    return null;\n  }\n  get textContent() {\n    var _a;\n    return (_a = this._nodeValue) != null ? _a : \"\";\n  }\n  set textContent(value) {\n    this._nodeValue = String(value);\n  }\n};\nMockNode2.ELEMENT_NODE = 1;\nMockNode2.TEXT_NODE = 3;\nMockNode2.PROCESSING_INSTRUCTION_NODE = 7;\nMockNode2.COMMENT_NODE = 8;\nMockNode2.DOCUMENT_NODE = 9;\nMockNode2.DOCUMENT_TYPE_NODE = 10;\nMockNode2.DOCUMENT_FRAGMENT_NODE = 11;\nvar MockNodeList = class {\n  constructor(ownerDocument, childNodes, length) {\n    this.ownerDocument = ownerDocument;\n    this.childNodes = childNodes;\n    this.length = length;\n  }\n};\nvar MockElement = class extends MockNode2 {\n  attachInternals() {\n    return new Proxy({}, {\n      get: function (_target, prop, _receiver) {\n        console.error(`NOTE: Property ${String(prop)} was accessed on ElementInternals, but this property is not implemented.\nTesting components with ElementInternals is fully supported in e2e tests.`);\n      }\n    });\n  }\n  constructor(ownerDocument, nodeName, namespaceURI = null) {\n    super(ownerDocument, 1 /* ELEMENT_NODE */, typeof nodeName === \"string\" ? nodeName : null, null);\n    this.__namespaceURI = namespaceURI;\n    this.__shadowRoot = null;\n    this.__attributeMap = null;\n  }\n  addEventListener(type, handler) {\n    addEventListener(this, type, handler);\n  }\n  attachShadow(_opts) {\n    const shadowRoot = this.ownerDocument.createDocumentFragment();\n    this.shadowRoot = shadowRoot;\n    return shadowRoot;\n  }\n  blur() {\n    dispatchEvent(this, new MockFocusEvent(\"blur\", {\n      relatedTarget: null,\n      bubbles: true,\n      cancelable: true,\n      composed: true\n    }));\n  }\n  get localName() {\n    if (!this.nodeName) {\n      throw new Error(`Can't compute elements localName without nodeName`);\n    }\n    return this.nodeName.toLocaleLowerCase();\n  }\n  get namespaceURI() {\n    return this.__namespaceURI;\n  }\n  get shadowRoot() {\n    return this.__shadowRoot || null;\n  }\n  set shadowRoot(shadowRoot) {\n    if (shadowRoot != null) {\n      shadowRoot.host = this;\n      this.__shadowRoot = shadowRoot;\n    } else {\n      delete this.__shadowRoot;\n    }\n  }\n  get attributes() {\n    if (this.__attributeMap == null) {\n      const attrMap = createAttributeProxy(false);\n      this.__attributeMap = attrMap;\n      return attrMap;\n    }\n    return this.__attributeMap;\n  }\n  set attributes(attrs) {\n    this.__attributeMap = attrs;\n  }\n  get children() {\n    return this.childNodes.filter(n => n.nodeType === 1 /* ELEMENT_NODE */);\n  }\n  get childElementCount() {\n    return this.childNodes.filter(n => n.nodeType === 1 /* ELEMENT_NODE */).length;\n  }\n  get className() {\n    return this.getAttributeNS(null, \"class\") || \"\";\n  }\n  set className(value) {\n    this.setAttributeNS(null, \"class\", value);\n  }\n  get classList() {\n    return new MockClassList(this);\n  }\n  click() {\n    dispatchEvent(this, new MockEvent(\"click\", {\n      bubbles: true,\n      cancelable: true,\n      composed: true\n    }));\n  }\n  cloneNode(_deep) {\n    return null;\n  }\n  closest(selector) {\n    let elm = this;\n    while (elm != null) {\n      if (elm.matches(selector)) {\n        return elm;\n      }\n      elm = elm.parentNode;\n    }\n    return null;\n  }\n  get dataset() {\n    return dataset(this);\n  }\n  get dir() {\n    return this.getAttributeNS(null, \"dir\") || \"\";\n  }\n  set dir(value) {\n    this.setAttributeNS(null, \"dir\", value);\n  }\n  dispatchEvent(ev) {\n    return dispatchEvent(this, ev);\n  }\n  get firstElementChild() {\n    return this.children[0] || null;\n  }\n  focus(_options) {\n    dispatchEvent(this, new MockFocusEvent(\"focus\", {\n      relatedTarget: null,\n      bubbles: true,\n      cancelable: true,\n      composed: true\n    }));\n  }\n  getAttribute(attrName) {\n    if (attrName === \"style\") {\n      if (this.__style != null && this.__style.length > 0) {\n        return this.style.cssText;\n      }\n      return null;\n    }\n    const attr = this.attributes.getNamedItem(attrName);\n    if (attr != null) {\n      return attr.value;\n    }\n    return null;\n  }\n  getAttributeNS(namespaceURI, attrName) {\n    const attr = this.attributes.getNamedItemNS(namespaceURI, attrName);\n    if (attr != null) {\n      return attr.value;\n    }\n    return null;\n  }\n  getAttributeNode(attrName) {\n    if (!this.hasAttribute(attrName)) {\n      return null;\n    }\n    return new MockAttr(attrName, this.getAttribute(attrName));\n  }\n  getBoundingClientRect() {\n    return {\n      bottom: 0,\n      height: 0,\n      left: 0,\n      right: 0,\n      top: 0,\n      width: 0,\n      x: 0,\n      y: 0\n    };\n  }\n  getRootNode(opts) {\n    const isComposed = opts != null && opts.composed === true;\n    let node = this;\n    while (node.parentNode != null) {\n      node = node.parentNode;\n      if (isComposed === true && node.parentNode == null && node.host != null) {\n        node = node.host;\n      }\n    }\n    return node;\n  }\n  get draggable() {\n    return this.getAttributeNS(null, \"draggable\") === \"true\";\n  }\n  set draggable(value) {\n    this.setAttributeNS(null, \"draggable\", value);\n  }\n  hasChildNodes() {\n    return this.childNodes.length > 0;\n  }\n  get id() {\n    return this.getAttributeNS(null, \"id\") || \"\";\n  }\n  set id(value) {\n    this.setAttributeNS(null, \"id\", value);\n  }\n  get innerHTML() {\n    if (this.childNodes.length === 0) {\n      return \"\";\n    }\n    return serializeNodeToHtml(this, {\n      newLines: false,\n      indentSpaces: 0\n    });\n  }\n  set innerHTML(html) {\n    var _a;\n    if (NON_ESCAPABLE_CONTENT.has((_a = this.nodeName) != null ? _a : \"\") === true) {\n      setTextContent(this, html);\n    } else {\n      for (let i = this.childNodes.length - 1; i >= 0; i--) {\n        this.removeChild(this.childNodes[i]);\n      }\n      if (typeof html === \"string\") {\n        const frag = parseFragmentUtil(this.ownerDocument, html);\n        while (frag.childNodes.length > 0) {\n          this.appendChild(frag.childNodes[0]);\n        }\n      }\n    }\n  }\n  get innerText() {\n    const text = [];\n    getTextContent(this.childNodes, text);\n    return text.join(\"\");\n  }\n  set innerText(value) {\n    setTextContent(this, value);\n  }\n  insertAdjacentElement(position, elm) {\n    if (position === \"beforebegin\") {\n      insertBefore(this.parentNode, elm, this);\n    } else if (position === \"afterbegin\") {\n      this.prepend(elm);\n    } else if (position === \"beforeend\") {\n      this.appendChild(elm);\n    } else if (position === \"afterend\") {\n      insertBefore(this.parentNode, elm, this.nextSibling);\n    }\n    return elm;\n  }\n  insertAdjacentHTML(position, html) {\n    const frag = parseFragmentUtil(this.ownerDocument, html);\n    if (position === \"beforebegin\") {\n      while (frag.childNodes.length > 0) {\n        insertBefore(this.parentNode, frag.childNodes[0], this);\n      }\n    } else if (position === \"afterbegin\") {\n      while (frag.childNodes.length > 0) {\n        this.prepend(frag.childNodes[frag.childNodes.length - 1]);\n      }\n    } else if (position === \"beforeend\") {\n      while (frag.childNodes.length > 0) {\n        this.appendChild(frag.childNodes[0]);\n      }\n    } else if (position === \"afterend\") {\n      while (frag.childNodes.length > 0) {\n        insertBefore(this.parentNode, frag.childNodes[frag.childNodes.length - 1], this.nextSibling);\n      }\n    }\n  }\n  insertAdjacentText(position, text) {\n    const elm = this.ownerDocument.createTextNode(text);\n    if (position === \"beforebegin\") {\n      insertBefore(this.parentNode, elm, this);\n    } else if (position === \"afterbegin\") {\n      this.prepend(elm);\n    } else if (position === \"beforeend\") {\n      this.appendChild(elm);\n    } else if (position === \"afterend\") {\n      insertBefore(this.parentNode, elm, this.nextSibling);\n    }\n  }\n  hasAttribute(attrName) {\n    if (attrName === \"style\") {\n      return this.__style != null && this.__style.length > 0;\n    }\n    return this.getAttribute(attrName) !== null;\n  }\n  hasAttributeNS(namespaceURI, name) {\n    return this.getAttributeNS(namespaceURI, name) !== null;\n  }\n  get hidden() {\n    return this.hasAttributeNS(null, \"hidden\");\n  }\n  set hidden(isHidden) {\n    if (isHidden === true) {\n      this.setAttributeNS(null, \"hidden\", \"\");\n    } else {\n      this.removeAttributeNS(null, \"hidden\");\n    }\n  }\n  get lang() {\n    return this.getAttributeNS(null, \"lang\") || \"\";\n  }\n  set lang(value) {\n    this.setAttributeNS(null, \"lang\", value);\n  }\n  get lastElementChild() {\n    const children = this.children;\n    return children[children.length - 1] || null;\n  }\n  matches(selector) {\n    return matches(selector, this);\n  }\n  get nextElementSibling() {\n    const parentElement = this.parentElement;\n    if (parentElement != null && (parentElement.nodeType === 1 /* ELEMENT_NODE */ || parentElement.nodeType === 11 /* DOCUMENT_FRAGMENT_NODE */ || parentElement.nodeType === 9 /* DOCUMENT_NODE */)) {\n      const children = parentElement.children;\n      const index = children.indexOf(this) + 1;\n      return parentElement.children[index] || null;\n    }\n    return null;\n  }\n  get outerHTML() {\n    return serializeNodeToHtml(this, {\n      newLines: false,\n      outerHtml: true,\n      indentSpaces: 0\n    });\n  }\n  get previousElementSibling() {\n    const parentElement = this.parentElement;\n    if (parentElement != null && (parentElement.nodeType === 1 /* ELEMENT_NODE */ || parentElement.nodeType === 11 /* DOCUMENT_FRAGMENT_NODE */ || parentElement.nodeType === 9 /* DOCUMENT_NODE */)) {\n      const children = parentElement.children;\n      const index = children.indexOf(this) - 1;\n      return parentElement.children[index] || null;\n    }\n    return null;\n  }\n  getElementsByClassName(classNames) {\n    const classes = classNames.trim().split(\" \").filter(c => c.length > 0);\n    const results = [];\n    getElementsByClassName(this, classes, results);\n    return results;\n  }\n  getElementsByTagName(tagName) {\n    const results = [];\n    getElementsByTagName(this, tagName.toLowerCase(), results);\n    return results;\n  }\n  querySelector(selector) {\n    return selectOne(selector, this);\n  }\n  querySelectorAll(selector) {\n    return selectAll(selector, this);\n  }\n  removeAttribute(attrName) {\n    if (attrName === \"style\") {\n      delete this.__style;\n    } else {\n      const attr = this.attributes.getNamedItem(attrName);\n      if (attr != null) {\n        this.attributes.removeNamedItemNS(attr);\n        if (checkAttributeChanged(this) === true) {\n          attributeChanged(this, attrName, attr.value, null);\n        }\n      }\n    }\n  }\n  removeAttributeNS(namespaceURI, attrName) {\n    const attr = this.attributes.getNamedItemNS(namespaceURI, attrName);\n    if (attr != null) {\n      this.attributes.removeNamedItemNS(attr);\n      if (checkAttributeChanged(this) === true) {\n        attributeChanged(this, attrName, attr.value, null);\n      }\n    }\n  }\n  removeEventListener(type, handler) {\n    removeEventListener(this, type, handler);\n  }\n  setAttribute(attrName, value) {\n    if (attrName === \"style\") {\n      this.style = value;\n    } else {\n      const attributes = this.attributes;\n      let attr = attributes.getNamedItem(attrName);\n      const checkAttrChanged = checkAttributeChanged(this);\n      if (attr != null) {\n        if (checkAttrChanged === true) {\n          const oldValue = attr.value;\n          attr.value = value;\n          if (oldValue !== attr.value) {\n            attributeChanged(this, attr.name, oldValue, attr.value);\n          }\n        } else {\n          attr.value = value;\n        }\n      } else {\n        if (attributes.caseInsensitive) {\n          attrName = attrName.toLowerCase();\n        }\n        attr = new MockAttr(attrName, value);\n        attributes.__items.push(attr);\n        if (checkAttrChanged === true) {\n          attributeChanged(this, attrName, null, attr.value);\n        }\n      }\n    }\n  }\n  setAttributeNS(namespaceURI, attrName, value) {\n    const attributes = this.attributes;\n    let attr = attributes.getNamedItemNS(namespaceURI, attrName);\n    const checkAttrChanged = checkAttributeChanged(this);\n    if (attr != null) {\n      if (checkAttrChanged === true) {\n        const oldValue = attr.value;\n        attr.value = value;\n        if (oldValue !== attr.value) {\n          attributeChanged(this, attr.name, oldValue, attr.value);\n        }\n      } else {\n        attr.value = value;\n      }\n    } else {\n      attr = new MockAttr(attrName, value, namespaceURI);\n      attributes.__items.push(attr);\n      if (checkAttrChanged === true) {\n        attributeChanged(this, attrName, null, attr.value);\n      }\n    }\n  }\n  get style() {\n    if (this.__style == null) {\n      this.__style = createCSSStyleDeclaration();\n    }\n    return this.__style;\n  }\n  set style(val) {\n    if (typeof val === \"string\") {\n      if (this.__style == null) {\n        this.__style = createCSSStyleDeclaration();\n      }\n      this.__style.cssText = val;\n    } else {\n      this.__style = val;\n    }\n  }\n  get tabIndex() {\n    return parseInt(this.getAttributeNS(null, \"tabindex\") || \"-1\", 10);\n  }\n  set tabIndex(value) {\n    this.setAttributeNS(null, \"tabindex\", value);\n  }\n  get tagName() {\n    var _a;\n    return (_a = this.nodeName) != null ? _a : \"\";\n  }\n  set tagName(value) {\n    this.nodeName = value;\n  }\n  get textContent() {\n    const text = [];\n    getTextContent(this.childNodes, text);\n    return text.join(\"\");\n  }\n  set textContent(value) {\n    setTextContent(this, value);\n  }\n  get title() {\n    return this.getAttributeNS(null, \"title\") || \"\";\n  }\n  set title(value) {\n    this.setAttributeNS(null, \"title\", value);\n  }\n  animate() {}\n  onanimationstart() {}\n  onanimationend() {}\n  onanimationiteration() {}\n  onabort() {}\n  onauxclick() {}\n  onbeforecopy() {}\n  onbeforecut() {}\n  onbeforepaste() {}\n  onblur() {}\n  oncancel() {}\n  oncanplay() {}\n  oncanplaythrough() {}\n  onchange() {}\n  onclick() {}\n  onclose() {}\n  oncontextmenu() {}\n  oncopy() {}\n  oncuechange() {}\n  oncut() {}\n  ondblclick() {}\n  ondrag() {}\n  ondragend() {}\n  ondragenter() {}\n  ondragleave() {}\n  ondragover() {}\n  ondragstart() {}\n  ondrop() {}\n  ondurationchange() {}\n  onemptied() {}\n  onended() {}\n  onerror() {}\n  onfocus() {}\n  onfocusin() {}\n  onfocusout() {}\n  onformdata() {}\n  onfullscreenchange() {}\n  onfullscreenerror() {}\n  ongotpointercapture() {}\n  oninput() {}\n  oninvalid() {}\n  onkeydown() {}\n  onkeypress() {}\n  onkeyup() {}\n  onload() {}\n  onloadeddata() {}\n  onloadedmetadata() {}\n  onloadstart() {}\n  onlostpointercapture() {}\n  onmousedown() {}\n  onmouseenter() {}\n  onmouseleave() {}\n  onmousemove() {}\n  onmouseout() {}\n  onmouseover() {}\n  onmouseup() {}\n  onmousewheel() {}\n  onpaste() {}\n  onpause() {}\n  onplay() {}\n  onplaying() {}\n  onpointercancel() {}\n  onpointerdown() {}\n  onpointerenter() {}\n  onpointerleave() {}\n  onpointermove() {}\n  onpointerout() {}\n  onpointerover() {}\n  onpointerup() {}\n  onprogress() {}\n  onratechange() {}\n  onreset() {}\n  onresize() {}\n  onscroll() {}\n  onsearch() {}\n  onseeked() {}\n  onseeking() {}\n  onselect() {}\n  onselectstart() {}\n  onstalled() {}\n  onsubmit() {}\n  onsuspend() {}\n  ontimeupdate() {}\n  ontoggle() {}\n  onvolumechange() {}\n  onwaiting() {}\n  onwebkitfullscreenchange() {}\n  onwebkitfullscreenerror() {}\n  onwheel() {}\n  requestFullscreen() {}\n  scrollBy() {}\n  scrollTo() {}\n  scrollIntoView() {}\n  toString(opts) {\n    return serializeNodeToHtml(this, opts);\n  }\n};\nfunction getElementsByClassName(elm, classNames, foundElms) {\n  const children = elm.children;\n  for (let i = 0, ii = children.length; i < ii; i++) {\n    const childElm = children[i];\n    for (let j = 0, jj = classNames.length; j < jj; j++) {\n      if (childElm.classList.contains(classNames[j])) {\n        foundElms.push(childElm);\n      }\n    }\n    getElementsByClassName(childElm, classNames, foundElms);\n  }\n}\nfunction getElementsByTagName(elm, tagName, foundElms) {\n  var _a;\n  const children = elm.children;\n  for (let i = 0, ii = children.length; i < ii; i++) {\n    const childElm = children[i];\n    if (tagName === \"*\" || ((_a = childElm.nodeName) != null ? _a : \"\").toLowerCase() === tagName) {\n      foundElms.push(childElm);\n    }\n    getElementsByTagName(childElm, tagName, foundElms);\n  }\n}\nfunction resetElement(elm) {\n  resetEventListeners(elm);\n  delete elm.__attributeMap;\n  delete elm.__shadowRoot;\n  delete elm.__style;\n}\nfunction insertBefore(parentNode, newNode, referenceNode) {\n  if (newNode !== referenceNode) {\n    newNode.remove();\n    newNode.parentNode = parentNode;\n    newNode.ownerDocument = parentNode.ownerDocument;\n    if (referenceNode != null) {\n      const index = parentNode.childNodes.indexOf(referenceNode);\n      if (index > -1) {\n        parentNode.childNodes.splice(index, 0, newNode);\n      } else {\n        throw new Error(`referenceNode not found in parentNode.childNodes`);\n      }\n    } else {\n      parentNode.childNodes.push(newNode);\n    }\n    connectNode(parentNode.ownerDocument, newNode);\n  }\n  return newNode;\n}\nvar MockHTMLElement = class extends MockElement {\n  constructor(ownerDocument, nodeName) {\n    super(ownerDocument, typeof nodeName === \"string\" ? nodeName.toUpperCase() : null);\n    this.__namespaceURI = \"http://www.w3.org/1999/xhtml\";\n  }\n  get tagName() {\n    var _a;\n    return (_a = this.nodeName) != null ? _a : \"\";\n  }\n  set tagName(value) {\n    this.nodeName = value;\n  }\n  /**\n   * A node’s parent of type Element is known as its parent element.\n   * If the node has a parent of a different type, its parent element\n   * is null.\n   * @returns MockElement\n   */\n  get parentElement() {\n    if (this.nodeName === \"HTML\") {\n      return null;\n    }\n    return super.parentElement;\n  }\n  get attributes() {\n    if (this.__attributeMap == null) {\n      const attrMap = createAttributeProxy(true);\n      this.__attributeMap = attrMap;\n      return attrMap;\n    }\n    return this.__attributeMap;\n  }\n  set attributes(attrs) {\n    this.__attributeMap = attrs;\n  }\n};\nvar MockTextNode = class _MockTextNode extends MockNode2 {\n  constructor(ownerDocument, text) {\n    super(ownerDocument, 3 /* TEXT_NODE */, \"#text\" /* TEXT_NODE */, text);\n  }\n  cloneNode(_deep) {\n    return new _MockTextNode(null, this.nodeValue);\n  }\n  get textContent() {\n    return this.nodeValue;\n  }\n  set textContent(text) {\n    this.nodeValue = text;\n  }\n  get data() {\n    return this.nodeValue;\n  }\n  set data(text) {\n    this.nodeValue = text;\n  }\n  get wholeText() {\n    if (this.parentNode != null) {\n      const text = [];\n      for (let i = 0, ii = this.parentNode.childNodes.length; i < ii; i++) {\n        const childNode = this.parentNode.childNodes[i];\n        if (childNode.nodeType === 3 /* TEXT_NODE */) {\n          text.push(childNode.nodeValue);\n        }\n      }\n      return text.join(\"\");\n    }\n    return this.nodeValue;\n  }\n};\nfunction getTextContent(childNodes, text) {\n  for (let i = 0, ii = childNodes.length; i < ii; i++) {\n    const childNode = childNodes[i];\n    if (childNode.nodeType === 3 /* TEXT_NODE */) {\n      text.push(childNode.nodeValue);\n    } else if (childNode.nodeType === 1 /* ELEMENT_NODE */) {\n      getTextContent(childNode.childNodes, text);\n    }\n  }\n}\nfunction setTextContent(elm, text) {\n  for (let i = elm.childNodes.length - 1; i >= 0; i--) {\n    elm.removeChild(elm.childNodes[i]);\n  }\n  const textNode = new MockTextNode(elm.ownerDocument, text);\n  elm.appendChild(textNode);\n}\n\n// src/mock-doc/comment-node.ts\nvar MockComment = class _MockComment extends MockNode2 {\n  constructor(ownerDocument, data) {\n    super(ownerDocument, 8 /* COMMENT_NODE */, \"#comment\" /* COMMENT_NODE */, data);\n  }\n  cloneNode(_deep) {\n    return new _MockComment(null, this.nodeValue);\n  }\n  get textContent() {\n    return this.nodeValue;\n  }\n  set textContent(text) {\n    this.nodeValue = text;\n  }\n};\n\n// src/mock-doc/document-fragment.ts\nvar MockDocumentFragment = class _MockDocumentFragment extends MockHTMLElement {\n  constructor(ownerDocument) {\n    super(ownerDocument, null);\n    this.nodeName = \"#document-fragment\" /* DOCUMENT_FRAGMENT_NODE */;\n    this.nodeType = 11 /* DOCUMENT_FRAGMENT_NODE */;\n  }\n  getElementById(id) {\n    return getElementById(this, id);\n  }\n  cloneNode(deep) {\n    const cloned = new _MockDocumentFragment(null);\n    if (deep) {\n      for (let i = 0, ii = this.childNodes.length; i < ii; i++) {\n        const childNode = this.childNodes[i];\n        if (childNode.nodeType === 1 /* ELEMENT_NODE */ || childNode.nodeType === 3 /* TEXT_NODE */ || childNode.nodeType === 8 /* COMMENT_NODE */) {\n          const clonedChildNode = this.childNodes[i].cloneNode(true);\n          cloned.appendChild(clonedChildNode);\n        }\n      }\n    }\n    return cloned;\n  }\n};\n\n// src/mock-doc/document-type-node.ts\nvar MockDocumentTypeNode = class extends MockHTMLElement {\n  constructor(ownerDocument) {\n    super(ownerDocument, \"!DOCTYPE\");\n    this.nodeType = 10 /* DOCUMENT_TYPE_NODE */;\n    this.setAttribute(\"html\", \"\");\n  }\n};\n\n// src/mock-doc/css-style-sheet.ts\nvar MockCSSRule = class {\n  constructor(parentStyleSheet) {\n    this.parentStyleSheet = parentStyleSheet;\n    this.cssText = \"\";\n    this.type = 0;\n  }\n};\nvar MockCSSStyleSheet = class {\n  constructor(ownerNode) {\n    this.type = \"text/css\";\n    this.parentStyleSheet = null;\n    this.cssRules = [];\n    this.ownerNode = ownerNode;\n  }\n  get rules() {\n    return this.cssRules;\n  }\n  set rules(rules) {\n    this.cssRules = rules;\n  }\n  deleteRule(index) {\n    if (index >= 0 && index < this.cssRules.length) {\n      this.cssRules.splice(index, 1);\n      updateStyleTextNode(this.ownerNode);\n    }\n  }\n  insertRule(rule, index = 0) {\n    if (typeof index !== \"number\") {\n      index = 0;\n    }\n    if (index < 0) {\n      index = 0;\n    }\n    if (index > this.cssRules.length) {\n      index = this.cssRules.length;\n    }\n    const cssRule = new MockCSSRule(this);\n    cssRule.cssText = rule;\n    this.cssRules.splice(index, 0, cssRule);\n    updateStyleTextNode(this.ownerNode);\n    return index;\n  }\n};\nfunction getStyleElementText(styleElm) {\n  const output = [];\n  for (let i = 0; i < styleElm.childNodes.length; i++) {\n    output.push(styleElm.childNodes[i].nodeValue);\n  }\n  return output.join(\"\");\n}\nfunction setStyleElementText(styleElm, text) {\n  const sheet = styleElm.sheet;\n  sheet.cssRules.length = 0;\n  sheet.insertRule(text);\n  updateStyleTextNode(styleElm);\n}\nfunction updateStyleTextNode(styleElm) {\n  const childNodeLen = styleElm.childNodes.length;\n  if (childNodeLen > 1) {\n    for (let i = childNodeLen - 1; i >= 1; i--) {\n      styleElm.removeChild(styleElm.childNodes[i]);\n    }\n  } else if (childNodeLen < 1) {\n    styleElm.appendChild(styleElm.ownerDocument.createTextNode(\"\"));\n  }\n  const textNode = styleElm.childNodes[0];\n  textNode.nodeValue = styleElm.sheet.cssRules.map(r => r.cssText).join(\"\\n\");\n}\n\n// src/mock-doc/element.ts\nfunction createElement(ownerDocument, tagName) {\n  if (typeof tagName !== \"string\" || tagName === \"\" || !/^[a-z0-9-_:]+$/i.test(tagName)) {\n    throw new Error(`The tag name provided (${tagName}) is not a valid name.`);\n  }\n  tagName = tagName.toLowerCase();\n  switch (tagName) {\n    case \"a\":\n      return new MockAnchorElement(ownerDocument);\n    case \"base\":\n      return new MockBaseElement(ownerDocument);\n    case \"button\":\n      return new MockButtonElement(ownerDocument);\n    case \"canvas\":\n      return new MockCanvasElement(ownerDocument);\n    case \"form\":\n      return new MockFormElement(ownerDocument);\n    case \"img\":\n      return new MockImageElement(ownerDocument);\n    case \"input\":\n      return new MockInputElement(ownerDocument);\n    case \"link\":\n      return new MockLinkElement(ownerDocument);\n    case \"meta\":\n      return new MockMetaElement(ownerDocument);\n    case \"script\":\n      return new MockScriptElement(ownerDocument);\n    case \"style\":\n      return new MockStyleElement(ownerDocument);\n    case \"template\":\n      return new MockTemplateElement(ownerDocument);\n    case \"title\":\n      return new MockTitleElement(ownerDocument);\n    case \"ul\":\n      return new MockUListElement(ownerDocument);\n  }\n  if (ownerDocument != null && tagName.includes(\"-\")) {\n    const win = ownerDocument.defaultView;\n    if (win != null && win.customElements != null) {\n      return createCustomElement(win.customElements, ownerDocument, tagName);\n    }\n  }\n  return new MockHTMLElement(ownerDocument, tagName);\n}\nfunction createElementNS(ownerDocument, namespaceURI, tagName) {\n  if (namespaceURI === \"http://www.w3.org/1999/xhtml\") {\n    return createElement(ownerDocument, tagName);\n  } else if (namespaceURI === \"http://www.w3.org/2000/svg\") {\n    switch (tagName.toLowerCase()) {\n      case \"text\":\n      case \"tspan\":\n      case \"tref\":\n      case \"altglyph\":\n      case \"textpath\":\n        return new MockSVGTextContentElement(ownerDocument, tagName);\n      case \"circle\":\n      case \"ellipse\":\n      case \"image\":\n      case \"line\":\n      case \"path\":\n      case \"polygon\":\n      case \"polyline\":\n      case \"rect\":\n      case \"use\":\n        return new MockSVGGraphicsElement(ownerDocument, tagName);\n      case \"svg\":\n        return new MockSVGSVGElement(ownerDocument, tagName);\n      default:\n        return new MockSVGElement(ownerDocument, tagName);\n    }\n  } else {\n    return new MockElement(ownerDocument, tagName, namespaceURI);\n  }\n}\nvar MockAnchorElement = class extends MockHTMLElement {\n  constructor(ownerDocument) {\n    super(ownerDocument, \"a\");\n  }\n  get href() {\n    return fullUrl(this, \"href\");\n  }\n  set href(value) {\n    this.setAttribute(\"href\", value);\n  }\n  get pathname() {\n    return new URL(this.href).pathname;\n  }\n};\nvar MockButtonElement = class extends MockHTMLElement {\n  constructor(ownerDocument) {\n    super(ownerDocument, \"button\");\n  }\n};\npatchPropAttributes(MockButtonElement.prototype, {\n  type: String\n}, {\n  type: \"submit\"\n});\nvar MockImageElement = class extends MockHTMLElement {\n  constructor(ownerDocument) {\n    super(ownerDocument, \"img\");\n  }\n  get draggable() {\n    return this.getAttributeNS(null, \"draggable\") !== \"false\";\n  }\n  set draggable(value) {\n    this.setAttributeNS(null, \"draggable\", value);\n  }\n  get src() {\n    return fullUrl(this, \"src\");\n  }\n  set src(value) {\n    this.setAttribute(\"src\", value);\n  }\n};\npatchPropAttributes(MockImageElement.prototype, {\n  height: Number,\n  width: Number\n});\nvar MockInputElement = class extends MockHTMLElement {\n  constructor(ownerDocument) {\n    super(ownerDocument, \"input\");\n  }\n  get list() {\n    const listId = this.getAttribute(\"list\");\n    if (listId) {\n      return this.ownerDocument.getElementById(listId);\n    }\n    return null;\n  }\n};\npatchPropAttributes(MockInputElement.prototype, {\n  accept: String,\n  autocomplete: String,\n  autofocus: Boolean,\n  capture: String,\n  checked: Boolean,\n  disabled: Boolean,\n  form: String,\n  formaction: String,\n  formenctype: String,\n  formmethod: String,\n  formnovalidate: String,\n  formtarget: String,\n  height: Number,\n  inputmode: String,\n  max: String,\n  maxLength: Number,\n  min: String,\n  minLength: Number,\n  multiple: Boolean,\n  name: String,\n  pattern: String,\n  placeholder: String,\n  required: Boolean,\n  readOnly: Boolean,\n  size: Number,\n  spellCheck: Boolean,\n  src: String,\n  step: String,\n  type: String,\n  value: String,\n  width: Number\n}, {\n  type: \"text\"\n});\nvar MockFormElement = class extends MockHTMLElement {\n  constructor(ownerDocument) {\n    super(ownerDocument, \"form\");\n  }\n};\npatchPropAttributes(MockFormElement.prototype, {\n  name: String\n});\nvar MockLinkElement = class extends MockHTMLElement {\n  constructor(ownerDocument) {\n    super(ownerDocument, \"link\");\n  }\n  get href() {\n    return fullUrl(this, \"href\");\n  }\n  set href(value) {\n    this.setAttribute(\"href\", value);\n  }\n};\npatchPropAttributes(MockLinkElement.prototype, {\n  crossorigin: String,\n  media: String,\n  rel: String,\n  type: String\n});\nvar MockMetaElement = class extends MockHTMLElement {\n  constructor(ownerDocument) {\n    super(ownerDocument, \"meta\");\n  }\n};\npatchPropAttributes(MockMetaElement.prototype, {\n  charset: String,\n  content: String,\n  name: String\n});\nvar MockScriptElement = class extends MockHTMLElement {\n  constructor(ownerDocument) {\n    super(ownerDocument, \"script\");\n  }\n  get src() {\n    return fullUrl(this, \"src\");\n  }\n  set src(value) {\n    this.setAttribute(\"src\", value);\n  }\n};\npatchPropAttributes(MockScriptElement.prototype, {\n  type: String\n});\nvar MockDOMMatrix = class _MockDOMMatrix {\n  constructor() {\n    this.a = 1;\n    this.b = 0;\n    this.c = 0;\n    this.d = 1;\n    this.e = 0;\n    this.f = 0;\n    this.m11 = 1;\n    this.m12 = 0;\n    this.m13 = 0;\n    this.m14 = 0;\n    this.m21 = 0;\n    this.m22 = 1;\n    this.m23 = 0;\n    this.m24 = 0;\n    this.m31 = 0;\n    this.m32 = 0;\n    this.m33 = 1;\n    this.m34 = 0;\n    this.m41 = 0;\n    this.m42 = 0;\n    this.m43 = 0;\n    this.m44 = 1;\n    this.is2D = true;\n    this.isIdentity = true;\n  }\n  static fromMatrix() {\n    return new _MockDOMMatrix();\n  }\n  inverse() {\n    return new _MockDOMMatrix();\n  }\n  flipX() {\n    return new _MockDOMMatrix();\n  }\n  flipY() {\n    return new _MockDOMMatrix();\n  }\n  multiply() {\n    return new _MockDOMMatrix();\n  }\n  rotate() {\n    return new _MockDOMMatrix();\n  }\n  rotateAxisAngle() {\n    return new _MockDOMMatrix();\n  }\n  rotateFromVector() {\n    return new _MockDOMMatrix();\n  }\n  scale() {\n    return new _MockDOMMatrix();\n  }\n  scaleNonUniform() {\n    return new _MockDOMMatrix();\n  }\n  skewX() {\n    return new _MockDOMMatrix();\n  }\n  skewY() {\n    return new _MockDOMMatrix();\n  }\n  toJSON() {}\n  toString() {}\n  transformPoint() {\n    return new MockDOMPoint();\n  }\n  translate() {\n    return new _MockDOMMatrix();\n  }\n};\nvar MockDOMPoint = class {\n  constructor() {\n    this.w = 1;\n    this.x = 0;\n    this.y = 0;\n    this.z = 0;\n  }\n  toJSON() {}\n  matrixTransform() {\n    return new MockDOMMatrix();\n  }\n};\nvar MockSVGRect = class {\n  constructor() {\n    this.height = 10;\n    this.width = 10;\n    this.x = 0;\n    this.y = 0;\n  }\n};\nvar MockStyleElement = class extends MockHTMLElement {\n  constructor(ownerDocument) {\n    super(ownerDocument, \"style\");\n    this.sheet = new MockCSSStyleSheet(this);\n  }\n  get innerHTML() {\n    return getStyleElementText(this);\n  }\n  set innerHTML(value) {\n    setStyleElementText(this, value);\n  }\n  get innerText() {\n    return getStyleElementText(this);\n  }\n  set innerText(value) {\n    setStyleElementText(this, value);\n  }\n  get textContent() {\n    return getStyleElementText(this);\n  }\n  set textContent(value) {\n    setStyleElementText(this, value);\n  }\n};\nvar MockSVGElement = class extends MockElement {\n  constructor() {\n    super(...arguments);\n    this.__namespaceURI = \"http://www.w3.org/2000/svg\";\n  }\n  // SVGElement properties and methods\n  get ownerSVGElement() {\n    return null;\n  }\n  get viewportElement() {\n    return null;\n  }\n  onunload() {}\n  // SVGGeometryElement properties and methods\n  get pathLength() {\n    return 0;\n  }\n  isPointInFill(_pt) {\n    return false;\n  }\n  isPointInStroke(_pt) {\n    return false;\n  }\n  getTotalLength() {\n    return 0;\n  }\n};\nvar MockSVGGraphicsElement = class extends MockSVGElement {\n  getBBox(_options) {\n    return new MockSVGRect();\n  }\n  getCTM() {\n    return new MockDOMMatrix();\n  }\n  getScreenCTM() {\n    return new MockDOMMatrix();\n  }\n};\nvar MockSVGSVGElement = class extends MockSVGGraphicsElement {\n  createSVGPoint() {\n    return new MockDOMPoint();\n  }\n};\nvar MockSVGTextContentElement = class extends MockSVGGraphicsElement {\n  getComputedTextLength() {\n    return 0;\n  }\n};\nvar MockBaseElement = class extends MockHTMLElement {\n  constructor(ownerDocument) {\n    super(ownerDocument, \"base\");\n  }\n  get href() {\n    return fullUrl(this, \"href\");\n  }\n  set href(value) {\n    this.setAttribute(\"href\", value);\n  }\n};\nvar MockTemplateElement = class _MockTemplateElement extends MockHTMLElement {\n  constructor(ownerDocument) {\n    super(ownerDocument, \"template\");\n    this.content = new MockDocumentFragment(ownerDocument);\n  }\n  get innerHTML() {\n    return this.content.innerHTML;\n  }\n  set innerHTML(html) {\n    this.content.innerHTML = html;\n  }\n  cloneNode(deep) {\n    const cloned = new _MockTemplateElement(null);\n    cloned.attributes = cloneAttributes(this.attributes);\n    const styleCssText = this.getAttribute(\"style\");\n    if (styleCssText != null && styleCssText.length > 0) {\n      cloned.setAttribute(\"style\", styleCssText);\n    }\n    cloned.content = this.content.cloneNode(deep);\n    if (deep) {\n      for (let i = 0, ii = this.childNodes.length; i < ii; i++) {\n        const clonedChildNode = this.childNodes[i].cloneNode(true);\n        cloned.appendChild(clonedChildNode);\n      }\n    }\n    return cloned;\n  }\n};\nvar MockTitleElement = class extends MockHTMLElement {\n  constructor(ownerDocument) {\n    super(ownerDocument, \"title\");\n  }\n  get text() {\n    return this.textContent;\n  }\n  set text(value) {\n    this.textContent = value;\n  }\n};\nvar MockUListElement = class extends MockHTMLElement {\n  constructor(ownerDocument) {\n    super(ownerDocument, \"ul\");\n  }\n};\nvar MockCanvasElement = class extends MockHTMLElement {\n  constructor(ownerDocument) {\n    super(ownerDocument, \"canvas\");\n  }\n  getContext() {\n    return {\n      fillRect() {\n        return;\n      },\n      clearRect() {},\n      getImageData: function (_, __, w, h) {\n        return {\n          data: new Array(w * h * 4)\n        };\n      },\n      putImageData() {},\n      createImageData: function () {\n        return [];\n      },\n      setTransform() {},\n      drawImage() {},\n      save() {},\n      fillText() {},\n      restore() {},\n      beginPath() {},\n      moveTo() {},\n      lineTo() {},\n      closePath() {},\n      stroke() {},\n      translate() {},\n      scale() {},\n      rotate() {},\n      arc() {},\n      fill() {},\n      measureText() {\n        return {\n          width: 0\n        };\n      },\n      transform() {},\n      rect() {},\n      clip() {}\n    };\n  }\n};\nfunction fullUrl(elm, attrName) {\n  const val = elm.getAttribute(attrName) || \"\";\n  if (elm.ownerDocument != null) {\n    const win = elm.ownerDocument.defaultView;\n    if (win != null) {\n      const loc = win.location;\n      if (loc != null) {\n        try {\n          const url = new URL(val, loc.href);\n          return url.href;\n        } catch (e2) {}\n      }\n    }\n  }\n  return val.replace(/\\'|\\\"/g, \"\").trim();\n}\nfunction patchPropAttributes(prototype, attrs, defaults = {}) {\n  Object.keys(attrs).forEach(propName => {\n    const attr = attrs[propName];\n    const defaultValue = defaults[propName];\n    if (attr === Boolean) {\n      Object.defineProperty(prototype, propName, {\n        get() {\n          return this.hasAttribute(propName);\n        },\n        set(value) {\n          if (value) {\n            this.setAttribute(propName, \"\");\n          } else {\n            this.removeAttribute(propName);\n          }\n        }\n      });\n    } else if (attr === Number) {\n      Object.defineProperty(prototype, propName, {\n        get() {\n          const value = this.getAttribute(propName);\n          return value ? parseInt(value, 10) : defaultValue === void 0 ? 0 : defaultValue;\n        },\n        set(value) {\n          this.setAttribute(propName, value);\n        }\n      });\n    } else {\n      Object.defineProperty(prototype, propName, {\n        get() {\n          return this.hasAttribute(propName) ? this.getAttribute(propName) : defaultValue || \"\";\n        },\n        set(value) {\n          this.setAttribute(propName, value);\n        }\n      });\n    }\n  });\n}\nMockElement.prototype.cloneNode = function (deep) {\n  const cloned = createElement(this.ownerDocument, this.nodeName);\n  cloned.attributes = cloneAttributes(this.attributes);\n  const styleCssText = this.getAttribute(\"style\");\n  if (styleCssText != null && styleCssText.length > 0) {\n    cloned.setAttribute(\"style\", styleCssText);\n  }\n  if (deep) {\n    for (let i = 0, ii = this.childNodes.length; i < ii; i++) {\n      const clonedChildNode = this.childNodes[i].cloneNode(true);\n      cloned.appendChild(clonedChildNode);\n    }\n  }\n  return cloned;\n};\n\n// src/mock-doc/parse-html.ts\nvar sharedDocument;\nfunction parseHtmlToDocument(html, ownerDocument = null) {\n  if (ownerDocument == null) {\n    if (sharedDocument == null) {\n      sharedDocument = new MockDocument();\n    }\n    ownerDocument = sharedDocument;\n  }\n  return parseDocumentUtil(ownerDocument, html);\n}\nfunction parseHtmlToFragment(html, ownerDocument = null) {\n  if (ownerDocument == null) {\n    if (sharedDocument == null) {\n      sharedDocument = new MockDocument();\n    }\n    ownerDocument = sharedDocument;\n  }\n  return parseFragmentUtil(ownerDocument, html);\n}\n\n// src/mock-doc/console.ts\nvar consoleNoop = () => {};\nfunction createConsole() {\n  return {\n    debug: consoleNoop,\n    error: consoleNoop,\n    info: consoleNoop,\n    log: consoleNoop,\n    warn: consoleNoop,\n    dir: consoleNoop,\n    dirxml: consoleNoop,\n    table: consoleNoop,\n    trace: consoleNoop,\n    group: consoleNoop,\n    groupCollapsed: consoleNoop,\n    groupEnd: consoleNoop,\n    clear: consoleNoop,\n    count: consoleNoop,\n    countReset: consoleNoop,\n    assert: consoleNoop,\n    profile: consoleNoop,\n    profileEnd: consoleNoop,\n    time: consoleNoop,\n    timeLog: consoleNoop,\n    timeEnd: consoleNoop,\n    timeStamp: consoleNoop,\n    context: consoleNoop,\n    memory: consoleNoop\n  };\n}\n\n// src/mock-doc/headers.ts\nvar MockHeaders = class {\n  constructor(init) {\n    this._values = [];\n    if (typeof init === \"object\") {\n      if (typeof init[Symbol.iterator] === \"function\") {\n        const kvs = [];\n        for (const kv of init) {\n          if (typeof kv[Symbol.iterator] === \"function\") {\n            kvs.push([...kv]);\n          }\n        }\n        for (const kv of kvs) {\n          this.append(kv[0], kv[1]);\n        }\n      } else {\n        for (const key in init) {\n          this.append(key, init[key]);\n        }\n      }\n    }\n  }\n  append(key, value) {\n    this._values.push([key, value + \"\"]);\n  }\n  delete(key) {\n    key = key.toLowerCase();\n    for (let i = this._values.length - 1; i >= 0; i--) {\n      if (this._values[i][0].toLowerCase() === key) {\n        this._values.splice(i, 1);\n      }\n    }\n  }\n  entries() {\n    const entries = [];\n    for (const kv of this.keys()) {\n      entries.push([kv, this.get(kv)]);\n    }\n    let index = -1;\n    return {\n      next() {\n        index++;\n        return {\n          value: entries[index],\n          done: !entries[index]\n        };\n      },\n      [Symbol.iterator]() {\n        return this;\n      }\n    };\n  }\n  forEach(cb) {\n    for (const kv of this.entries()) {\n      cb(kv[1], kv[0]);\n    }\n  }\n  get(key) {\n    const rtn = [];\n    key = key.toLowerCase();\n    for (const kv of this._values) {\n      if (kv[0].toLowerCase() === key) {\n        rtn.push(kv[1]);\n      }\n    }\n    return rtn.length > 0 ? rtn.join(\", \") : null;\n  }\n  has(key) {\n    key = key.toLowerCase();\n    for (const kv of this._values) {\n      if (kv[0].toLowerCase() === key) {\n        return true;\n      }\n    }\n    return false;\n  }\n  keys() {\n    const keys = [];\n    for (const kv of this._values) {\n      const key = kv[0].toLowerCase();\n      if (!keys.includes(key)) {\n        keys.push(key);\n      }\n    }\n    let index = -1;\n    return {\n      next() {\n        index++;\n        return {\n          value: keys[index],\n          done: !keys[index]\n        };\n      },\n      [Symbol.iterator]() {\n        return this;\n      }\n    };\n  }\n  set(key, value) {\n    for (const kv of this._values) {\n      if (kv[0].toLowerCase() === key.toLowerCase()) {\n        kv[1] = value + \"\";\n        return;\n      }\n    }\n    this.append(key, value);\n  }\n  values() {\n    const values = this._values;\n    let index = -1;\n    return {\n      next() {\n        index++;\n        const done = !values[index];\n        return {\n          value: done ? void 0 : values[index][1],\n          done\n        };\n      },\n      [Symbol.iterator]() {\n        return this;\n      }\n    };\n  }\n  [Symbol.iterator]() {\n    return this.entries();\n  }\n};\n\n// src/mock-doc/parser.ts\nvar MockDOMParser = class {\n  parseFromString(htmlToParse, mimeType) {\n    if (mimeType !== \"text/html\") {\n      console.error(\"XML parsing not implemented yet, continuing as html\");\n    }\n    return parseHtmlToDocument(htmlToParse);\n  }\n};\n\n// src/mock-doc/request-response.ts\nvar MockRequest = class _MockRequest {\n  constructor(input, init = {}) {\n    this._method = \"GET\";\n    this._url = \"/\";\n    this.bodyUsed = false;\n    this.cache = \"default\";\n    this.credentials = \"same-origin\";\n    this.integrity = \"\";\n    this.keepalive = false;\n    this.mode = \"cors\";\n    this.redirect = \"follow\";\n    this.referrer = \"about:client\";\n    this.referrerPolicy = \"\";\n    if (typeof input === \"string\") {\n      this.url = input;\n    } else if (input) {\n      Object.assign(this, input);\n      this.headers = new MockHeaders(input.headers);\n    }\n    Object.assign(this, init);\n    if (init.headers) {\n      this.headers = new MockHeaders(init.headers);\n    }\n    if (!this.headers) {\n      this.headers = new MockHeaders();\n    }\n  }\n  get url() {\n    if (typeof this._url === \"string\") {\n      return new URL(this._url, location.href).href;\n    }\n    return new URL(\"/\", location.href).href;\n  }\n  set url(value) {\n    this._url = value;\n  }\n  get method() {\n    if (typeof this._method === \"string\") {\n      return this._method.toUpperCase();\n    }\n    return \"GET\";\n  }\n  set method(value) {\n    this._method = value;\n  }\n  clone() {\n    const clone = {\n      ...this\n    };\n    clone.headers = new MockHeaders(this.headers);\n    return new _MockRequest(clone);\n  }\n};\nvar MockResponse = class _MockResponse {\n  constructor(body, init = {}) {\n    this.ok = true;\n    this.status = 200;\n    this.statusText = \"\";\n    this.type = \"default\";\n    this.url = \"\";\n    this._body = body;\n    if (init) {\n      Object.assign(this, init);\n    }\n    this.headers = new MockHeaders(init.headers);\n  }\n  json() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      return JSON.parse(_this._body);\n    })();\n  }\n  text() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      return _this2._body;\n    })();\n  }\n  clone() {\n    const initClone = {\n      ...this\n    };\n    initClone.headers = new MockHeaders(this.headers);\n    return new _MockResponse(this._body, initClone);\n  }\n};\n\n// src/mock-doc/global.ts\nfunction setupGlobal(gbl) {\n  if (gbl.window == null) {\n    const win = gbl.window = new MockWindow();\n    WINDOW_FUNCTIONS.forEach(fnName => {\n      if (!(fnName in gbl)) {\n        gbl[fnName] = win[fnName].bind(win);\n      }\n    });\n    WINDOW_PROPS.forEach(propName => {\n      if (!(propName in gbl)) {\n        Object.defineProperty(gbl, propName, {\n          get() {\n            return win[propName];\n          },\n          set(val) {\n            win[propName] = val;\n          },\n          configurable: true,\n          enumerable: true\n        });\n      }\n    });\n    GLOBAL_CONSTRUCTORS.forEach(([cstrName]) => {\n      gbl[cstrName] = win[cstrName];\n    });\n  }\n  return gbl.window;\n}\nfunction teardownGlobal(gbl) {\n  const win = gbl.window;\n  if (win && typeof win.close === \"function\") {\n    win.close();\n  }\n}\nfunction patchWindow(winToBePatched) {\n  const mockWin = new MockWindow(false);\n  WINDOW_FUNCTIONS.forEach(fnName => {\n    if (typeof winToBePatched[fnName] !== \"function\") {\n      winToBePatched[fnName] = mockWin[fnName].bind(mockWin);\n    }\n  });\n  WINDOW_PROPS.forEach(propName => {\n    if (winToBePatched === void 0) {\n      Object.defineProperty(winToBePatched, propName, {\n        get() {\n          return mockWin[propName];\n        },\n        set(val) {\n          mockWin[propName] = val;\n        },\n        configurable: true,\n        enumerable: true\n      });\n    }\n  });\n}\nfunction addGlobalsToWindowPrototype(mockWinPrototype) {\n  GLOBAL_CONSTRUCTORS.forEach(([cstrName, Cstr]) => {\n    Object.defineProperty(mockWinPrototype, cstrName, {\n      get() {\n        return this[\"__\" + cstrName] || Cstr;\n      },\n      set(cstr) {\n        this[\"__\" + cstrName] = cstr;\n      },\n      configurable: true,\n      enumerable: true\n    });\n  });\n}\nvar WINDOW_FUNCTIONS = [\"addEventListener\", \"alert\", \"blur\", \"cancelAnimationFrame\", \"cancelIdleCallback\", \"clearInterval\", \"clearTimeout\", \"close\", \"confirm\", \"dispatchEvent\", \"focus\", \"getComputedStyle\", \"matchMedia\", \"open\", \"prompt\", \"removeEventListener\", \"requestAnimationFrame\", \"requestIdleCallback\", \"URL\"];\nvar WINDOW_PROPS = [\"customElements\", \"devicePixelRatio\", \"document\", \"history\", \"innerHeight\", \"innerWidth\", \"localStorage\", \"location\", \"navigator\", \"pageXOffset\", \"pageYOffset\", \"performance\", \"screenLeft\", \"screenTop\", \"screenX\", \"screenY\", \"scrollX\", \"scrollY\", \"sessionStorage\", \"CSS\", \"CustomEvent\", \"Event\", \"Element\", \"HTMLElement\", \"Node\", \"NodeList\", \"FocusEvent\", \"KeyboardEvent\", \"MouseEvent\"];\nvar GLOBAL_CONSTRUCTORS = [[\"CustomEvent\", MockCustomEvent], [\"Event\", MockEvent], [\"Headers\", MockHeaders], [\"FocusEvent\", MockFocusEvent], [\"KeyboardEvent\", MockKeyboardEvent], [\"MouseEvent\", MockMouseEvent], [\"Request\", MockRequest], [\"Response\", MockResponse], [\"DOMParser\", MockDOMParser], [\"HTMLAnchorElement\", MockAnchorElement], [\"HTMLBaseElement\", MockBaseElement], [\"HTMLButtonElement\", MockButtonElement], [\"HTMLCanvasElement\", MockCanvasElement], [\"HTMLFormElement\", MockFormElement], [\"HTMLImageElement\", MockImageElement], [\"HTMLInputElement\", MockInputElement], [\"HTMLLinkElement\", MockLinkElement], [\"HTMLMetaElement\", MockMetaElement], [\"HTMLScriptElement\", MockScriptElement], [\"HTMLStyleElement\", MockStyleElement], [\"HTMLTemplateElement\", MockTemplateElement], [\"HTMLTitleElement\", MockTitleElement], [\"HTMLUListElement\", MockUListElement]];\n\n// src/mock-doc/history.ts\nvar MockHistory = class {\n  constructor() {\n    this.items = [];\n  }\n  get length() {\n    return this.items.length;\n  }\n  back() {\n    this.go(-1);\n  }\n  forward() {\n    this.go(1);\n  }\n  go(_value) {}\n  pushState(_state, _title, _url) {}\n  replaceState(_state, _title, _url) {}\n};\n\n// src/mock-doc/intersection-observer.ts\nvar MockIntersectionObserver = class {\n  constructor() {}\n  disconnect() {}\n  observe() {}\n  takeRecords() {\n    return [];\n  }\n  unobserve() {}\n};\n\n// src/mock-doc/location.ts\nvar MockLocation = class {\n  constructor() {\n    this.ancestorOrigins = null;\n    this.protocol = \"\";\n    this.host = \"\";\n    this.hostname = \"\";\n    this.port = \"\";\n    this.pathname = \"\";\n    this.search = \"\";\n    this.hash = \"\";\n    this.username = \"\";\n    this.password = \"\";\n    this.origin = \"\";\n    this._href = \"\";\n  }\n  get href() {\n    return this._href;\n  }\n  set href(value) {\n    const url = new URL(value, \"http://mockdoc.stenciljs.com\");\n    this._href = url.href;\n    this.protocol = url.protocol;\n    this.host = url.host;\n    this.hostname = url.hostname;\n    this.port = url.port;\n    this.pathname = url.pathname;\n    this.search = url.search;\n    this.hash = url.hash;\n    this.username = url.username;\n    this.password = url.password;\n    this.origin = url.origin;\n  }\n  assign(_url) {}\n  reload(_forcedReload) {}\n  replace(_url) {}\n  toString() {\n    return this.href;\n  }\n};\n\n// src/mock-doc/navigator.ts\nvar MockNavigator = class {\n  constructor() {\n    this.appCodeName = \"MockNavigator\";\n    this.appName = \"MockNavigator\";\n    this.appVersion = \"MockNavigator\";\n    this.platform = \"MockNavigator\";\n    this.userAgent = \"MockNavigator\";\n  }\n};\n\n// src/mock-doc/performance.ts\nvar MockPerformance = class {\n  constructor() {\n    this.timeOrigin = Date.now();\n    this.eventCounts = /* @__PURE__ */new Map();\n  }\n  addEventListener() {}\n  clearMarks() {}\n  clearMeasures() {}\n  clearResourceTimings() {}\n  dispatchEvent() {\n    return true;\n  }\n  getEntries() {\n    return [];\n  }\n  getEntriesByName() {\n    return [];\n  }\n  getEntriesByType() {\n    return [];\n  }\n  // Stencil's implementation of `mark` is non-compliant with the `Performance` interface. Because Stencil will\n  // instantiate an instance of this class and may attempt to assign it to a variable of type `Performance`, the return\n  // type must match the `Performance` interface (rather than typing this function as returning `void` and ignoring the\n  // associated errors returned by the type checker)\n  // @ts-ignore\n  mark() {}\n  // Stencil's implementation of `measure` is non-compliant with the `Performance` interface. Because Stencil will\n  // instantiate an instance of this class and may attempt to assign it to a variable of type `Performance`, the return\n  // type must match the `Performance` interface (rather than typing this function as returning `void` and ignoring the\n  // associated errors returned by the type checker)\n  // @ts-ignore\n  measure() {}\n  get navigation() {\n    return {};\n  }\n  now() {\n    return Date.now() - this.timeOrigin;\n  }\n  get onresourcetimingbufferfull() {\n    return null;\n  }\n  removeEventListener() {}\n  setResourceTimingBufferSize() {}\n  get timing() {\n    return {};\n  }\n  toJSON() {}\n};\nfunction resetPerformance(perf) {\n  if (perf != null) {\n    try {\n      perf.timeOrigin = Date.now();\n    } catch (e2) {}\n  }\n}\n\n// src/mock-doc/storage.ts\nvar MockStorage = class {\n  constructor() {\n    this.items = /* @__PURE__ */new Map();\n  }\n  key(_value) {}\n  getItem(key) {\n    key = String(key);\n    if (this.items.has(key)) {\n      return this.items.get(key);\n    }\n    return null;\n  }\n  setItem(key, value) {\n    if (value == null) {\n      value = \"null\";\n    }\n    this.items.set(String(key), String(value));\n  }\n  removeItem(key) {\n    this.items.delete(String(key));\n  }\n  clear() {\n    this.items.clear();\n  }\n};\n\n// src/mock-doc/window.ts\nvar nativeClearInterval = clearInterval;\nvar nativeClearTimeout = clearTimeout;\nvar nativeSetInterval = setInterval;\nvar nativeSetTimeout = setTimeout;\nvar nativeURL = URL;\nvar MockWindow = class {\n  constructor(html = null) {\n    if (html !== false) {\n      this.document = new MockDocument(html, this);\n    } else {\n      this.document = null;\n    }\n    this.performance = new MockPerformance();\n    this.customElements = new MockCustomElementRegistry(this);\n    this.console = createConsole();\n    resetWindowDefaults(this);\n    resetWindowDimensions(this);\n  }\n  addEventListener(type, handler) {\n    addEventListener(this, type, handler);\n  }\n  alert(msg) {\n    if (this.console) {\n      this.console.debug(msg);\n    } else {\n      console.debug(msg);\n    }\n  }\n  blur() {}\n  cancelAnimationFrame(id) {\n    this.__clearTimeout(id);\n  }\n  cancelIdleCallback(id) {\n    this.__clearTimeout(id);\n  }\n  get CharacterData() {\n    if (this.__charDataCstr == null) {\n      const ownerDocument = this.document;\n      this.__charDataCstr = class extends MockNode2 {\n        constructor() {\n          super(ownerDocument, 0, \"test\", \"\");\n          throw new Error(\"Illegal constructor: cannot construct CharacterData\");\n        }\n      };\n    }\n    return this.__charDataCstr;\n  }\n  set CharacterData(charDataCstr) {\n    this.__charDataCstr = charDataCstr;\n  }\n  clearInterval(id) {\n    this.__clearInterval(id);\n  }\n  clearTimeout(id) {\n    this.__clearTimeout(id);\n  }\n  close() {\n    resetWindow(this);\n  }\n  confirm() {\n    return false;\n  }\n  get CSS() {\n    return {\n      supports: () => true\n    };\n  }\n  get Document() {\n    if (this.__docCstr == null) {\n      const win = this;\n      this.__docCstr = class extends MockDocument {\n        constructor() {\n          super(false, win);\n          throw new Error(\"Illegal constructor: cannot construct Document\");\n        }\n      };\n    }\n    return this.__docCstr;\n  }\n  set Document(docCstr) {\n    this.__docCstr = docCstr;\n  }\n  get DocumentFragment() {\n    if (this.__docFragCstr == null) {\n      const ownerDocument = this.document;\n      this.__docFragCstr = class extends MockDocumentFragment {\n        constructor() {\n          super(ownerDocument);\n          throw new Error(\"Illegal constructor: cannot construct DocumentFragment\");\n        }\n      };\n    }\n    return this.__docFragCstr;\n  }\n  set DocumentFragment(docFragCstr) {\n    this.__docFragCstr = docFragCstr;\n  }\n  get DocumentType() {\n    if (this.__docTypeCstr == null) {\n      const ownerDocument = this.document;\n      this.__docTypeCstr = class extends MockNode2 {\n        constructor() {\n          super(ownerDocument, 0, \"test\", \"\");\n          throw new Error(\"Illegal constructor: cannot construct DocumentType\");\n        }\n      };\n    }\n    return this.__docTypeCstr;\n  }\n  set DocumentType(docTypeCstr) {\n    this.__docTypeCstr = docTypeCstr;\n  }\n  get DOMTokenList() {\n    if (this.__domTokenListCstr == null) {\n      this.__domTokenListCstr = class MockDOMTokenList {};\n    }\n    return this.__domTokenListCstr;\n  }\n  set DOMTokenList(domTokenListCstr) {\n    this.__domTokenListCstr = domTokenListCstr;\n  }\n  dispatchEvent(ev) {\n    return dispatchEvent(this, ev);\n  }\n  get Element() {\n    if (this.__elementCstr == null) {\n      const ownerDocument = this.document;\n      this.__elementCstr = class extends MockElement {\n        constructor() {\n          super(ownerDocument, \"\");\n          throw new Error(\"Illegal constructor: cannot construct Element\");\n        }\n      };\n    }\n    return this.__elementCstr;\n  }\n  fetch(input, init) {\n    if (typeof fetch === \"function\") {\n      return fetch(input, init);\n    }\n    throw new Error(`fetch() not implemented`);\n  }\n  focus() {}\n  getComputedStyle(_) {\n    return {\n      cssText: \"\",\n      length: 0,\n      parentRule: null,\n      getPropertyPriority() {\n        return null;\n      },\n      getPropertyValue() {\n        return \"\";\n      },\n      item() {\n        return null;\n      },\n      removeProperty() {\n        return null;\n      },\n      setProperty() {\n        return null;\n      }\n    };\n  }\n  get globalThis() {\n    return this;\n  }\n  get history() {\n    if (this.__history == null) {\n      this.__history = new MockHistory();\n    }\n    return this.__history;\n  }\n  set history(hsty) {\n    this.__history = hsty;\n  }\n  get JSON() {\n    return JSON;\n  }\n  get HTMLElement() {\n    if (this.__htmlElementCstr == null) {\n      const ownerDocument = this.document;\n      this.__htmlElementCstr = class extends MockHTMLElement {\n        constructor() {\n          super(ownerDocument, \"\");\n          const observedAttributes = this.constructor.observedAttributes;\n          if (Array.isArray(observedAttributes) && typeof this.attributeChangedCallback === \"function\") {\n            observedAttributes.forEach(attrName => {\n              const attrValue = this.getAttribute(attrName);\n              if (attrValue != null) {\n                this.attributeChangedCallback(attrName, null, attrValue);\n              }\n            });\n          }\n        }\n      };\n    }\n    return this.__htmlElementCstr;\n  }\n  set HTMLElement(htmlElementCstr) {\n    this.__htmlElementCstr = htmlElementCstr;\n  }\n  get IntersectionObserver() {\n    return MockIntersectionObserver;\n  }\n  get localStorage() {\n    if (this.__localStorage == null) {\n      this.__localStorage = new MockStorage();\n    }\n    return this.__localStorage;\n  }\n  set localStorage(locStorage) {\n    this.__localStorage = locStorage;\n  }\n  get location() {\n    if (this.__location == null) {\n      this.__location = new MockLocation();\n    }\n    return this.__location;\n  }\n  set location(val) {\n    if (typeof val === \"string\") {\n      if (this.__location == null) {\n        this.__location = new MockLocation();\n      }\n      this.__location.href = val;\n    } else {\n      this.__location = val;\n    }\n  }\n  matchMedia(media) {\n    return {\n      media,\n      matches: false,\n      addListener: _handler => {},\n      removeListener: _handler => {},\n      addEventListener: (_type, _handler) => {},\n      removeEventListener: (_type, _handler) => {},\n      dispatchEvent: _ev => {},\n      onchange: null\n    };\n  }\n  get Node() {\n    if (this.__nodeCstr == null) {\n      const ownerDocument = this.document;\n      this.__nodeCstr = class extends MockNode2 {\n        constructor() {\n          super(ownerDocument, 0, \"test\", \"\");\n          throw new Error(\"Illegal constructor: cannot construct Node\");\n        }\n      };\n    }\n    return this.__nodeCstr;\n  }\n  get NodeList() {\n    if (this.__nodeListCstr == null) {\n      const ownerDocument = this.document;\n      this.__nodeListCstr = class extends MockNodeList {\n        constructor() {\n          super(ownerDocument, [], 0);\n          throw new Error(\"Illegal constructor: cannot construct NodeList\");\n        }\n      };\n    }\n    return this.__nodeListCstr;\n  }\n  get navigator() {\n    if (this.__navigator == null) {\n      this.__navigator = new MockNavigator();\n    }\n    return this.__navigator;\n  }\n  set navigator(nav) {\n    this.__navigator = nav;\n  }\n  get parent() {\n    return null;\n  }\n  prompt() {\n    return \"\";\n  }\n  open() {\n    return null;\n  }\n  get origin() {\n    return this.location.origin;\n  }\n  removeEventListener(type, handler) {\n    removeEventListener(this, type, handler);\n  }\n  requestAnimationFrame(callback) {\n    return this.setTimeout(() => {\n      callback(Date.now());\n    }, 0);\n  }\n  requestIdleCallback(callback) {\n    return this.setTimeout(() => {\n      callback({\n        didTimeout: false,\n        timeRemaining: () => 0\n      });\n    }, 0);\n  }\n  scroll(_x, _y) {}\n  scrollBy(_x, _y) {}\n  scrollTo(_x, _y) {}\n  get self() {\n    return this;\n  }\n  get sessionStorage() {\n    if (this.__sessionStorage == null) {\n      this.__sessionStorage = new MockStorage();\n    }\n    return this.__sessionStorage;\n  }\n  set sessionStorage(locStorage) {\n    this.__sessionStorage = locStorage;\n  }\n  setInterval(callback, ms, ...args) {\n    if (this.__timeouts == null) {\n      this.__timeouts = /* @__PURE__ */new Set();\n    }\n    ms = Math.min(ms, this.__maxTimeout);\n    if (this.__allowInterval) {\n      const intervalId = this.__setInterval(() => {\n        if (this.__timeouts) {\n          this.__timeouts.delete(intervalId);\n          try {\n            callback(...args);\n          } catch (e2) {\n            if (this.console) {\n              this.console.error(e2);\n            } else {\n              console.error(e2);\n            }\n          }\n        }\n      }, ms);\n      if (this.__timeouts) {\n        this.__timeouts.add(intervalId);\n      }\n      return intervalId;\n    }\n    const timeoutId = this.__setTimeout(() => {\n      if (this.__timeouts) {\n        this.__timeouts.delete(timeoutId);\n        try {\n          callback(...args);\n        } catch (e2) {\n          if (this.console) {\n            this.console.error(e2);\n          } else {\n            console.error(e2);\n          }\n        }\n      }\n    }, ms);\n    if (this.__timeouts) {\n      this.__timeouts.add(timeoutId);\n    }\n    return timeoutId;\n  }\n  setTimeout(callback, ms, ...args) {\n    if (this.__timeouts == null) {\n      this.__timeouts = /* @__PURE__ */new Set();\n    }\n    ms = Math.min(ms, this.__maxTimeout);\n    const timeoutId = this.__setTimeout(() => {\n      if (this.__timeouts) {\n        this.__timeouts.delete(timeoutId);\n        try {\n          callback(...args);\n        } catch (e2) {\n          if (this.console) {\n            this.console.error(e2);\n          } else {\n            console.error(e2);\n          }\n        }\n      }\n    }, ms);\n    if (this.__timeouts) {\n      this.__timeouts.add(timeoutId);\n    }\n    return timeoutId;\n  }\n  get top() {\n    return this;\n  }\n  get window() {\n    return this;\n  }\n  onanimationstart() {}\n  onanimationend() {}\n  onanimationiteration() {}\n  onabort() {}\n  onauxclick() {}\n  onbeforecopy() {}\n  onbeforecut() {}\n  onbeforepaste() {}\n  onblur() {}\n  oncancel() {}\n  oncanplay() {}\n  oncanplaythrough() {}\n  onchange() {}\n  onclick() {}\n  onclose() {}\n  oncontextmenu() {}\n  oncopy() {}\n  oncuechange() {}\n  oncut() {}\n  ondblclick() {}\n  ondrag() {}\n  ondragend() {}\n  ondragenter() {}\n  ondragleave() {}\n  ondragover() {}\n  ondragstart() {}\n  ondrop() {}\n  ondurationchange() {}\n  onemptied() {}\n  onended() {}\n  onerror() {}\n  onfocus() {}\n  onfocusin() {}\n  onfocusout() {}\n  onformdata() {}\n  onfullscreenchange() {}\n  onfullscreenerror() {}\n  ongotpointercapture() {}\n  oninput() {}\n  oninvalid() {}\n  onkeydown() {}\n  onkeypress() {}\n  onkeyup() {}\n  onload() {}\n  onloadeddata() {}\n  onloadedmetadata() {}\n  onloadstart() {}\n  onlostpointercapture() {}\n  onmousedown() {}\n  onmouseenter() {}\n  onmouseleave() {}\n  onmousemove() {}\n  onmouseout() {}\n  onmouseover() {}\n  onmouseup() {}\n  onmousewheel() {}\n  onpaste() {}\n  onpause() {}\n  onplay() {}\n  onplaying() {}\n  onpointercancel() {}\n  onpointerdown() {}\n  onpointerenter() {}\n  onpointerleave() {}\n  onpointermove() {}\n  onpointerout() {}\n  onpointerover() {}\n  onpointerup() {}\n  onprogress() {}\n  onratechange() {}\n  onreset() {}\n  onresize() {}\n  onscroll() {}\n  onsearch() {}\n  onseeked() {}\n  onseeking() {}\n  onselect() {}\n  onselectstart() {}\n  onstalled() {}\n  onsubmit() {}\n  onsuspend() {}\n  ontimeupdate() {}\n  ontoggle() {}\n  onvolumechange() {}\n  onwaiting() {}\n  onwebkitfullscreenchange() {}\n  onwebkitfullscreenerror() {}\n  onwheel() {}\n};\naddGlobalsToWindowPrototype(MockWindow.prototype);\nfunction resetWindowDefaults(win) {\n  win.__clearInterval = nativeClearInterval;\n  win.__clearTimeout = nativeClearTimeout;\n  win.__setInterval = nativeSetInterval;\n  win.__setTimeout = nativeSetTimeout;\n  win.__maxTimeout = 3e4;\n  win.__allowInterval = true;\n  win.URL = nativeURL;\n}\nfunction cloneWindow(srcWin, opts = {}) {\n  if (srcWin == null) {\n    return null;\n  }\n  const clonedWin = new MockWindow(false);\n  if (!opts.customElementProxy) {\n    srcWin.customElements = null;\n  }\n  if (srcWin.document != null) {\n    const clonedDoc = new MockDocument(false, clonedWin);\n    clonedWin.document = clonedDoc;\n    clonedDoc.documentElement = srcWin.document.documentElement.cloneNode(true);\n  } else {\n    clonedWin.document = new MockDocument(null, clonedWin);\n  }\n  return clonedWin;\n}\nfunction cloneDocument(srcDoc) {\n  if (srcDoc == null) {\n    return null;\n  }\n  const dstWin = cloneWindow(srcDoc.defaultView);\n  return dstWin.document;\n}\nfunction constrainTimeouts(win) {\n  win.__allowInterval = false;\n  win.__maxTimeout = 0;\n}\nfunction resetWindow(win) {\n  if (win != null) {\n    if (win.__timeouts) {\n      win.__timeouts.forEach(timeoutId => {\n        nativeClearInterval(timeoutId);\n        nativeClearTimeout(timeoutId);\n      });\n      win.__timeouts.clear();\n    }\n    if (win.customElements && win.customElements.clear) {\n      win.customElements.clear();\n    }\n    resetDocument(win.document);\n    resetPerformance(win.performance);\n    for (const key in win) {\n      if (win.hasOwnProperty(key) && key !== \"document\" && key !== \"performance\" && key !== \"customElements\") {\n        delete win[key];\n      }\n    }\n    resetWindowDefaults(win);\n    resetWindowDimensions(win);\n    resetEventListeners(win);\n    if (win.document != null) {\n      try {\n        win.document.defaultView = win;\n      } catch (e2) {}\n    }\n    win.fetch = null;\n    win.Headers = null;\n    win.Request = null;\n    win.Response = null;\n    win.FetchError = null;\n  }\n}\nfunction resetWindowDimensions(win) {\n  try {\n    win.devicePixelRatio = 1;\n    win.innerHeight = 768;\n    win.innerWidth = 1366;\n    win.pageXOffset = 0;\n    win.pageYOffset = 0;\n    win.screenLeft = 0;\n    win.screenTop = 0;\n    win.screenX = 0;\n    win.screenY = 0;\n    win.scrollX = 0;\n    win.scrollY = 0;\n    win.screen = {\n      availHeight: win.innerHeight,\n      availLeft: 0,\n      availTop: 0,\n      availWidth: win.innerWidth,\n      colorDepth: 24,\n      height: win.innerHeight,\n      keepAwake: false,\n      orientation: {\n        angle: 0,\n        type: \"portrait-primary\"\n      },\n      pixelDepth: 24,\n      width: win.innerWidth\n    };\n  } catch (e2) {}\n}\n\n// src/mock-doc/document.ts\nvar MockDocument = class _MockDocument extends MockHTMLElement {\n  constructor(html = null, win = null) {\n    super(null, null);\n    this.nodeName = \"#document\" /* DOCUMENT_NODE */;\n    this.nodeType = 9 /* DOCUMENT_NODE */;\n    this.defaultView = win;\n    this.cookie = \"\";\n    this.referrer = \"\";\n    this.appendChild(this.createDocumentTypeNode());\n    if (typeof html === \"string\") {\n      const parsedDoc = parseDocumentUtil(this, html);\n      const documentElement = parsedDoc.children.find(elm => elm.nodeName === \"HTML\");\n      if (documentElement != null) {\n        this.appendChild(documentElement);\n        setOwnerDocument(documentElement, this);\n      }\n    } else if (html !== false) {\n      const documentElement = new MockHTMLElement(this, \"html\");\n      this.appendChild(documentElement);\n      documentElement.appendChild(new MockHTMLElement(this, \"head\"));\n      documentElement.appendChild(new MockHTMLElement(this, \"body\"));\n    }\n  }\n  get dir() {\n    return this.documentElement.dir;\n  }\n  set dir(value) {\n    this.documentElement.dir = value;\n  }\n  get localName() {\n    throw new Error(\"Unimplemented\");\n  }\n  get location() {\n    if (this.defaultView != null) {\n      return this.defaultView.location;\n    }\n    return null;\n  }\n  set location(val) {\n    if (this.defaultView != null) {\n      this.defaultView.location = val;\n    }\n  }\n  get baseURI() {\n    const baseNode = this.head.childNodes.find(node => node.nodeName === \"BASE\");\n    if (baseNode) {\n      return baseNode.href;\n    }\n    return this.URL;\n  }\n  get URL() {\n    return this.location.href;\n  }\n  get styleSheets() {\n    return this.querySelectorAll(\"style\");\n  }\n  get scripts() {\n    return this.querySelectorAll(\"script\");\n  }\n  get forms() {\n    return this.querySelectorAll(\"form\");\n  }\n  get images() {\n    return this.querySelectorAll(\"img\");\n  }\n  get scrollingElement() {\n    return this.documentElement;\n  }\n  get documentElement() {\n    for (let i = this.childNodes.length - 1; i >= 0; i--) {\n      if (this.childNodes[i].nodeName === \"HTML\") {\n        return this.childNodes[i];\n      }\n    }\n    const documentElement = new MockHTMLElement(this, \"html\");\n    this.appendChild(documentElement);\n    return documentElement;\n  }\n  set documentElement(documentElement) {\n    for (let i = this.childNodes.length - 1; i >= 0; i--) {\n      if (this.childNodes[i].nodeType !== 10 /* DOCUMENT_TYPE_NODE */) {\n        this.childNodes[i].remove();\n      }\n    }\n    if (documentElement != null) {\n      this.appendChild(documentElement);\n      setOwnerDocument(documentElement, this);\n    }\n  }\n  get head() {\n    const documentElement = this.documentElement;\n    for (let i = 0; i < documentElement.childNodes.length; i++) {\n      if (documentElement.childNodes[i].nodeName === \"HEAD\") {\n        return documentElement.childNodes[i];\n      }\n    }\n    const head = new MockHTMLElement(this, \"head\");\n    documentElement.insertBefore(head, documentElement.firstChild);\n    return head;\n  }\n  set head(head) {\n    const documentElement = this.documentElement;\n    for (let i = documentElement.childNodes.length - 1; i >= 0; i--) {\n      if (documentElement.childNodes[i].nodeName === \"HEAD\") {\n        documentElement.childNodes[i].remove();\n      }\n    }\n    if (head != null) {\n      documentElement.insertBefore(head, documentElement.firstChild);\n      setOwnerDocument(head, this);\n    }\n  }\n  get body() {\n    const documentElement = this.documentElement;\n    for (let i = documentElement.childNodes.length - 1; i >= 0; i--) {\n      if (documentElement.childNodes[i].nodeName === \"BODY\") {\n        return documentElement.childNodes[i];\n      }\n    }\n    const body = new MockHTMLElement(this, \"body\");\n    documentElement.appendChild(body);\n    return body;\n  }\n  set body(body) {\n    const documentElement = this.documentElement;\n    for (let i = documentElement.childNodes.length - 1; i >= 0; i--) {\n      if (documentElement.childNodes[i].nodeName === \"BODY\") {\n        documentElement.childNodes[i].remove();\n      }\n    }\n    if (body != null) {\n      documentElement.appendChild(body);\n      setOwnerDocument(body, this);\n    }\n  }\n  appendChild(newNode) {\n    newNode.remove();\n    newNode.parentNode = this;\n    this.childNodes.push(newNode);\n    return newNode;\n  }\n  createComment(data) {\n    return new MockComment(this, data);\n  }\n  createAttribute(attrName) {\n    return new MockAttr(attrName.toLowerCase(), \"\");\n  }\n  createAttributeNS(namespaceURI, attrName) {\n    return new MockAttr(attrName, \"\", namespaceURI);\n  }\n  createElement(tagName) {\n    if (tagName === \"#document\" /* DOCUMENT_NODE */) {\n      const doc = new _MockDocument(false);\n      doc.nodeName = tagName;\n      doc.parentNode = null;\n      return doc;\n    }\n    return createElement(this, tagName);\n  }\n  createElementNS(namespaceURI, tagName) {\n    const elmNs = createElementNS(this, namespaceURI, tagName);\n    return elmNs;\n  }\n  createTextNode(text) {\n    return new MockTextNode(this, text);\n  }\n  createDocumentFragment() {\n    return new MockDocumentFragment(this);\n  }\n  createDocumentTypeNode() {\n    return new MockDocumentTypeNode(this);\n  }\n  getElementById(id) {\n    return getElementById(this, id);\n  }\n  getElementsByName(elmName) {\n    return getElementsByName(this, elmName.toLowerCase());\n  }\n  get title() {\n    const title = this.head.childNodes.find(elm => elm.nodeName === \"TITLE\");\n    if (title != null && typeof title.textContent === \"string\") {\n      return title.textContent.trim();\n    }\n    return \"\";\n  }\n  set title(value) {\n    const head = this.head;\n    let title = head.childNodes.find(elm => elm.nodeName === \"TITLE\");\n    if (title == null) {\n      title = this.createElement(\"title\");\n      head.appendChild(title);\n    }\n    title.textContent = value;\n  }\n};\nfunction createDocument(html = null) {\n  return new MockWindow(html).document;\n}\nfunction createFragment(html) {\n  return parseHtmlToFragment(html, null);\n}\nfunction resetDocument(doc) {\n  if (doc != null) {\n    resetEventListeners(doc);\n    const documentElement = doc.documentElement;\n    if (documentElement != null) {\n      resetElement(documentElement);\n      for (let i = 0, ii = documentElement.childNodes.length; i < ii; i++) {\n        const childNode = documentElement.childNodes[i];\n        resetElement(childNode);\n        childNode.childNodes.length = 0;\n      }\n    }\n    for (const key in doc) {\n      if (doc.hasOwnProperty(key) && !DOC_KEY_KEEPERS.has(key)) {\n        delete doc[key];\n      }\n    }\n    try {\n      doc.nodeName = \"#document\" /* DOCUMENT_NODE */;\n    } catch (e2) {}\n    try {\n      doc.nodeType = 9 /* DOCUMENT_NODE */;\n    } catch (e2) {}\n    try {\n      doc.cookie = \"\";\n    } catch (e2) {}\n    try {\n      doc.referrer = \"\";\n    } catch (e2) {}\n  }\n}\nvar DOC_KEY_KEEPERS = /* @__PURE__ */new Set([\"nodeName\", \"nodeType\", \"nodeValue\", \"ownerDocument\", \"parentNode\", \"childNodes\", \"_shadowRoot\"]);\nfunction getElementById(elm, id) {\n  const children = elm.children;\n  for (let i = 0, ii = children.length; i < ii; i++) {\n    const childElm = children[i];\n    if (childElm.id === id) {\n      return childElm;\n    }\n    const childElmFound = getElementById(childElm, id);\n    if (childElmFound != null) {\n      return childElmFound;\n    }\n  }\n  return null;\n}\nfunction getElementsByName(elm, elmName, foundElms = []) {\n  const children = elm.children;\n  for (let i = 0, ii = children.length; i < ii; i++) {\n    const childElm = children[i];\n    if (childElm.name && childElm.name.toLowerCase() === elmName) {\n      foundElms.push(childElm);\n    }\n    getElementsByName(childElm, elmName, foundElms);\n  }\n  return foundElms;\n}\nfunction setOwnerDocument(elm, ownerDocument) {\n  for (let i = 0, ii = elm.childNodes.length; i < ii; i++) {\n    elm.childNodes[i].ownerDocument = ownerDocument;\n    if (elm.childNodes[i].nodeType === 1 /* ELEMENT_NODE */) {\n      setOwnerDocument(elm.childNodes[i], ownerDocument);\n    }\n  }\n}\nexport { MockAttr, MockAttributeMap, MockComment, MockCustomEvent, MockDocument, MockElement, MockHTMLElement, MockHeaders, MockKeyboardEvent, MockMouseEvent, MockNode2 as MockNode, MockRequest, MockResponse, MockTextNode, MockWindow, NODE_TYPES, cloneAttributes, cloneDocument, cloneWindow, constrainTimeouts, createDocument, createFragment, parseHtmlToDocument, parseHtmlToFragment, patchWindow, resetDocument, serializeNodeToHtml, setupGlobal, teardownGlobal };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}